<?xml version="1.0" encoding="UTF-8"?>
<sequence name="BusinessLogicAddTemplateProfileMatrixSeq" onError="FaultSeq" trace="disable" xmlns="http://ws.apache.org/ns/synapse">
    <log level="custom" category="DEBUG">
        <property name="BusinessLogicAddTemplateProfileMatrixSeq.*" value="Inicio.." />
        <property name="transactionalProfileId" expression="//transactionalProfileId" />
    </log>
    <property name="uri.var.transactionalProfileId" expression="//transactionalProfileId" />
    <filter regex="true" source="boolean($ctx:uri.var.transactionalProfileId)">
        <then>
            <call>
                <endpoint template="HTTPEndpointGetTemplate" uri="{uri.var.enterpriseIntegratorHost}/api.centraid/application/TemplateProfileMatrix?transactionalProfile.id={uri.var.transactionalProfileId}" />
            </call>
            <filter regex="200" source="get-property('axis2', 'HTTP_SC')">
                <then>
                    <!-- TemplateProfileMatrix -->
                    <filter regex="true" source="boolean(//templateProfileMatrixList/templateProfileMatrix/id/text())">
                        <then>
                            <log level="custom" category="DEBUG">
                                <property name="BusinessLogicAddTemplateProfileMatrixSeq.*" value="Inicio.2." />
                            </log>
                            <property name="templateProfileMatrixId" expression="(//templateProfileMatrixList/templateProfileMatrix/id)[1]/text()" />
                            <property name="uri.var.matrixId" expression="(//templateProfileMatrixList/templateProfileMatrix/matrix/id)[1]/text()" />
                        </then>
                        <else>
                            <log level="custom" category="DEBUG">
                                <property name="BusinessLogicAddTemplateProfileMatrixSeq.*" value="Inicio.3." />
                            </log>
                            <call>
                                <endpoint template="HTTPEndpointGetTemplate" uri="{uri.var.enterpriseIntegratorHost}/api.centraid/application/Matrix?applicationGroup.code=LOGICIEL" />
                            </call>
                            <filter regex="200" source="get-property('axis2', 'HTTP_SC')">
                                <then>
                                    <property name="uri.var.matrixId" expression="(//matrixList/matrix/id)[1]/text()" />
                                    <payloadFactory media-type="json">
                                        <format>
                                            {
                                                "templateProfileMatrix": {
                                                    "transactionalProfile": {
                                                        "id": $1
                                                    },
                                                    "matrix": {
                                                        "id": $2
                                                    }
                                                }
                                            }
                                        </format>
                                        <args>
                                            <arg evaluator="xml" expression="$ctx:uri.var.transactionalProfileId" />
                                            <arg evaluator="xml" expression="$ctx:uri.var.matrixId" />
                                        </args>
                                    </payloadFactory>
                                    <call>
                                        <endpoint template="HTTPEndpointPostTemplate" uri="{uri.var.enterpriseIntegratorHost}/api.centraid/application/TemplateProfileMatrix" />
                                    </call>
                                    <filter regex="200" source="get-property('axis2', 'HTTP_SC')">
                                        <then>
                                            <property name="templateProfileMatrixId" expression="//id" />
                                        </then>
                                        <else>
                                            <property name="fault" value="Error create TemplateProfileMatrix" />
                                            <sequence key="FaultSeq" />
                                        </else>
                                    </filter>
                                </then>
                                <else>
                                    <property name="fault" value="Error get  Matrix" />
                                    <sequence key="FaultSeq" />
                                </else>
                            </filter>
                        </else>
                    </filter>
                    <log level="custom" category="DEBUG">
                        <property name="BusinessLogicAddTemplateProfileMatrixSeq.*" value="Inicio.2.1." />
                        <property name="templateProfileMatrixId" expression="$ctx:templateProfileMatrixId"/>
                    </log>
                    <!-- TemplateProfileMatrixGroup -->
                    <payloadFactory media-type="json">
                        <format>
                            {
                                "templateProfileMatrixGroup": {
                                    "templateProfileMatrix": {
                                        "id": $1
                                    }
                                }
                            }
                        </format>
                        <args>
                            <arg evaluator="xml" expression="$ctx:templateProfileMatrixId" />
                        </args>
                    </payloadFactory>
                    <call>
                        <endpoint template="HTTPEndpointPostTemplate" uri="{uri.var.enterpriseIntegratorHost}/api.centraid/application/TemplateProfileMatrixGroup" />
                    </call>
                    <filter regex="200" source="get-property('axis2', 'HTTP_SC')">
                        <then>
                            <property name="templateProfileMatrixGroupId" expression="//id" />
                            <call>
                                <endpoint template="HTTPEndpointGetTemplate" uri="{uri.var.enterpriseIntegratorHost}/api.centraid/application/MatrixDetail?matrix.id={uri.var.matrixId}&amp;orderby=ordinal" />
                            </call>
                            <filter regex="200" source="get-property('axis2', 'HTTP_SC')">
                                <then>
                                    <!-- iterate matriz detail y crear templateProfileMatrixDetail -->
                                    <iterate expression="//matrixDetail" id="matrixDetailId" sequential="true" >
                                        <target>
                                            <sequence>
                                                <payloadFactory media-type="json">
                                                    <format>
                                                        {
                                                            "templateProfileMatrixDetail": {
                                                                "templateProfileMatrixGroup": {
                                                                    "id": $1
                                                                },
                                                                "matrixDetail" : {
                                                                    "id" : $2
                                                                },
                                                                "value" : null,
                                                                "ordinal" : $3
                                                            }
                                                        }                                    
                                                    </format>
                                                    <args>
                                                        <arg evaluator="xml" expression="$ctx:templateProfileMatrixGroupId" />
                                                        <arg evaluator="xml" expression="//matrixDetail/id/text()" />
                                                        <arg evaluator="xml" expression="//matrixDetail/ordinal/text()" />
                                                    </args>
                                                </payloadFactory>
                                                <call>
                                                    <endpoint template="HTTPEndpointPostTemplate" uri="{uri.var.enterpriseIntegratorHost}/api.centraid/application/TemplateProfileMatrixDetail" />
                                                </call>
                                                <filter regex="200" source="get-property('axis2', 'HTTP_SC')">
                                                    <then></then>
                                                    <else>
                                                        <property name="fault" value="Error create TemplateProfileMatrixDetail" />
                                                        <sequence key="FaultSeq" />
                                                    </else>
                                                </filter>
                                            </sequence>
                                        </target>
                                    </iterate>
                                    <aggregate id="matrixDetailId">
                                        <completeCondition>
                                            <messageCount min="-1" max="-1" />
                                        </completeCondition>
                                        <onComplete expression="$body/*">
                                            <log level="custom" category="DEBUG">
                                                <property name="agregado" value="ok" />
                                            </log>
                                        </onComplete>
                                    </aggregate>
                                    <payloadFactory media-type="json">
                                        <format>
                                            {
                                                "result": "0",
                                                "message" : "Operation performed successfully"
                                            }
                                        </format>
                                        <args />
                                    </payloadFactory>
                                </then>
                                <else>
                                    <property name="fault" value="Error get MatrixDetail" />
                                    <sequence key="FaultSeq" />
                                </else>
                            </filter>
                        </then>
                        <else>
                            <property name="fault" value="Error create TemplateProfileMatrixGroup" />
                            <sequence key="FaultSeq" />
                        </else>
                    </filter>
                </then>
                <else>
                    <property name="fault" value="Error get  TemplateProfileMatrixSimple" />
                    <sequence key="FaultSeq" />
                </else>
            </filter>
        </then>
        <else>
            <payloadFactory media-type="json">
                <format>
                    {
                        "result": "-1",
                        "message" : "transactionalProfileId is missing"
                    }
                </format>
                <args />
            </payloadFactory>
        </else>
    </filter>
    <property name="HTTP_SC" scope="axis2" type="STRING" value="200" />
    <log level="custom" category="DEBUG">
        <property name="BusinessLogicAddTemplateProfileMatrixSeq.*" value="Fin.." />
    </log>
</sequence>