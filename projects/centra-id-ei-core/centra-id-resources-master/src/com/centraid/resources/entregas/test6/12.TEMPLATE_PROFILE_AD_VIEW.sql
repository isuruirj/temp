DROP VIEW SCH_CENTRA_ID.TEMPLATE_PROFILES_AD_VW
GO
CREATE VIEW SCH_CENTRA_ID.TEMPLATE_PROFILES_AD_VW (TRANSACTIONAL_PROFILE_ID, FIELD_CODE, FIELD_VALUE) AS 
SELECT TRANSACTIONAL_PROFILE_ID, FIELD_CODE, FIELD_VALUE  
FROM   
   (SELECT TRANSACTIONAL_PROFILE_ID,
     CAST(ACCOUNT_CONTAINER AS VARCHAR(1000)) ACCOUNT_CONTAINER,
     CAST(ACTIVATE_MAIL AS VARCHAR(1000)) ACTIVATE_MAIL,
     CAST(ALLOW_LOGON_TO_TERMINAL_SERVER AS VARCHAR(1000)) ALLOW_LOGON_TO_TERMINAL_SERVER,
     CAST(CONNECT_FOLLOWING_DRIVE AS VARCHAR(1000)) CONNECT_FOLLOWING_DRIVE,
     CAST(EXCHANGE_ADVANCED_ACTIVE_SYNC AS VARCHAR(1000)) EXCHANGE_ADVANCED_ACTIVE_SYNC,
     CAST(EXCHANGE_ADVANCED_OWA AS VARCHAR(1000)) EXCHANGE_ADVANCED_OWA,
     CAST(GROUP_AD AS VARCHAR(1000)) GROUP_AD,
     CAST(MAILBOX_TYPE AS VARCHAR(1000)) MAILBOX_TYPE,
     CAST(PASSWORD_NOT_EXPIRE AS VARCHAR(1000)) PASSWORD_NOT_EXPIRE,
     CAST(SHOULD_CHANGE_PASSWORD_FIRST_TIME AS VARCHAR(1000)) SHOULD_CHANGE_PASSWORD_FIRST_TIME,
     CAST(SHOULD_NOT_CHANGE_PASSWORD AS VARCHAR(1000)) SHOULD_NOT_CHANGE_PASSWORD,
     CAST(SIP AS VARCHAR(1000)) SIP,
     CAST(TERMINAL_SERVICES_HOME_DIRECTORY AS VARCHAR(1000)) TERMINAL_SERVICES_HOME_DIRECTORY,
     CAST(TERMINAL_SERVICES_PROFILE AS VARCHAR(1000)) TERMINAL_SERVICES_PROFILE
   FROM SCH_CENTRA_ID.TEMPLATE_PROFILES_AD) p  
UNPIVOT  
   (FIELD_VALUE FOR FIELD_CODE IN   
      (
        ACCOUNT_CONTAINER,
        ACTIVATE_MAIL,
        ALLOW_LOGON_TO_TERMINAL_SERVER,
        CONNECT_FOLLOWING_DRIVE,
        EXCHANGE_ADVANCED_ACTIVE_SYNC,
        EXCHANGE_ADVANCED_OWA,
        GROUP_AD,
        MAILBOX_TYPE,
        PASSWORD_NOT_EXPIRE,
        SHOULD_CHANGE_PASSWORD_FIRST_TIME,
        SHOULD_NOT_CHANGE_PASSWORD,
        SIP,
        TERMINAL_SERVICES_HOME_DIRECTORY,
        TERMINAL_SERVICES_PROFILE
      )  
) AS unpvt
GO


DROP VIEW SCH_CENTRA_ID.TRANSACTIONAL_PROFILES_REPORT_VW
GO
CREATE VIEW SCH_CENTRA_ID.TRANSACTIONAL_PROFILES_REPORT_VW (ID, VALID, TRANSACTIONAL_PROFILE_CODE, TRANSACTIONAL_PROFILE_NAME, APPLICATION_CODE, APPLICATION_NAME, APPLICATION_AUTOMATIC, RISK_LEVEL, COMMENTS, FIELD_NAME, FIELD_VALUE, STATUS) AS 
SELECT 
TP.ID ID,
1 VALID,
TP.CODE TRANSACTIONAL_PROFILE_CODE, 
TP.NAME TRANSACTIONAL_PROFILE_NAME,
A.CODE APPLICATION_CODE,
A.NAME APPLICATION_NAME,
A.AUTOMATIC_PROVISION APPLICATION_AUTOMATIC,
C_NIVREGI.NAME RISK_LEVEL,
TP.COMMENTS COMMENTS,
F.NAME FIELD_NAME,
TR.FIELD_VALUE FIELD_VALUE,
CASE TP.VALID WHEN 1 THEN 'ACTIVO' ELSE 'ELIMINADO'END STATUS
FROM SCH_CENTRA_ID.TRANSACTIONAL_PROFILES TP 
LEFT JOIN SCH_CENTRA_ID.APPLICATIONS A ON TP.APPLICATION_ID = A.ID
LEFT JOIN SCH_CENTRA_ID.APPLICATIONS_GROUP AG ON A.APPLICATION_GROUP_ID=AG.ID
LEFT JOIN SCH_CENTRA_ID.TEMPLATE_PROFILES TR ON TR.TRANSACTIONAL_PROFILE_ID = TP.ID
LEFT JOIN SCH_CENTRA_ID.FIELDS F ON F.ID = TR.FIELD_ID
LEFT JOIN SCH_CENTRA_ID.CATALOGS C_NIVREGI ON TP.CATALOG_RISK_LEVEL_ID=C_NIVREGI.ID
UNION ALL
SELECT 
TP.ID ID,
1 VALID,
TP.CODE TRANSACTIONAL_PROFILE_CODE, 
TP.NAME TRANSACTIONAL_PROFILE_NAME,
A.CODE APPLICATION_CODE,
A.NAME APPLICATION_NAME,
A.AUTOMATIC_PROVISION APPLICATION_AUTOMATIC,
C_NIVREGI.NAME RISK_LEVEL,
TP.COMMENTS COMMENTS,
TR.FIELD_CODE FIELD_NAME,
TR.FIELD_VALUE FIELD_VALUE,
CASE TP.VALID WHEN 1 THEN 'ACTIVO' ELSE 'ELIMINADO'END STATUS
FROM SCH_CENTRA_ID.TRANSACTIONAL_PROFILES TP 
JOIN SCH_CENTRA_ID.APPLICATIONS A ON TP.APPLICATION_ID = A.ID
JOIN SCH_CENTRA_ID.APPLICATIONS_GROUP AG ON A.APPLICATION_GROUP_ID=AG.ID
JOIN SCH_CENTRA_ID.TEMPLATE_PROFILES_AD_VW TR ON TR.TRANSACTIONAL_PROFILE_ID = TP.ID
LEFT JOIN SCH_CENTRA_ID.CATALOGS C_NIVREGI ON TP.CATALOG_RISK_LEVEL_ID=C_NIVREGI.ID;
GO


update SCH_CENTRA_ID.DEFAULT_PROFILES set NAME_POSITION='*' where NAME_POSITION is null OR datalength(NAME_POSITION) =0
GO
update SCH_CENTRA_ID.DEFAULT_PROFILES set NAME_AREA='*' where NAME_AREA is null OR datalength(NAME_AREA) =0
GO
update SCH_CENTRA_ID.DEFAULT_PROFILES set NAME_COMPANY='*' where NAME_COMPANY is null OR datalength(NAME_COMPANY) =0
GO
update SCH_CENTRA_ID.DEFAULT_PROFILES set NAME_DEPARTMENT='*' where NAME_DEPARTMENT is null OR datalength(NAME_DEPARTMENT) =0
GO
update SCH_CENTRA_ID.DEFAULT_PROFILES set NAME_DIVISION='*' where NAME_DIVISION is null OR datalength(NAME_DIVISION) =0
GO



DROP VIEW SCH_CENTRA_ID.DEFAULT_PROFILES_REPORT_VW
GO
CREATE VIEW SCH_CENTRA_ID.DEFAULT_PROFILES_REPORT_VW (ID, VALID, GLOBAL_PROFILE_CODE, GLOBAL_PROFILE_NAME, DEFAULT_PROFILE_COMPANY_CODE, DEFAULT_PROFILE_DIVISION_CODE, DEFAULT_PROFILE_AREA_CODE, DEFAULT_PROFILE_DEPARTMENT_CODE, DEFAULT_PROFILE_POSITION_NAME, GLOBAL_PROFILE_STATUS, DEFAULT_PROFILE_COMPANY_NAME, DEFAULT_PROFILE_DIVISION_NAME, DEFAULT_PROFILE_AREA_NAME, DEFAULT_PROFILE_DEPARTMENT_NAME) AS 
SELECT 
DF.ID ID,
1 VALID,
GP.CODE GLOBAL_PROFILE_CODE,
GP.NAME GLOBAL_PROFILE_NAME,
DF.CODE_COMPANY DEFAULT_PROFILE_COMPANY_CODE,
DF.CODE_DIVISION DEFAULT_PROFILE_DIVISION_CODE,
DF.CODE_AREA DEFAULT_PROFILE_AREA_CODE,
DF.CODE_DEPARTMENT DEFAULT_PROFILE_DEPARTMENT_CODE,
CASE DF.NAME_POSITION WHEN '' THEN '*' ELSE DF.NAME_POSITION END DEFAULT_PROFILE_POSITION_NAME,
CASE GP.VALID WHEN  1 THEN GP.STATUS ELSE 'ELIMINADO' END  GLOBAL_PROFILE_STATUS,
CASE DF.NAME_COMPANY WHEN '' THEN '*' ELSE DF.NAME_COMPANY END DEFAULT_PROFILE_COMPANY_NAME,
CASE DF.NAME_DIVISION WHEN '' THEN '*' ELSE  DF.NAME_DIVISION END DEFAULT_PROFILE_DIVISION_NAME,
CASE DF.NAME_AREA WHEN '' THEN '*' ELSE DF.NAME_AREA END  DEFAULT_PROFILE_AREA_NAME,
CASE DF.NAME_DEPARTMENT WHEN '' THEN '*' ELSE DF.NAME_DEPARTMENT END DEFAULT_PROFILE_DEPARTMENT_NAME
FROM SCH_CENTRA_ID.DEFAULT_PROFILES DF
JOIN SCH_CENTRA_ID.GLOBAL_PROFILES GP ON DF.GLOBAL_PROFILE_ID=GP.ID
WHERE 
DF.VALID=1
GO

IF NOT EXISTS (SELECT 1
        FROM INFORMATION_SCHEMA.COLUMNS
        WHERE upper(TABLE_SCHEMA) = 'SCH_CENTRA_ID'
        AND upper(TABLE_NAME) = 'COSTS_CENTERS'
        AND upper(COLUMN_NAME) = 'CITY')
BEGIN
	ALTER TABLE "SCH_CENTRA_ID"."COSTS_CENTERS" ADD CITY nvarchar(100)
	END
GO

UPDATE "SCH_CENTRA_ID"."COSTS_CENTERS" SET CITY='Quito'
GO

update SCH_CENTRA_ID.COSTS_CENTERS set FILTEr  = code + ' '+ name
GO

IF NOT EXISTS (SELECT 1
        FROM INFORMATION_SCHEMA.COLUMNS
        WHERE upper(TABLE_SCHEMA) = 'SCH_CENTRA_ID'
        AND upper(TABLE_NAME) = 'USERDATA'
        AND upper(COLUMN_NAME) = 'TIER')
BEGIN
	ALTER TABLE "SCH_CENTRA_ID"."USERDATA" ADD TIER nvarchar(10)
	END
GO

IF NOT EXISTS (SELECT 1
        FROM INFORMATION_SCHEMA.COLUMNS
        WHERE upper(TABLE_SCHEMA) = 'SCH_CENTRA_ID'
        AND upper(TABLE_NAME) = 'USERDATA'
        AND upper(COLUMN_NAME) = 'MAILBOX')
BEGIN
	ALTER TABLE "SCH_CENTRA_ID"."USERDATA" ADD MAILBOX int
	END
GO


