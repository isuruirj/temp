<data enableBatchRequests="true" enableBoxcarring="true" name="CatalogsDSS" serviceNamespace="centra-id.com" transports="https" disableLegacyBoxcarringMode="true">
    <config id="default">
        <property name="carbon_datasource_name">CENTRA_ID</property>
    </config>
    <query id="select_with_code_catalog_and_type_catalog_query" useConfig="default">
        <sql>
        SELECT id, code, name, predetermined, ordinal, value_text, value_number, value_date, value_boolean, catalog_type_id 
        FROM sch_centra_id.catalogs 
        WHERE 
	        catalog_type_id IN (select id from sch_centra_id.CATALOGS_TYPES where code=? ) AND 
	        valid=1 AND
	        code=?
        </sql>
        <param name="typeCatalogCode" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="catalogCode" ordinal="2" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <result element="Catalogs" rowName="Catalog">
            <element column="id" name="id" xsdType="xs:long"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="predetermined" name="predetermined" xsdType="xs:integer"/>
            <element column="ordinal" name="ordinal" xsdType="xs:integer"/>
            <element column="value_text" name="valueText" xsdType="xs:string"/>
            <element column="value_number" name="valueNumber" xsdType="xs:integer"/>
            <element column="value_date" name="valueDate" xsdType="xs:dateTime"/>
            <element column="value_boolean" name="valueBoolean" xsdType="xs:integer"/>
            <element column="catalog_type_id" name="typeCatalogId" xsdType="xs:long"/>
        </result>
    </query>
    <query id="select_with_code_type_catalogs_query" useConfig="default">
        <sql>SELECT id, code, name, predetermined, ordinal, value_text, value_number, value_date, value_boolean, catalog_type_id FROM sch_centra_id.catalogs WHERE catalog_type_id IN (select id from sch_centra_id.CATALOGS_TYPES where code=? ) AND valid=1</sql>
        <param name="typeCatalogCode" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <result element="Catalogs" rowName="Catalog">
            <element column="id" name="id" xsdType="xs:long"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="predetermined" name="predetermined" xsdType="xs:integer"/>
            <element column="ordinal" name="ordinal" xsdType="xs:integer"/>
            <element column="value_text" name="valueText" xsdType="xs:string"/>
            <element column="value_number" name="valueNumber" xsdType="xs:integer"/>
            <element column="value_date" name="valueDate" xsdType="xs:dateTime"/>
            <element column="value_boolean" name="valueBoolean" xsdType="xs:integer"/>
            <element column="catalog_type_id" name="typeCatalogId" xsdType="xs:long"/>
        </result>
    </query>
    <query id="select_with_key_type_catalogs_query" useConfig="default">
        <sql>SELECT id, code, name, predetermined, ordinal, value_text, value_number, value_date, value_boolean, catalog_type_id FROM sch_centra_id.catalogs WHERE catalog_type_id=? AND valid=1</sql>
        <param name="typeCatalogId" ordinal="1" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
        <result element="Catalogs" rowName="Catalog">
            <element column="id" name="id" xsdType="xs:long"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="predetermined" name="predetermined" xsdType="xs:integer"/>
            <element column="ordinal" name="ordinal" xsdType="xs:integer"/>
            <element column="value_text" name="valueText" xsdType="xs:string"/>
            <element column="value_number" name="valueNumber" xsdType="xs:integer"/>
            <element column="value_date" name="valueDate" xsdType="xs:dateTime"/>
            <element column="value_boolean" name="valueBoolean" xsdType="xs:integer"/>
            <element column="catalog_type_id" name="typeCatalogId" xsdType="xs:long"/>
        </result>
    </query>
    <query id="select_with_key_catalogs_query" useConfig="default">
        <sql>SELECT id, code, name, predetermined, ordinal, value_text, value_number, value_date, value_boolean, catalog_type_id FROM sch_centra_id.catalogs WHERE id=? AND valid=1</sql>
        <param name="id" ordinal="1" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
        <result element="Catalogs" rowName="Catalog">
            <element column="id" name="id" xsdType="xs:long"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="predetermined" name="predetermined" xsdType="xs:integer"/>
            <element column="ordinal" name="ordinal" xsdType="xs:integer"/>
            <element column="value_text" name="valueText" xsdType="xs:string"/>
            <element column="value_number" name="valueNumber" xsdType="xs:integer"/>
            <element column="value_date" name="valueDate" xsdType="xs:dateTime"/>
            <element column="value_boolean" name="valueBoolean" xsdType="xs:integer"/>
            <element column="catalog_type_id" name="typesCatalogsId" xsdType="xs:long"/>
        </result>
    </query>
    <query id="select_all_catalogs_query" useConfig="default">
        <sql>SELECT id, code, name, predetermined, ordinal, value_text, value_number, value_date, value_boolean, catalog_type_id FROM sch_centra_id.catalogs WHERE valid=1</sql>
        <result element="Catalogs" rowName="Catalog">
            <element column="id" name="id" xsdType="xs:long"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="predetermined" name="predetermined" xsdType="xs:integer"/>
            <element column="ordinal" name="ordinal" xsdType="xs:integer"/>
            <element column="value_text" name="valueText" xsdType="xs:string"/>
            <element column="value_number" name="valueNumber" xsdType="xs:integer"/>
            <element column="value_date" name="valueDate" xsdType="xs:dateTime"/>
            <element column="value_boolean" name="valueBoolean" xsdType="xs:integer"/>
            <element column="catalog_type_id" name="typesCatalogsId" xsdType="xs:long"/>
        </result>
    </query>
    <query id="select_is_used_catalog_query" useConfig="default">
        <sql>
			select catalog from (
				select distinct catalog_company_type_id as catalog_id,'COMPAÃ‘IAS' as catalog
				  from sch_centra_id.companies
				union all
				select distinct catalog_company_type_id as catalog_id,'JERARQUIAS' as catalog
				  from sch_centra_id.hierarchies
				union all
				select distinct catalog_organizational_structure_id as catalog_id,'ESTRUCTURA ORGANIZACIONAL' as catalog
				  from sch_centra_id.organizations_structures
			) a where a.catalog_id=?
          </sql>
        <param name="catalogId" ordinal="1" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
        <result element="Catalogs" rowName="Catalog">
            <element column="catalog" name="catalog" xsdType="xs:string"/>
        </result>
    </query>
    <query id="delete_catalogs_query" useConfig="default">
        <sql>UPDATE sch_centra_id.catalogs SET valid=0 WHERE id=?</sql>
        <param name="id" ordinal="1" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
    </query>
    <query id="insert_catalogs_not_exist_code_and_name_query" returnGeneratedKeys="true" useConfig="default" keyColumns="1">
        <sql>
          insert into sch_centra_id.catalogs (code,name,predetermined,valid,catalog_type_id)
             select ?,?,0,1,(select id from sch_centra_id.CATALOGS_TYPES where code=?) WHERE NOT EXISTS
                 (
                   select 1 from  sch_centra_id.catalogs where code = ? and name = ?
                 )
        </sql>
        <result element="GeneratedKeys" rowName="Entry" useColumnNumbers="true">
            <element column="1" name="id" xsdType="xs:long"/>
        </result>
        <param name="code" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="name" ordinal="2" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="typeCatalogCode" ordinal="3" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="codeValidate" ordinal="4" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="nameValidate" ordinal="5" paramType="SCALAR" sqlType="STRING" type="IN"/>
    </query>
    <query id="insert_catalogs_not_exist_name_query" returnGeneratedKeys="true" useConfig="default" keyColumns="1">
        <sql>
          insert into sch_centra_id.catalogs (code,name,predetermined,valid,catalog_type_id)
             select SUBSTRING(cast(NEWID() as varchar(100)),1,18),?,0,1,(select id from sch_centra_id.CATALOGS_TYPES where code=?) WHERE NOT EXISTS
                 (
                   select 1 from  sch_centra_id.catalogs where name = ?
                 )
        </sql>
        <result element="GeneratedKeys" rowName="Entry" useColumnNumbers="true">
            <element column="1" name="id" xsdType="xs:long"/>
        </result>
        <param name="name" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="typeCatalogCode" ordinal="2" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="nameValidate" ordinal="3" paramType="SCALAR" sqlType="STRING" type="IN"/>
    </query>
    <query id="insert_catalogs_query" returnGeneratedKeys="true" useConfig="default" keyColumns="1">
        <sql>INSERT INTO sch_centra_id.catalogs(code,name,predetermined,ordinal,value_text,value_number,value_date,value_boolean,catalog_type_id,valid) VALUES(?,?,?,?,?,?,?,?,?,?)</sql>
        <result element="GeneratedKeys" rowName="Entry" useColumnNumbers="true">
            <element column="1" name="id" xsdType="xs:long"/>
        </result>
        <param name="code" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="name" ordinal="2" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="predetermined" ordinal="3" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
        <param defaultValue="#{NULL}" name="ordinal" ordinal="4" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
        <param defaultValue="#{NULL}" name="valueText" ordinal="5" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param defaultValue="#{NULL}" name="valueNumber" ordinal="6" paramType="SCALAR" sqlType="NUMERIC" type="IN"/>
        <param defaultValue="#{NULL}" name="valueDate" ordinal="7" paramType="SCALAR" sqlType="TIMESTAMP" type="IN"/>
        <param defaultValue="#{NULL}" name="valueBoolean" ordinal="8" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
        <param name="typesCatalogsId" ordinal="9" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
        <param defaultValue="1" name="valid" ordinal="10" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
    </query>
    <query id="update_catalogs_query" useConfig="default">
        <sql>UPDATE sch_centra_id.catalogs SET code=?,name=?,predetermined=?,ordinal=?,value_text=?,value_number=?,value_date=?,value_boolean=?,catalog_type_id=? WHERE id=?</sql>
        <param name="code" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="name" ordinal="2" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="predetermined" ordinal="3" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
        <param defaultValue="#{NULL}" name="ordinal" ordinal="4" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
        <param defaultValue="#{NULL}" name="valueText" ordinal="5" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param defaultValue="#{NULL}" name="valueNumber" ordinal="6" paramType="SCALAR" sqlType="NUMERIC" type="IN"/>
        <param defaultValue="#{NULL}" name="valueDate" ordinal="7" paramType="SCALAR" sqlType="TIMESTAMP" type="IN"/>
        <param defaultValue="#{NULL}" name="valueBoolean" ordinal="8" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
        <param name="typesCatalogsId" ordinal="9" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
        <param name="id" ordinal="10" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
    </query>
    <query id="dynamic_query" useConfig="default">
        <sql>
           SELECT 
				id,
				code,
				name,
				predetermined,
				ordinal,
				value_text,
				value_number,
				value_date,
				value_boolean,
				catalog_type_id,
				valid
           FROM sch_centra_id.catalogs 
               
               :whereclause  
               
     
         </sql>
        <result element="catalogs" rowName="catalog">
            <element column="id" name="id" xsdType="xs:long"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="predetermined" name="predetermined" xsdType="xs:integer"/>
            <element column="ordinal" name="ordinal" xsdType="xs:integer"/>
            <element column="value_text" name="valueText" xsdType="xs:string"/>
            <element column="value_number" name="valueNumber" xsdType="xs:integer"/>
            <element column="value_date" name="valueDate" xsdType="xs:dateTime"/>
            <element column="value_boolean" name="valueBoolean" xsdType="xs:integer"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
            <call-query href="select_with_key_types_catalogs_query">
                <with-param column="catalog_type_id" name="id"/>
            </call-query>
        </result>
        <param name="whereclause" sqlType="QUERY_STRING"/>
    </query>
    <query id="dynamic_query_count" useConfig="default">
        <sql>
           SELECT 
              count(*) as count
           FROM 
               sch_centra_id.catalogs a join sch_centra_id.CATALOGS_TYPES b on a.catalog_type_id=b.id           
           :whereclause
           
         </sql>
        <result element="Catalogs" rowName="Catalog">
            <element column="count" name="count" xsdType="xs:long"/>
        </result>
        <param name="whereclause" sqlType="QUERY_STRING"/>
    </query>
    <query id="select_with_key_types_catalogs_query" useConfig="default">
        <sql>SELECT id, code, name, sort_type, editable FROM sch_centra_id.CATALOGS_TYPES WHERE id=? AND valid=1</sql>
        <result element="catalogType">
            <element column="id" name="id" xsdType="xs:long"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="sort_type" name="sortType" xsdType="xs:string"/>
            <element column="editable" name="editable" xsdType="xs:integer"/>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <operation name="insert_catalogs_operation">
        <call-query href="insert_catalogs_query">
            <with-param name="valid" query-param="valid"/>
            <with-param name="valueText" query-param="valueText"/>
            <with-param name="valueBoolean" query-param="valueBoolean"/>
            <with-param name="code" query-param="code"/>
            <with-param name="predetermined" query-param="predetermined"/>
            <with-param name="name" query-param="name"/>
            <with-param name="valueNumber" query-param="valueNumber"/>
            <with-param name="typesCatalogsId" query-param="typesCatalogsId"/>
            <with-param name="ordinal" query-param="ordinal"/>
            <with-param name="valueDate" query-param="valueDate"/>
        </call-query>
    </operation>
    <operation name="insert_catalogs_not_exist_code_and_name_operation">
        <call-query href="insert_catalogs_not_exist_code_and_name_query">
            <with-param name="code" query-param="code"/>
            <with-param name="name" query-param="name"/>
            <with-param name="typeCatalogCode" query-param="typeCatalogCode"/>
            <with-param name="codeValidate" query-param="codeValidate"/>
            <with-param name="nameValidate" query-param="nameValidate"/>
        </call-query>
    </operation>
    <operation name="insert_catalogs_not_exist_name_operation">
        <call-query href="insert_catalogs_not_exist_name_query">
            <with-param name="name" query-param="name"/>
            <with-param name="typeCatalogCode" query-param="typeCatalogCode"/>
            <with-param name="nameValidate" query-param="nameValidate"/>
        </call-query>
    </operation>
    <operation name="select_with_key_catalogs_operation">
        <call-query href="select_with_key_catalogs_query">
            <with-param name="id" query-param="id"/>
        </call-query>
    </operation>
    <operation name="select_with_key_type_catalogs_operation">
        <call-query href="select_with_key_type_catalogs_query">
            <with-param name="typeCatalogId" query-param="typeCatalogId"/>
        </call-query>
    </operation>
    <operation name="select_with_code_type_catalogs_operation">
        <call-query href="select_with_code_type_catalogs_query">
            <with-param name="typeCatalogCode" query-param="typeCatalogCode"/>
        </call-query>
    </operation>
    <operation name="select_with_code_catalog_and_type_catalog_operation">
        <call-query href="select_with_code_catalog_and_type_catalog_query">
            <with-param name="typeCatalogCode" query-param="typeCatalogCode"/>
            <with-param name="catalogCode" query-param="catalogCode"/>
        </call-query>
    </operation>
    <operation name="select_is_used_catalog_operation">
        <call-query href="select_is_used_catalog_query">
            <with-param name="catalogId" query-param="catalogId"/>
        </call-query>
    </operation>
    <operation name="select_all_catalogs_operation">
        <call-query href="select_all_catalogs_query"/>
    </operation>
    <operation name="delete_catalogs_operation">
        <call-query href="delete_catalogs_query">
            <with-param name="id" query-param="id"/>
        </call-query>
    </operation>
    <operation name="update_catalogs_operation">
        <call-query href="update_catalogs_query">
            <with-param name="valueText" query-param="valueText"/>
            <with-param name="valueBoolean" query-param="valueBoolean"/>
            <with-param name="code" query-param="code"/>
            <with-param name="predetermined" query-param="predetermined"/>
            <with-param name="name" query-param="name"/>
            <with-param name="id" query-param="id"/>
            <with-param name="valueNumber" query-param="valueNumber"/>
            <with-param name="typesCatalogsId" query-param="typesCatalogsId"/>
            <with-param name="ordinal" query-param="ordinal"/>
            <with-param name="valueDate" query-param="valueDate"/>
        </call-query>
    </operation>
    <operation name="dynamic_operation">
        <call-query href="dynamic_query">
            <with-param name="whereclause" query-param="whereclause"/>
        </call-query>
    </operation>
    <operation name="dynamic_count_operation">
        <call-query href="dynamic_query_count">
            <with-param name="whereclause" query-param="whereclause"/>
        </call-query>
    </operation>
    <resource method="GET" path="GetDynamic">
        <call-query href="dynamic_query">
            <with-param name="whereclause" query-param="whereclause"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetDynamicCount">
        <call-query href="dynamic_query_count">
            <with-param name="whereclause" query-param="whereclause"/>
        </call-query>
    </resource>
    <resource method="GET" path="getAllCatalogs">
        <call-query href="select_all_catalogs_query"/>
    </resource>
    <resource method="GET" path="getByIdTypeCatalog">
        <call-query href="select_with_key_type_catalogs_query">
            <with-param name="typeCatalogId" query-param="typeCatalogId"/>
        </call-query>
    </resource>
    <resource method="GET" path="getByCodeTypeCatalog">
        <call-query href="select_with_code_type_catalogs_query">
            <with-param name="typeCatalogCode" query-param="typeCatalogCode"/>
        </call-query>
    </resource>
    <resource method="GET" path="getByCodeTypeCatalogAndCatalog">
        <call-query href="select_with_code_catalog_and_type_catalog_query">
            <with-param name="typeCatalogCode" query-param="typeCatalogCode"/>
            <with-param name="catalogCode" query-param="catalogCode"/>
        </call-query>
    </resource>
    <resource method="GET" path="getByIdCatalog">
        <call-query href="select_with_key_catalogs_query">
            <with-param name="id" query-param="id"/>
        </call-query>
    </resource>
    <resource method="GET" path="getIsUsed">
        <call-query href="select_is_used_catalog_query">
            <with-param name="catalogId" query-param="catalogId"/>
        </call-query>
    </resource>
    <resource method="POST" path="createCatalog">
        <call-query href="insert_catalogs_query">
            <with-param name="valid" query-param="valid"/>
            <with-param name="valueText" query-param="valueText"/>
            <with-param name="valueBoolean" query-param="valueBoolean"/>
            <with-param name="code" query-param="code"/>
            <with-param name="predetermined" query-param="predetermined"/>
            <with-param name="name" query-param="name"/>
            <with-param name="valueNumber" query-param="valueNumber"/>
            <with-param name="typesCatalogsId" query-param="typesCatalogsId"/>
            <with-param name="ordinal" query-param="ordinal"/>
            <with-param name="valueDate" query-param="valueDate"/>
        </call-query>
    </resource>
    <resource method="POST" path="createCatalogNotExistCodeAndName">
        <call-query href="insert_catalogs_not_exist_code_and_name_query">
            <with-param name="code" query-param="code"/>
            <with-param name="name" query-param="name"/>
            <with-param name="typeCatalogCode" query-param="typeCatalogCode"/>
            <with-param name="codeValidate" query-param="codeValidate"/>
            <with-param name="nameValidate" query-param="nameValidate"/>
        </call-query>
    </resource>
    <resource method="POST" path="createCatalogNotExistName">
        <call-query href="insert_catalogs_not_exist_name_query">
            <with-param name="name" query-param="name"/>
            <with-param name="typeCatalogCode" query-param="typeCatalogCode"/>
            <with-param name="nameValidate" query-param="nameValidate"/>
        </call-query>
    </resource>
    <resource method="PUT" path="updateCatalog">
        <call-query href="update_catalogs_query">
            <with-param name="valueText" query-param="valueText"/>
            <with-param name="valueBoolean" query-param="valueBoolean"/>
            <with-param name="code" query-param="code"/>
            <with-param name="predetermined" query-param="predetermined"/>
            <with-param name="name" query-param="name"/>
            <with-param name="id" query-param="id"/>
            <with-param name="valueNumber" query-param="valueNumber"/>
            <with-param name="typesCatalogsId" query-param="typesCatalogsId"/>
            <with-param name="ordinal" query-param="ordinal"/>
            <with-param name="valueDate" query-param="valueDate"/>
        </call-query>
    </resource>
    <resource method="DELETE" path="deleteCatalog">
        <call-query href="delete_catalogs_query">
            <with-param name="id" query-param="id"/>
        </call-query>
    </resource>
</data>
