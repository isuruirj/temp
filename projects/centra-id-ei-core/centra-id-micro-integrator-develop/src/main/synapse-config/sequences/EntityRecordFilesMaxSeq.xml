<?xml version="1.0" encoding="UTF-8"?>
<sequence name="RecordFilesMaxSeq" onError="FaultSeq" trace="disable" xmlns="http://ws.apache.org/ns/synapse">
    <log category="DEBUG" level="custom">
        <property name="RecordFilesMaxSeq" value="Inicio.."/>
        <property expression="get-property('uri.var.field')" name="uri.var.field"/>
    </log>
    <property action="remove" name="REST_URL_POSTFIX" scope="axis2"/>
    <property name="messageType" scope="axis2" type="STRING" value="application/json"/>
    <property name="Accept" scope="transport" type="STRING" value="application/json"/>
    <property action="remove" name="Content-Type" scope="transport"/>
    <property expression="$ctx:query.param.id" name="id" scope="default" type="STRING"/>
    <property expression="$ctx:query.param.name" name="name" scope="default" type="STRING"/>
    <property expression="$ctx:query.param.content" name="content" scope="default" type="STRING"/>
    <property expression="$ctx:query.param.dateCreated" name="dateCreated" scope="default" type="STRING"/>
    <property expression="$ctx:query.param.userCreated" name="userCreated" scope="default" type="STRING"/>
    <property expression="$ctx:query.param.dateFinish" name="dateFinish" scope="default" type="STRING"/>
    <property expression="$ctx:query.param.datePlanned" name="datePlanned" scope="default" type="STRING"/>
    <property expression="$ctx:query.param.status" name="status" scope="default" type="STRING"/>
    <property expression="$ctx:query.param.messages" name="messages" scope="default" type="STRING"/>
    <property expression="$ctx:query.param.type" name="type" scope="default" type="STRING"/>
    <property expression="$ctx:query.param.valid" name="valid" scope="default" type="STRING"/>
    <script language="nashornJs"><![CDATA[@add.where.js.function
        function operatorType(value) {
            if(value.indexOf("*")!=-1 ) {
                return " LIKE ";
            } else {
                return " = ";
            }
        }
        var log = mc.getServiceLog();
        var where = " WHERE recordFiles.valid=1 ";
        var innerJoin = "";
        where += addWhere("id","Integer","recordFiles","id");
        where += addWhere("name","String","recordFiles","name");
        where += addWhere("content","String","recordFiles","content");
        where += addWhere("dateCreated","Date","recordFiles","date_created");
        where += addWhere("userCreated","String","recordFiles","user_created");
        where += addWhere("dateFinish","Date","recordFiles","date_finish");
        where += addWhere("datePlanned","Date","recordFiles","date_planned");
        where += addWhere("status","String","recordFiles","status");
        where += addWhere("messages","String","recordFiles","messages");
        where += addWhere("type","String","recordFiles","type");
        where += addWhere("valid","Integer","recordFiles","valid");
        mc.setProperty("uri.var.whereclause",where);
        mc.setProperty("uri.var.innerjoinclause",innerJoin);

        // FIELD
        var field = "recordFiles."+mc.getProperty("uri.var.field");
        mc.setProperty("uri.var.field",field);

        log.debug(where);]]></script>
    <property name="uri.var.table" scope="default" type="STRING" value="sch_centra_id.RECORD_FILES recordFiles"/>
    <property name="uri.var.function" scope="default" type="STRING" value="MAX"/>
    <call>
        <endpoint name="RecordFilesDSS_Endpoint" template="HTTPEndpointGetTemplate" uri="{uri.var.dataServiceHost}/common.record-files.ds.HTTPEndpoint/GetFunctionResultRecordFiles?function={uri.var.function}&amp;whereclause={uri.var.whereclause}&amp;field={uri.var.field}&amp;table={uri.var.table}&amp;innerjoinclause={uri.var.innerjoinclause}"/>
    </call>
    <property expression="json-eval($.Fault.faultcode)" name="faultCode" scope="default" type="STRING"/>
    <filter regex="true" source="boolean(get-property('faultCode'))">
        <then>
            <sequence key="FaultSeq"/>
        </then>
        <else>
            <payloadFactory media-type="json">
                <format>
                    {
                        "max": $1
                    }
                </format>
                <args>
                    <arg evaluator="json" expression="$.result.value"/>
                </args>
            </payloadFactory>
            <property name="HTTP_SC" scope="axis2" type="STRING" value="200"/>
        </else>
    </filter>
    <log category="DEBUG" level="custom">
        <property name="RecordFilesMaxSeq" value="Fin.."/>
    </log>
    <respond/>
</sequence>
