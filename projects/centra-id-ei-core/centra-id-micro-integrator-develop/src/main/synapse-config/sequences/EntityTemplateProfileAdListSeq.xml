<?xml version="1.0" encoding="UTF-8"?>
<sequence name="TemplateProfileAdListSeq" onError="FaultSeq" trace="disable" xmlns="http://ws.apache.org/ns/synapse">
    <log level="custom" category="DEBUG">
        <property name="TemplateProfileAdListSeq" value="Inicio.." />
    </log>
    <property action="remove" name="REST_URL_POSTFIX" scope="axis2" />
    <property name="messageType" scope="axis2" type="STRING" value="application/xml" />
    <property name="Accept" scope="transport" type="STRING" value="application/xml" />
    <property action="remove" name="Content-Type" scope="transport" />
    <property expression="$ctx:query.param.orderby" name="uri.var.orderby" scope="default" type="STRING" />
    <property expression="$ctx:query.param.shouldNotChangePassword" name="shouldNotChangePassword" scope="default" type="STRING" />
    <property expression="$ctx:query.param.passwordNotExpire" name="passwordNotExpire" scope="default" type="STRING" />
    <property expression="$ctx:query.param.accountContainer" name="accountContainer" scope="default" type="STRING" />
    <property expression="$ctx:query.param.groupAd" name="groupAd" scope="default" type="STRING" />
    <property expression="$ctx:query.param.exchangeAdvancedOwa" name="exchangeAdvancedOwa" scope="default" type="STRING" />
    <property expression="$ctx:query.param.exchangeAdvancedActiveSync" name="exchangeAdvancedActiveSync" scope="default" type="STRING" />
    <property expression="$ctx:query.param.sip" name="sip" scope="default" type="STRING" />
    <property expression="$ctx:query.param.terminalServicesProfile" name="terminalServicesProfile" scope="default" type="STRING" />
    <property expression="$ctx:query.param.connectFollowingDrive" name="connectFollowingDrive" scope="default" type="STRING" />
    <property expression="$ctx:query.param.terminalServicesHomeDirectory" name="terminalServicesHomeDirectory" scope="default" type="STRING" />
    <property expression="$ctx:query.param.allowLogonToTerminalServer" name="allowLogonToTerminalServer" scope="default" type="STRING" />
    <property expression="$ctx:query.param.transactionalProfileId" name="transactionalProfileId" scope="default" type="STRING" />
    <property expression="$ctx:query.param.mailboxType" name="mailboxType" scope="default" type="STRING" />
    <property expression="$ctx:query.param.shouldChangePasswordFirstTime" name="shouldChangePasswordFirstTime" scope="default" type="STRING" />
    <property expression="$ctx:query.param.activateMail" name="activateMail" scope="default" type="STRING" />
    <property expression="$ctx:query.param.valid" name="valid" scope="default" type="STRING" />
    <script language="nashornJs"><![CDATA[
        @add.where.js.function
        function operatorType(value) {
            if(value.indexOf("*")!=-1 ) {
                return " LIKE ";
            } else {
                return " = ";
            }
        }
        var log = mc.getServiceLog();
        var where = " WHERE templateProfileAd.valid=1 ";
        var innerJoin = "";
        where += addWhere("shouldNotChangePassword","Integer","templateProfileAd","should_not_change_password");
        where += addWhere("passwordNotExpire","Integer","templateProfileAd","password_not_expire");
        where += addWhere("accountContainer","String","templateProfileAd","account_container");
        where += addWhere("groupAd","String","templateProfileAd","group_ad");
        where += addWhere("exchangeAdvancedOwa","Integer","templateProfileAd","exchange_advanced_owa");
        where += addWhere("exchangeAdvancedActiveSync","Integer","templateProfileAd","exchange_advanced_active_sync");
        where += addWhere("sip","Integer","templateProfileAd","sip");
        where += addWhere("terminalServicesProfile","String","templateProfileAd","terminal_services_profile");
        where += addWhere("connectFollowingDrive","Integer","templateProfileAd","connect_following_drive");
        where += addWhere("terminalServicesHomeDirectory","String","templateProfileAd","terminal_services_home_directory");
        where += addWhere("allowLogonToTerminalServer","Integer","templateProfileAd","allow_logon_to_terminal_server");
        where += addWhere("transactionalProfileId","Integer","templateProfileAd","transactional_profile_id");
        where += addWhere("mailboxType","String","templateProfileAd","mailbox_type");
        where += addWhere("shouldChangePasswordFirstTime","Integer","templateProfileAd","should_change_password_first_time");
        where += addWhere("activateMail","Integer","templateProfileAd","activate_mail");
        where += addWhere("valid","Integer","templateProfileAd","valid");
        mc.setProperty("uri.var.whereclause",where);
        mc.setProperty("uri.var.innerjoinclause",innerJoin);
        if(!mc.getProperty("uri.var.orderby")){
            mc.setProperty("uri.var.orderby","templateProfileAd.id");
        } else {
            mc.setProperty("uri.var.orderby","templateProfileAd."+mc.getProperty("uri.var.orderby"));
        }
        log.debug(where);]]></script>
    <call>
        <endpoint name="TemplateProfileAdDSS_Endpoint" template="HTTPEndpointGetTemplate"
              uri="{uri.var.dataServiceHost}/application.template-profile-ad.ds.HTTPEndpoint/GetAllTemplateProfileAd?whereclause={uri.var.whereclause}&amp;orderby={uri.var.orderby}&amp;innerjoinclause={uri.var.innerjoinclause}" />

    </call>
    <property expression="json-eval($.Fault.faultcode)" name="faultCode" scope="default" type="STRING" />
    <filter regex="true" source="boolean(get-property('faultCode'))">
        <then>
            <sequence key="FaultSeq" />
        </then>
        <else>
            <xslt key="gov:/centra-id/xslt/dssFilter.xsl" />
            <property name="messageType" scope="axis2" type="STRING" value="application/json"/>
            <property name="HTTP_SC" scope="axis2" type="STRING" value="200" />
        </else>
    </filter>
    <log level="custom" category="DEBUG">
        <property name="TemplateProfileAdSeq" value="Fin.." />
    </log>
    <property name="messageType" value="application/json" scope="axis2" type="STRING"/>
    <property name="Access-Control-Allow-Methods" value="GET,PUT,POST,DELETE,PATCH,OPTIONS" scope="transport" type="STRING"/>
    <property name="Access-Control-Allow-Headers" value="Authorization,Access-Control-Allow-Origin,Content-Type" scope="transport" type="STRING"/>
</sequence>
