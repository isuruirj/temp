<?xml version="1.0" encoding="UTF-8"?>
<sequence name="CostCenterFromToSeq" onError="FaultSeq" trace="disable" xmlns="http://ws.apache.org/ns/synapse">
    <log level="custom" category="DEBUG">
        <property name="CostCenterFromToSeq" value="Inicio.." />
    </log>
    <property action="remove" name="REST_URL_POSTFIX" scope="axis2" />
    <property name="messageType" scope="axis2" type="STRING" value="application/xml" />
    <property name="Accept" scope="transport" type="STRING" value="application/xml" />
    <property action="remove" name="Content-Type" scope="transport" />
    <property expression="$ctx:query.param.orderby" name="uri.var.orderby" scope="default" type="STRING" />
    <property expression="$ctx:query.param.id" name="id" scope="default" type="STRING" />
    <property expression="$ctx:query.param.code" name="code" scope="default" type="STRING" />
    <property expression="$ctx:query.param.name" name="name" scope="default" type="STRING" />
    <property expression="$ctx:query.param.company.id" name="company.id" scope="default" type="STRING" />
    <property expression="$ctx:query.param.company.code" name="company.code" scope="default" type="STRING" />
    <property expression="$ctx:query.param.company.identifier" name="company.identifier" scope="default" type="STRING" />
    <property expression="$ctx:query.param.company.businessName" name="company.businessName" scope="default" type="STRING" />
    <property expression="$ctx:query.param.company.catalogCompanyType.id" name="company.catalogCompanyType.id" scope="default" type="STRING" />
    <property expression="$ctx:query.param.company.catalogCompanyType.code" name="company.catalogCompanyType.code" scope="default" type="STRING" />
    <property expression="$ctx:query.param.company.catalogCompanyType.name" name="company.catalogCompanyType.name" scope="default" type="STRING" />
    <property expression="$ctx:query.param.company.catalogCompanyType.predetermined" name="company.catalogCompanyType.predetermined" scope="default" type="STRING" />
    <property expression="$ctx:query.param.company.catalogCompanyType.ordinal" name="company.catalogCompanyType.ordinal" scope="default" type="STRING" />
    <property expression="$ctx:query.param.company.catalogCompanyType.valueText" name="company.catalogCompanyType.valueText" scope="default" type="STRING" />
    <property expression="$ctx:query.param.company.catalogCompanyType.valueNumber" name="company.catalogCompanyType.valueNumber" scope="default" type="STRING" />
    <property expression="$ctx:query.param.company.catalogCompanyType.valueDate" name="company.catalogCompanyType.valueDate" scope="default" type="STRING" />
    <property expression="$ctx:query.param.company.catalogCompanyType.valueBoolean" name="company.catalogCompanyType.valueBoolean" scope="default" type="STRING" />
    <property expression="$ctx:query.param.company.catalogCompanyType.catalogType.id" name="company.catalogCompanyType.catalogType.id" scope="default" type="STRING" />
    <property expression="$ctx:query.param.company.catalogCompanyType.catalogType.code" name="company.catalogCompanyType.catalogType.code" scope="default" type="STRING" />
    <property expression="$ctx:query.param.company.catalogCompanyType.catalogType.name" name="company.catalogCompanyType.catalogType.name" scope="default" type="STRING" />
    <property expression="$ctx:query.param.company.catalogCompanyType.catalogType.sortType" name="company.catalogCompanyType.catalogType.sortType" scope="default" type="STRING" />
    <property expression="$ctx:query.param.company.catalogCompanyType.catalogType.editable" name="company.catalogCompanyType.catalogType.editable" scope="default" type="STRING" />
    <property expression="$ctx:query.param.company.catalogCompanyType.catalogType.valid" name="company.catalogCompanyType.catalogType.valid" scope="default" type="STRING" />
    <property expression="$ctx:query.param.company.catalogCompanyType.catalogType.description" name="company.catalogCompanyType.catalogType.description" scope="default" type="STRING" />
    <property expression="$ctx:query.param.company.catalogCompanyType.valid" name="company.catalogCompanyType.valid" scope="default" type="STRING" />
    <property expression="$ctx:query.param.company.domainName" name="company.domainName" scope="default" type="STRING" />
    <property expression="$ctx:query.param.company.status" name="company.status" scope="default" type="STRING" />
    <property expression="$ctx:query.param.company.logon" name="company.logon" scope="default" type="STRING" />
    <property expression="$ctx:query.param.company.valid" name="company.valid" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.id" name="parent.id" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.code" name="parent.code" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.name" name="parent.name" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.company.id" name="parent.company.id" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.company.code" name="parent.company.code" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.company.identifier" name="parent.company.identifier" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.company.businessName" name="parent.company.businessName" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.company.catalogCompanyType.id" name="parent.company.catalogCompanyType.id" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.company.catalogCompanyType.code" name="parent.company.catalogCompanyType.code" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.company.catalogCompanyType.name" name="parent.company.catalogCompanyType.name" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.company.catalogCompanyType.predetermined" name="parent.company.catalogCompanyType.predetermined" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.company.catalogCompanyType.ordinal" name="parent.company.catalogCompanyType.ordinal" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.company.catalogCompanyType.valueText" name="parent.company.catalogCompanyType.valueText" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.company.catalogCompanyType.valueNumber" name="parent.company.catalogCompanyType.valueNumber" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.company.catalogCompanyType.valueDate" name="parent.company.catalogCompanyType.valueDate" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.company.catalogCompanyType.valueBoolean" name="parent.company.catalogCompanyType.valueBoolean" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.company.catalogCompanyType.catalogType.id" name="parent.company.catalogCompanyType.catalogType.id" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.company.catalogCompanyType.catalogType.code" name="parent.company.catalogCompanyType.catalogType.code" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.company.catalogCompanyType.catalogType.name" name="parent.company.catalogCompanyType.catalogType.name" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.company.catalogCompanyType.catalogType.sortType" name="parent.company.catalogCompanyType.catalogType.sortType" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.company.catalogCompanyType.catalogType.editable" name="parent.company.catalogCompanyType.catalogType.editable" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.company.catalogCompanyType.catalogType.valid" name="parent.company.catalogCompanyType.catalogType.valid" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.company.catalogCompanyType.catalogType.description" name="parent.company.catalogCompanyType.catalogType.description" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.company.catalogCompanyType.valid" name="parent.company.catalogCompanyType.valid" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.company.domainName" name="parent.company.domainName" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.company.status" name="parent.company.status" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.company.logon" name="parent.company.logon" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.company.valid" name="parent.company.valid" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.parent.id" name="parent.parent.id" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.parent.code" name="parent.parent.code" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.parent.name" name="parent.parent.name" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.parent.company.id" name="parent.parent.company.id" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.parent.company.code" name="parent.parent.company.code" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.parent.company.identifier" name="parent.parent.company.identifier" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.parent.company.businessName" name="parent.parent.company.businessName" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.parent.company.catalogCompanyType.id" name="parent.parent.company.catalogCompanyType.id" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.parent.company.catalogCompanyType.code" name="parent.parent.company.catalogCompanyType.code" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.parent.company.catalogCompanyType.name" name="parent.parent.company.catalogCompanyType.name" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.parent.company.catalogCompanyType.predetermined" name="parent.parent.company.catalogCompanyType.predetermined" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.parent.company.catalogCompanyType.ordinal" name="parent.parent.company.catalogCompanyType.ordinal" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.parent.company.catalogCompanyType.valueText" name="parent.parent.company.catalogCompanyType.valueText" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.parent.company.catalogCompanyType.valueNumber" name="parent.parent.company.catalogCompanyType.valueNumber" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.parent.company.catalogCompanyType.valueDate" name="parent.parent.company.catalogCompanyType.valueDate" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.parent.company.catalogCompanyType.valueBoolean" name="parent.parent.company.catalogCompanyType.valueBoolean" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.parent.company.catalogCompanyType.valid" name="parent.parent.company.catalogCompanyType.valid" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.parent.company.domainName" name="parent.parent.company.domainName" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.parent.company.status" name="parent.parent.company.status" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.parent.company.logon" name="parent.parent.company.logon" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.parent.company.valid" name="parent.parent.company.valid" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.parent.parent.id" name="parent.parent.parent.id" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.parent.parent.code" name="parent.parent.parent.code" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.parent.parent.name" name="parent.parent.parent.name" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.parent.parent.company.id" name="parent.parent.parent.company.id" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.parent.parent.company.code" name="parent.parent.parent.company.code" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.parent.parent.company.identifier" name="parent.parent.parent.company.identifier" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.parent.parent.company.businessName" name="parent.parent.parent.company.businessName" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.parent.parent.company.domainName" name="parent.parent.parent.company.domainName" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.parent.parent.company.status" name="parent.parent.parent.company.status" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.parent.parent.company.logon" name="parent.parent.parent.company.logon" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.parent.parent.company.valid" name="parent.parent.parent.company.valid" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.parent.parent.parent.id" name="parent.parent.parent.parent.id" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.parent.parent.parent.code" name="parent.parent.parent.parent.code" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.parent.parent.parent.name" name="parent.parent.parent.parent.name" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.parent.parent.parent.status" name="parent.parent.parent.parent.status" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.parent.parent.parent.valid" name="parent.parent.parent.parent.valid" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.parent.parent.parent.filter" name="parent.parent.parent.parent.filter" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.parent.parent.status" name="parent.parent.parent.status" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.parent.parent.valid" name="parent.parent.parent.valid" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.parent.parent.filter" name="parent.parent.parent.filter" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.parent.status" name="parent.parent.status" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.parent.valid" name="parent.parent.valid" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.parent.filter" name="parent.parent.filter" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.status" name="parent.status" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.valid" name="parent.valid" scope="default" type="STRING" />
    <property expression="$ctx:query.param.parent.filter" name="parent.filter" scope="default" type="STRING" />
    <property expression="$ctx:query.param.status" name="status" scope="default" type="STRING" />
    <property expression="$ctx:query.param.valid" name="valid" scope="default" type="STRING" />
    <property expression="$ctx:query.param.filter" name="filter" scope="default" type="STRING" />
    <property expression="$ctx:query.param.city" name="city" scope="default" type="STRING" />
    <script language="nashornJs">
        <![CDATA[
        @add.where.js.function
        function operatorType(value) {
            if(value.indexOf("*")!=-1 ) {
                return " LIKE ";
            } else {
                return " = ";
            }
        }
        var log = mc.getServiceLog();
        var where = " WHERE costCenter.valid=1 ";
        var innerJoin = "";
        where += addWhere("id","Integer","costCenter","id");
        where += addWhere("code","String","costCenter","code");
        where += addWhere("name","String","costCenter","name");
        where += addWhere("company.id","Integer","company","id");
        where += addWhere("company.code","String","company","code");
        where += addWhere("company.identifier","String","company","identifier");
        where += addWhere("company.businessName","String","company","business_name");
        where += addWhere("company.catalogCompanyType.id","Integer","company_catalogCompanyType","id");
        where += addWhere("company.catalogCompanyType.code","String","company_catalogCompanyType","code");
        where += addWhere("company.catalogCompanyType.name","String","company_catalogCompanyType","name");
        where += addWhere("company.catalogCompanyType.predetermined","Integer","company_catalogCompanyType","predetermined");
        where += addWhere("company.catalogCompanyType.ordinal","Integer","company_catalogCompanyType","ordinal");
        where += addWhere("company.catalogCompanyType.valueText","String","company_catalogCompanyType","value_text");
        where += addWhere("company.catalogCompanyType.valueNumber","Numeric","company_catalogCompanyType","value_number");
        where += addWhere("company.catalogCompanyType.valueDate","Date","company_catalogCompanyType","value_date");
        where += addWhere("company.catalogCompanyType.valueBoolean","Integer","company_catalogCompanyType","value_boolean");
        where += addWhere("company.catalogCompanyType.catalogType.id","Integer","company_catalogCompanyType_catalogType","id");
        where += addWhere("company.catalogCompanyType.catalogType.code","String","company_catalogCompanyType_catalogType","code");
        where += addWhere("company.catalogCompanyType.catalogType.name","String","company_catalogCompanyType_catalogType","name");
        where += addWhere("company.catalogCompanyType.catalogType.sortType","String","company_catalogCompanyType_catalogType","sort_type");
        where += addWhere("company.catalogCompanyType.catalogType.editable","Integer","company_catalogCompanyType_catalogType","editable");
        where += addWhere("company.catalogCompanyType.catalogType.valid","Integer","company_catalogCompanyType_catalogType","valid");
        where += addWhere("company.catalogCompanyType.catalogType.description","String","company_catalogCompanyType_catalogType","description");
        where += addWhere("company.catalogCompanyType.valid","Integer","company_catalogCompanyType","valid");
        where += addWhere("company.domainName","String","company","domain_name");
        where += addWhere("company.status","String","company","status");
        where += addWhere("company.logon","String","company","logon");
        where += addWhere("company.valid","Integer","company","valid");
        where += addWhere("parent.id","Integer","parent","id");
        where += addWhere("parent.code","String","parent","code");
        where += addWhere("parent.name","String","parent","name");
        where += addWhere("parent.company.id","Integer","parent_company","id");
        where += addWhere("parent.company.code","String","parent_company","code");
        where += addWhere("parent.company.identifier","String","parent_company","identifier");
        where += addWhere("parent.company.businessName","String","parent_company","business_name");
        where += addWhere("parent.company.catalogCompanyType.id","Integer","parent_company_catalogCompanyType","id");
        where += addWhere("parent.company.catalogCompanyType.code","String","parent_company_catalogCompanyType","code");
        where += addWhere("parent.company.catalogCompanyType.name","String","parent_company_catalogCompanyType","name");
        where += addWhere("parent.company.catalogCompanyType.predetermined","Integer","parent_company_catalogCompanyType","predetermined");
        where += addWhere("parent.company.catalogCompanyType.ordinal","Integer","parent_company_catalogCompanyType","ordinal");
        where += addWhere("parent.company.catalogCompanyType.valueText","String","parent_company_catalogCompanyType","value_text");
        where += addWhere("parent.company.catalogCompanyType.valueNumber","Numeric","parent_company_catalogCompanyType","value_number");
        where += addWhere("parent.company.catalogCompanyType.valueDate","Date","parent_company_catalogCompanyType","value_date");
        where += addWhere("parent.company.catalogCompanyType.valueBoolean","Integer","parent_company_catalogCompanyType","value_boolean");
        where += addWhere("parent.company.catalogCompanyType.catalogType.id","Integer","parent_company_catalogCompanyType_catalogType","id");
        where += addWhere("parent.company.catalogCompanyType.catalogType.code","String","parent_company_catalogCompanyType_catalogType","code");
        where += addWhere("parent.company.catalogCompanyType.catalogType.name","String","parent_company_catalogCompanyType_catalogType","name");
        where += addWhere("parent.company.catalogCompanyType.catalogType.sortType","String","parent_company_catalogCompanyType_catalogType","sort_type");
        where += addWhere("parent.company.catalogCompanyType.catalogType.editable","Integer","parent_company_catalogCompanyType_catalogType","editable");
        where += addWhere("parent.company.catalogCompanyType.catalogType.valid","Integer","parent_company_catalogCompanyType_catalogType","valid");
        where += addWhere("parent.company.catalogCompanyType.catalogType.description","String","parent_company_catalogCompanyType_catalogType","description");
        where += addWhere("parent.company.catalogCompanyType.valid","Integer","parent_company_catalogCompanyType","valid");
        where += addWhere("parent.company.domainName","String","parent_company","domain_name");
        where += addWhere("parent.company.status","String","parent_company","status");
        where += addWhere("parent.company.logon","String","parent_company","logon");
        where += addWhere("parent.company.valid","Integer","parent_company","valid");
        where += addWhere("parent.parent.id","Integer","parent_parent","id");
        where += addWhere("parent.parent.code","String","parent_parent","code");
        where += addWhere("parent.parent.name","String","parent_parent","name");
        where += addWhere("parent.parent.company.id","Integer","parent_parent_company","id");
        where += addWhere("parent.parent.company.code","String","parent_parent_company","code");
        where += addWhere("parent.parent.company.identifier","String","parent_parent_company","identifier");
        where += addWhere("parent.parent.company.businessName","String","parent_parent_company","business_name");
        where += addWhere("parent.parent.company.catalogCompanyType.id","Integer","parent_parent_company_catalogCompanyType","id");
        where += addWhere("parent.parent.company.catalogCompanyType.code","String","parent_parent_company_catalogCompanyType","code");
        where += addWhere("parent.parent.company.catalogCompanyType.name","String","parent_parent_company_catalogCompanyType","name");
        where += addWhere("parent.parent.company.catalogCompanyType.predetermined","Integer","parent_parent_company_catalogCompanyType","predetermined");
        where += addWhere("parent.parent.company.catalogCompanyType.ordinal","Integer","parent_parent_company_catalogCompanyType","ordinal");
        where += addWhere("parent.parent.company.catalogCompanyType.valueText","String","parent_parent_company_catalogCompanyType","value_text");
        where += addWhere("parent.parent.company.catalogCompanyType.valueNumber","Numeric","parent_parent_company_catalogCompanyType","value_number");
        where += addWhere("parent.parent.company.catalogCompanyType.valueDate","Date","parent_parent_company_catalogCompanyType","value_date");
        where += addWhere("parent.parent.company.catalogCompanyType.valueBoolean","Integer","parent_parent_company_catalogCompanyType","value_boolean");
        where += addWhere("parent.parent.company.catalogCompanyType.valid","Integer","parent_parent_company_catalogCompanyType","valid");
        where += addWhere("parent.parent.company.domainName","String","parent_parent_company","domain_name");
        where += addWhere("parent.parent.company.status","String","parent_parent_company","status");
        where += addWhere("parent.parent.company.logon","String","parent_parent_company","logon");
        where += addWhere("parent.parent.company.valid","Integer","parent_parent_company","valid");
        where += addWhere("parent.parent.parent.id","Integer","parent_parent_parent","id");
        where += addWhere("parent.parent.parent.code","String","parent_parent_parent","code");
        where += addWhere("parent.parent.parent.name","String","parent_parent_parent","name");
        where += addWhere("parent.parent.parent.company.id","Integer","parent_parent_parent_company","id");
        where += addWhere("parent.parent.parent.company.code","String","parent_parent_parent_company","code");
        where += addWhere("parent.parent.parent.company.identifier","String","parent_parent_parent_company","identifier");
        where += addWhere("parent.parent.parent.company.businessName","String","parent_parent_parent_company","business_name");
        where += addWhere("parent.parent.parent.company.domainName","String","parent_parent_parent_company","domain_name");
        where += addWhere("parent.parent.parent.company.status","String","parent_parent_parent_company","status");
        where += addWhere("parent.parent.parent.company.logon","String","parent_parent_parent_company","logon");
        where += addWhere("parent.parent.parent.company.valid","Integer","parent_parent_parent_company","valid");
        where += addWhere("parent.parent.parent.parent.id","Integer","parent_parent_parent_parent","id");
        where += addWhere("parent.parent.parent.parent.code","String","parent_parent_parent_parent","code");
        where += addWhere("parent.parent.parent.parent.name","String","parent_parent_parent_parent","name");
        where += addWhere("parent.parent.parent.parent.status","String","parent_parent_parent_parent","status");
        where += addWhere("parent.parent.parent.parent.valid","Integer","parent_parent_parent_parent","valid");
        where += addWhere("parent.parent.parent.parent.filter","String","parent_parent_parent_parent","filter");
        where += addWhere("parent.parent.parent.status","String","parent_parent_parent","status");
        where += addWhere("parent.parent.parent.valid","Integer","parent_parent_parent","valid");
        where += addWhere("parent.parent.parent.filter","String","parent_parent_parent","filter");
        where += addWhere("parent.parent.status","String","parent_parent","status");
        where += addWhere("parent.parent.valid","Integer","parent_parent","valid");
        where += addWhere("parent.parent.filter","String","parent_parent","filter");
        where += addWhere("parent.status","String","parent","status");
        where += addWhere("parent.valid","Integer","parent","valid");
        where += addWhere("parent.filter","String","parent","filter");
        where += addWhere("status","String","costCenter","status");
        where += addWhere("valid","Integer","costCenter","valid");
        where += addWhere("filter","String","costCenter","filter");
        where += addWhere("city","String","costCenter","city");
        innerJoin += " LEFT JOIN sch_centra_id.COMPANIES company ON CostCenter.company_id = company.id";
        innerJoin += " LEFT JOIN sch_centra_id.CATALOGS company_catalogCompanyType ON company.catalog_company_type_id = company_catalogCompanyType.id";
        innerJoin += " LEFT JOIN sch_centra_id.CATALOGS_TYPES company_catalogCompanyType_catalogType ON company_catalogCompanyType.catalog_type_id = company_catalogCompanyType_catalogType.id";
        innerJoin += " LEFT JOIN sch_centra_id.COSTS_CENTERS parent ON CostCenter.parent_id = parent.id";
        innerJoin += " LEFT JOIN sch_centra_id.COMPANIES parent_company ON parent.company_id = parent_company.id";
        innerJoin += " LEFT JOIN sch_centra_id.CATALOGS parent_company_catalogCompanyType ON parent_company.catalog_company_type_id = parent_company_catalogCompanyType.id";
        innerJoin += " LEFT JOIN sch_centra_id.CATALOGS_TYPES parent_company_catalogCompanyType_catalogType ON parent_company_catalogCompanyType.catalog_type_id = parent_company_catalogCompanyType_catalogType.id";
        innerJoin += " LEFT JOIN sch_centra_id.COSTS_CENTERS parent_parent ON parent.parent_id = parent_parent.id";
        innerJoin += " LEFT JOIN sch_centra_id.COMPANIES parent_parent_company ON parent_parent.company_id = parent_parent_company.id";
        innerJoin += " LEFT JOIN sch_centra_id.CATALOGS parent_parent_company_catalogCompanyType ON parent_parent_company.catalog_company_type_id = parent_parent_company_catalogCompanyType.id";
        innerJoin += " LEFT JOIN sch_centra_id.CATALOGS_TYPES parent_parent_company_catalogCompanyType_catalogType ON parent_parent_company_catalogCompanyType.catalog_type_id = parent_parent_company_catalogCompanyType_catalogType.id";
        innerJoin += " LEFT JOIN sch_centra_id.COSTS_CENTERS parent_parent_parent ON parent_parent.parent_id = parent_parent_parent.id";
        innerJoin += " LEFT JOIN sch_centra_id.COMPANIES parent_parent_parent_company ON parent_parent_parent.company_id = parent_parent_parent_company.id";
        innerJoin += " LEFT JOIN sch_centra_id.CATALOGS parent_parent_parent_company_catalogCompanyType ON parent_parent_parent_company.catalog_company_type_id = parent_parent_parent_company_catalogCompanyType.id";
        innerJoin += " LEFT JOIN sch_centra_id.COSTS_CENTERS parent_parent_parent_parent ON parent_parent_parent.parent_id = parent_parent_parent_parent.id";
        innerJoin += " LEFT JOIN sch_centra_id.COMPANIES parent_parent_parent_parent_company ON parent_parent_parent_parent.company_id = parent_parent_parent_parent_company.id";
        innerJoin += " LEFT JOIN sch_centra_id.COSTS_CENTERS parent_parent_parent_parent_parent ON parent_parent_parent_parent.parent_id = parent_parent_parent_parent_parent.id";
        mc.setProperty("uri.var.whereclause",where);
        mc.setProperty("uri.var.innerjoinclause",innerJoin);

        if(!mc.getProperty("uri.var.orderby")){
            mc.setProperty("uri.var.orderby","costCenter.id");
        } else {
            mc.setProperty("uri.var.orderby","costCenter."+mc.getProperty("uri.var.orderby"));
        }

        // FROM TO
        var fromto = "OFFSET "+mc.getProperty("uri.var.from")+" ROWS FETCH NEXT "+mc.getProperty("uri.var.to")+" ROWS ONLY";
        mc.setProperty("uri.var.fromto",fromto);
        log.debug(where);]]>
    </script>
    <call>
        <endpoint name="CostCenterDSS_Endpoint" template="HTTPEndpointGetTemplate" uri="{uri.var.dataServiceHost}/company.cost-center.ds.HTTPEndpoint/GetFromToCostCenter?whereclause={uri.var.whereclause}&amp;orderby={uri.var.orderby}&amp;fromto={uri.var.fromto}&amp;innerjoinclause={uri.var.innerjoinclause}" />
    </call>
    <property expression="json-eval($.Fault.faultcode)" name="faultCode" scope="default" type="STRING" />
    <filter regex="true" source="boolean(get-property('faultCode'))">
        <then>
            <sequence key="FaultSeq" />
        </then>
        <else>
            <xslt key="gov:/centra-id/xslt/dssFilter.xsl" />
            <property name="messageType" scope="axis2" type="STRING" value="application/json" />
            <property name="HTTP_SC" scope="axis2" type="STRING" value="200" />
        </else>
    </filter>
    <log level="custom" category="DEBUG">
        <property name="CostCenterFromToSeq" value="Fin.." />
    </log>
</sequence>