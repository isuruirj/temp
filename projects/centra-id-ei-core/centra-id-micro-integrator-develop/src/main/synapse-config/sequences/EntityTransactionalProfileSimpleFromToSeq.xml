<?xml version="1.0" encoding="UTF-8"?>
<sequence name="TransactionalProfileSimpleFromToSeq" onError="FaultSeq" trace="disable" xmlns="http://ws.apache.org/ns/synapse">
    <log level="custom" category="DEBUG">
        <property name="TransactionalProfileSimpleFromToSeq" value="Inicio.." />
    </log>
    <property action="remove" name="REST_URL_POSTFIX" scope="axis2" />
    <property name="messageType" scope="axis2" type="STRING" value="application/xml" />
    <property name="Accept" scope="transport" type="STRING" value="application/xml" />
    <property action="remove" name="Content-Type" scope="transport" />
    <property expression="$ctx:query.param.orderby" name="uri.var.orderby" scope="default" type="STRING" />
    <property expression="$ctx:query.param.id" name="id" scope="default" type="STRING" />
    <property expression="$ctx:query.param.transactionalProfileCode" name="transactionalProfileCode" scope="default" type="STRING" />
    <property expression="$ctx:query.param.transactionalProfileName" name="transactionalProfileName" scope="default" type="STRING" />
    <property expression="$ctx:query.param.transactionalProfileComments" name="transactionalProfileComments" scope="default" type="STRING" />
    <property expression="$ctx:query.param.transactionalProfileCatalogRiskLevelId" name="transactionalProfileCatalogRiskLevelId" scope="default" type="STRING" />
    <property expression="$ctx:query.param.transactionalProfileApplicationId" name="transactionalProfileApplicationId" scope="default" type="STRING" />
    <property expression="$ctx:query.param.globalProfileId" name="globalProfileId" scope="default" type="STRING" />
    <property expression="$ctx:query.param.globalProfileCode" name="globalProfileCode" scope="default" type="STRING" />
    <property expression="$ctx:query.param.globalProfileName" name="globalProfileName" scope="default" type="STRING" />
    <property expression="$ctx:query.param.globalProfileIsBirth" name="globalProfileIsBirth" scope="default" type="STRING" />
    <property expression="$ctx:query.param.applicationCode" name="applicationCode" scope="default" type="STRING" />
    <property expression="$ctx:query.param.applicationName" name="applicationName" scope="default" type="STRING" />
    <property expression="$ctx:query.param.applicationAutomaticProvision" name="applicationAutomaticProvision" scope="default" type="STRING" />
    <property expression="$ctx:query.param.filter" name="filter" scope="default" type="STRING" />
    <property expression="$ctx:query.param.applicationId" name="applicationId" scope="default" type="STRING" />
    <property expression="$ctx:query.param.applicationGroupId" name="applicationGroupId" scope="default" type="STRING" />
    <property expression="$ctx:query.param.applicationGroupCode" name="applicationGroupCode" scope="default" type="STRING" />
    <property expression="$ctx:query.param.applicationGroupName" name="applicationGroupName" scope="default" type="STRING" />
    <property expression="$ctx:query.param.valid" name="valid" scope="default" type="STRING" />
    <script language="nashornJs"><![CDATA[
        @add.where.js.function
        function operatorType(value) {
            if(value.indexOf("*")!=-1 ) {
                return " LIKE ";
            } else {
                return " = ";
            }
        }
        var log = mc.getServiceLog();
        var where = " WHERE transactionalProfileSimple.valid=1 ";
        var innerJoin = "";
        where += addWhere("id","Integer","transactionalProfileSimple","id");
        where += addWhere("transactionalProfileCode","String","transactionalProfileSimple","transactional_profile_code");
        where += addWhere("transactionalProfileName","String","transactionalProfileSimple","transactional_profile_name");
        where += addWhere("transactionalProfileComments","String","transactionalProfileSimple","transactional_profile_comments");
        where += addWhere("transactionalProfileCatalogRiskLevelId","Integer","transactionalProfileSimple","transactional_profile_catalog_risk_level_id");
        where += addWhere("transactionalProfileApplicationId","Integer","transactionalProfileSimple","transactional_profile_application_id");
        where += addWhere("globalProfileId","Integer","transactionalProfileSimple","global_profile_id");
        where += addWhere("globalProfileCode","String","transactionalProfileSimple","global_profile_code");
        where += addWhere("globalProfileName","String","transactionalProfileSimple","global_profile_name");
        where += addWhere("globalProfileIsBirth","Integer","transactionalProfileSimple","global_profile_is_birth");
        where += addWhere("applicationCode","String","transactionalProfileSimple","application_code");
        where += addWhere("applicationName","String","transactionalProfileSimple","application_name");
        where += addWhere("applicationAutomaticProvision","Integer","transactionalProfileSimple","application_automatic_provision");
        where += addWhere("filter","String","transactionalProfileSimple","filter");
        where += addWhere("applicationId","Integer","transactionalProfileSimple","application_id");
        where += addWhere("applicationGroupId","Integer","transactionalProfileSimple","application_group_id");
        where += addWhere("applicationGroupCode","String","transactionalProfileSimple","application_group_code");
        where += addWhere("applicationGroupName","String","transactionalProfileSimple","application_group_name");
        where += addWhere("valid","Integer","transactionalProfileSimple","valid");
        mc.setProperty("uri.var.whereclause",where);
        mc.setProperty("uri.var.innerjoinclause",innerJoin);

        if(!mc.getProperty("uri.var.orderby")){
            mc.setProperty("uri.var.orderby","transactionalProfileSimple.id");
        } else {
            mc.setProperty("uri.var.orderby","transactionalProfileSimple."+mc.getProperty("uri.var.orderby"));
        }

        // FROM TO
        var fromto = "OFFSET "+mc.getProperty("uri.var.from")+" ROWS FETCH NEXT "+mc.getProperty("uri.var.to")+" ROWS ONLY";
        mc.setProperty("uri.var.fromto",fromto);
        log.debug(where);]]></script>
    <call>
        <endpoint name="TransactionalProfileSimpleDSS_Endpoint" template="HTTPEndpointGetTemplate"
              uri="{uri.var.dataServiceHost}/application.transactional-profile-simple.ds.HTTPEndpoint/GetFromToTransactionalProfileSimple?whereclause={uri.var.whereclause}&amp;orderby={uri.var.orderby}&amp;fromto={uri.var.fromto}&amp;innerjoinclause={uri.var.innerjoinclause}" />

    </call>
    <property expression="json-eval($.Fault.faultcode)" name="faultCode" scope="default" type="STRING" />
    <filter regex="true" source="boolean(get-property('faultCode'))">
        <then>
            <sequence key="FaultSeq" />
        </then>
        <else>
            <xslt key="gov:/centra-id/xslt/dssFilter.xsl" />
            <property name="messageType" scope="axis2" type="STRING" value="application/json"/>
            <property name="HTTP_SC" scope="axis2" type="STRING" value="200" />
        </else>
    </filter>
    <log level="custom" category="DEBUG">
        <property name="TransactionalProfileSimpleFromToSeq" value="Fin.." />
    </log>
</sequence>
