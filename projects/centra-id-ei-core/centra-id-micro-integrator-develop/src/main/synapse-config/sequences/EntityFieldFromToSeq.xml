<?xml version="1.0" encoding="UTF-8"?>
<sequence name="FieldFromToSeq" onError="FaultSeq" trace="disable" xmlns="http://ws.apache.org/ns/synapse">
    <log level="custom" category="DEBUG">
        <property name="FieldFromToSeq" value="Inicio.." />
    </log>
    <property action="remove" name="REST_URL_POSTFIX" scope="axis2" />
    <property name="messageType" scope="axis2" type="STRING" value="application/xml" />
    <property name="Accept" scope="transport" type="STRING" value="application/xml" />
    <property action="remove" name="Content-Type" scope="transport" />
    <property expression="$ctx:query.param.orderby" name="uri.var.orderby" scope="default" type="STRING" />
    <property expression="$ctx:query.param.id" name="id" scope="default" type="STRING" />
    <property expression="$ctx:query.param.code" name="code" scope="default" type="STRING" />
    <property expression="$ctx:query.param.name" name="name" scope="default" type="STRING" />
    <property expression="$ctx:query.param.predetermined" name="predetermined" scope="default" type="STRING" />
    <property expression="$ctx:query.param.type" name="type" scope="default" type="STRING" />
    <property expression="$ctx:query.param.length" name="length" scope="default" type="STRING" />
    <property expression="$ctx:query.param.required" name="required" scope="default" type="STRING" />
    <property expression="$ctx:query.param.ordinal" name="ordinal" scope="default" type="STRING" />
    <property expression="$ctx:query.param.valid" name="valid" scope="default" type="STRING" />
    <property expression="$ctx:query.param.applicationGroup.id" name="applicationGroup.id" scope="default" type="STRING" />
    <property expression="$ctx:query.param.applicationGroup.code" name="applicationGroup.code" scope="default" type="STRING" />
    <property expression="$ctx:query.param.applicationGroup.name" name="applicationGroup.name" scope="default" type="STRING" />
    <property expression="$ctx:query.param.applicationGroup.endpointType" name="applicationGroup.endpointType" scope="default" type="STRING" />
    <property expression="$ctx:query.param.applicationGroup.ordinal" name="applicationGroup.ordinal" scope="default" type="STRING" />
    <property expression="$ctx:query.param.applicationGroup.valid" name="applicationGroup.valid" scope="default" type="STRING" />
    <script language="nashornJs">
        <![CDATA[
        @add.where.js.function
        function operatorType(value) {
            if(value.indexOf("*")!=-1 ) {
                return " LIKE ";
            } else {
                return " = ";
            }
        }
        var log = mc.getServiceLog();
        var where = " WHERE field.valid=1 ";
        var innerJoin = "";
        where += addWhere("id","Integer","field","id");
        where += addWhere("code","String","field","code");
        where += addWhere("name","String","field","name");
        where += addWhere("predetermined","String","field","predetermined");
        where += addWhere("type","String","field","type");
        where += addWhere("length","Integer","field","length");
        where += addWhere("required","Integer","field","required");
        where += addWhere("ordinal","Integer","field","ordinal");
        where += addWhere("valid","Integer","field","valid");
        where += addWhere("applicationGroup.id","Integer","applicationGroup","id");
        where += addWhere("applicationGroup.code","String","applicationGroup","code");
        where += addWhere("applicationGroup.name","String","applicationGroup","name");
        where += addWhere("applicationGroup.endpointType","String","applicationGroup","endpoint_type");
        where += addWhere("applicationGroup.ordinal","Integer","applicationGroup","ordinal");
        where += addWhere("applicationGroup.valid","Integer","applicationGroup","valid");
        innerJoin += " LEFT JOIN sch_centra_id.APPLICATIONS_GROUP applicationGroup ON Field.application_group_id = applicationGroup.id";
        mc.setProperty("uri.var.whereclause",where);
        mc.setProperty("uri.var.innerjoinclause",innerJoin);

        if(!mc.getProperty("uri.var.orderby")){
            mc.setProperty("uri.var.orderby","field.id");
        } else {
            mc.setProperty("uri.var.orderby","field."+mc.getProperty("uri.var.orderby"));
        }

        // FROM TO
        var fromto = "OFFSET "+mc.getProperty("uri.var.from")+" ROWS FETCH NEXT "+mc.getProperty("uri.var.to")+" ROWS ONLY";
        mc.setProperty("uri.var.fromto",fromto);
        log.debug(where);]]>
    </script>
    <call>
        <endpoint name="FieldDSS_Endpoint" template="HTTPEndpointGetTemplate" uri="{uri.var.dataServiceHost}/application.field.ds.HTTPEndpoint/GetFromToField?whereclause={uri.var.whereclause}&amp;orderby={uri.var.orderby}&amp;fromto={uri.var.fromto}&amp;innerjoinclause={uri.var.innerjoinclause}" />
    </call>
    <property expression="json-eval($.Fault.faultcode)" name="faultCode" scope="default" type="STRING" />
    <filter regex="true" source="boolean(get-property('faultCode'))">
        <then>
            <sequence key="FaultSeq" />
        </then>
        <else>
            <xslt key="gov:/centra-id/xslt/dssFilter.xsl" />
            <property name="messageType" scope="axis2" type="STRING" value="application/json" />
            <property name="HTTP_SC" scope="axis2" type="STRING" value="200" />
        </else>
    </filter>
    <log level="custom" category="DEBUG">
        <property name="FieldFromToSeq" value="Fin.." />
    </log>
</sequence>