<?xml version="1.0" encoding="UTF-8"?>
<sequence name="ProfilesSynchronizationCalculateUserDataSeq" trace="disable" xmlns="http://ws.apache.org/ns/synapse">
    <property name="userDataList" expression="$body//*" scope="default" type="OM" />
    <log level="custom">
        <property name="ProfilesSynchronizationCalculateUserDataSeq" value="Inicio.." />
        <property name="profilesSynchronizationId" expression="$ctx:profilesSynchronizationId" />
        <property name="profilesSynchronizationExecutionId" expression="$ctx:profilesSynchronizationExecutionId" />
    </log>
    <property name="guid" expression="fn:substring-after(get-property('MessageID'), 'urn:uuid:')" />
    <iterate expression="$ctx:userDataList//userDataSearch" id="userdataListId">
        <target>
            <sequence>
                <call-template target="GetCurrentDateTemplate" />
                <property name="uuid" expression="fn:substring-after(get-property('MessageID'), 'urn:uuid:')" />
                <property name="userData" expression="$body//*" scope="default" type="OM" />
                <payloadFactory media-type="json">
                    <format>
                        {
                            "transactionalIdentity": {
                                "guid": "$1",
                                "uuid": "$2",
                                "username": "$3",
                                "workerCode": "$4",
                                "employeeLastName": "$5",
                                "employeeFirstName": "$6",
                                "identification": "$7",
                                "identificationSupervisor": "$8",
                                "namesSupervisor": "$9",
                                "companyCode": "$10",
                                "companyName": "$11",
                                "groupCode": "$12",
                                "groupName": "$13",
                                "divisionCode": "$14",
                                "divisionName": "$15",
                                "departmentCode": "$16",
                                "departmentName": "$17",
                                "areaCode": "$18",
                                "areaName": "$19",
                                "subsidiaryCode": "$20",
                                "subsidiaryName": "$21",
                                "costCenterCode": "$22",
                                "costCenterName": "$23",
                                "locationCode": "$24",
                                "localtionName": "",                    
                                "positionName": "$25",
                                "hierarchicalLevelCode": "$26",
                                "hierarchicalLevelName": "$27",
                                "depositAccountNumber": "$28",
                                "employeeStartDate": "$29",
                                "employeeEndDate": "$30",
                                "employeeStatus": "$31",
                                "employeeCode": "$32",
                                "userType": "$33",
                                "userSubType": "$34",
                                "mobile": "$35",
                                "origen": "$36",
                                "status": "REGISTRADO",
                                "createdDate": "$37",
                                "plannedExecutionDate": "$38",
                                "modifyData": $39,
                                "profileRecalculation":$40,
                                "typeAction":"$41",
                                "mail": "$42",
                                "globalProfileId": $43,
                                "userDataId": $44,
                                "password" : "$45",
                                "identificationType" : "$46",
                                "globalProfilePreviusId" : null
                            }
                        }            
                    </format>
                    <args>
                        <arg evaluator="xml" expression="get-property('guid')" />
                        <arg evaluator="xml" expression="get-property('uuid')" />
                        <arg evaluator="xml" expression="get-property('userData')//username/text()" />
                        <arg evaluator="xml" expression="get-property('userData')//codigoTrabajador/text()" />
                        <arg evaluator="xml" expression="get-property('userData')//apellidosEmpleado/text()" />
                        <arg evaluator="xml" expression="get-property('userData')//nombresEmpleado/text()" />
                        <arg evaluator="xml" expression="get-property('userData')//identificacion/text()" />
                        <arg evaluator="xml" expression="get-property('identificacionSupervisor')" />
                        <arg evaluator="xml" expression="get-property('nombreSupervisor')" />
                        <arg evaluator="xml" expression="get-property('userData')//codigoCompania/text()" />
                        <arg evaluator="xml" expression="get-property('userData')//nombreCompania/text()" />
                        <arg evaluator="xml" expression="get-property('userData')//codigoAgrupacion/text()" />
                        <arg evaluator="xml" expression="get-property('userData')//codigoAgrupacion/text()" />
                        <arg evaluator="xml" expression="get-property('userData')//codigoDivision/text()" />
                        <arg evaluator="xml" expression="get-property('userData')//nombreDivision/text()" />
                        <arg evaluator="xml" expression="get-property('userData')//codigoDepartamento/text()" />
                        <arg evaluator="xml" expression="get-property('userData')//nombreDepartamento/text()" />
                        <arg evaluator="xml" expression="get-property('userData')//codigoArea/text()" />
                        <arg evaluator="xml" expression="get-property('userData')//nombreArea/text()" />
                        <arg evaluator="xml" value="X" />
                        <arg evaluator="xml" value="X" />
                        <arg evaluator="xml" expression="get-property('userData')//codigoCentroCosto/text()" />
                        <arg evaluator="xml" expression="get-property('userData')//nombreCentroCosto/text()" />
                        <arg evaluator="xml" expression="get-property('userData')//nombrelocalidad/text()" />
                        <arg evaluator="xml" expression="get-property('userData')//nombreCargo/text()" />
                        <arg evaluator="xml" expression="get-property('userData')//codigoNivelJerarquico/text()" />
                        <arg evaluator="xml" expression="get-property('userData')//codigoNivelJerarquico/text()" />
                        <arg evaluator="xml" expression="get-property('userData')//numeroCuentaDeposito/text()" />
                        <arg evaluator="xml" expression="get-property('userData')//fechaIngreso/text()" />
                        <arg evaluator="xml" expression="get-property('userData')//fechaSalida/text()" />
                        <arg evaluator="xml" expression="get-property('userData')//estadoEmpleado/text()" />
                        <arg evaluator="xml" expression="get-property('userData')//codigoEmpleado/text()" />
                        <arg evaluator="xml" expression="get-property('userData')//tipousuario/text()" />
                        <arg evaluator="xml" expression="get-property('userData')//subtipo/text()" />
                        <arg evaluator="xml" expression="get-property('userData')//celular/text()" />
                        <arg evaluator="xml" value="AUTO" />
                        <arg evaluator="xml" expression="get-property('currentDate')" />
                        <arg evaluator="xml" expression="get-property('currentDate')" />
                        <arg evaluator="xml" value="0" />
                        <arg evaluator="xml" value="1" />
                        <arg evaluator="xml" value="S" />
                        <arg evaluator="xml" expression="get-property('userData')//correoElectronico/text()" />
                        <arg evaluator="xml" expression="get-property('userData')//idPerfilGlobal/text()" />
                        <arg evaluator="xml" expression="get-property('userData')//id/text()" />
                        <arg evaluator="xml" value="XXXXX" />
                        <arg evaluator="xml" expression="get-property('userData')//tipoIdentificacion/text()" />
                    </args>
                </payloadFactory>
                <call>
                    <endpoint template="HTTPEndpointPostTemplate" uri="{uri.var.enterpriseIntegratorHost}/api.centraid/provisioning/TransactionalIdentity" />
                </call>
                <filter regex="200" source="get-property('axis2', 'HTTP_SC')">
                    <then>
                        <property name="typeAction" value="S" />
                        <property name="profilesSynchronizationId" expression="$ctx:profilesSynchronizationId" />
                        <property name="profilesSynchronizationExecutionId" expression="$ctx:profilesSynchronizationExecutionId" />
                        <store messageStore="RecalculateStore" />
                    </then>
                    <else>
                        <store messageStore="ProfilesSynchronizationCalculateUserDataStore" />
                    </else>
                </filter>
            </sequence>
        </target>
    </iterate>
    <aggregate id="userdataListId">
        <completeCondition>
            <messageCount max="-1" min="-1" />
        </completeCondition>
        <onComplete expression="$body/*[1]">
            <log level="custom">
                <property name="agregado" value="ok" />
            </log>
        </onComplete>
    </aggregate>
    <log level="custom">
        <property name="ProfilesSynchronizationCalculateUserDataSeq" value="Fin.." />
    </log>
</sequence>