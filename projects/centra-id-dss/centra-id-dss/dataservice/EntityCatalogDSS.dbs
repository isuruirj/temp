<data name="common.catalog.ds"
    serviceNamespace="centra-id.com"
    enableBatchRequests="false"
    enableBoxcarring="false"
    transports="https"
    disableLegacyBoxcarringMode="true">

    <config id="default">
        <property name="carbon_datasource_name">CENTRA_ID</property>
    </config>
    <!-- DYNAMIC QUERY CATALOG -->
    <query id="dynamicQuery_catalog" useConfig="default">
        <sql>
           SELECT
               catalog.id,
               catalog.code,
               catalog.name,
               catalog.predetermined,
               catalog.ordinal,
               catalog.value_text,
               catalog.value_number,
               catalog.value_date,
               catalog.value_boolean,
               catalog.catalog_type_id,
               catalog.filter,
               catalog.valid
           FROM sch_centra_id.CATALOGS catalog :innerjoinclause :whereclause ORDER BY :orderby :fromto
        </sql>
        <result element="catalogList" rowName="catalog">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="predetermined" name="predetermined" xsdType="xs:integer"/>
            <element column="ordinal" name="ordinal" xsdType="xs:integer"/>
            <element column="value_text" name="valueText" xsdType="xs:string"/>
            <element column="value_number" name="valueNumber" xsdType="xs:decimal"/>
            <element column="value_date" name="valueDate" xsdType="xs:date"/>
            <element column="value_boolean" name="valueBoolean" xsdType="xs:integer"/>
            <call-query href="queryReferenceById__catalog_catalogType">
                <with-param column="catalog_type_id" name="id"/>
            </call-query>
            <element column="filter" name="filter" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
        </result>
        <param name="whereclause" sqlType="QUERY_STRING"/>
        <param defaultValue="id" name="orderby" sqlType="QUERY_STRING"/>
        <param defaultValue="" name="fromto" sqlType="QUERY_STRING"/>
        <param defaultValue="" name="innerjoinclause" sqlType="QUERY_STRING"/>
    </query>
    <!-- DYNAMIC DISTINCT QUERY CATALOG CatalogType-->
    <query id="dynamicDistinctQuery_catalog_catalogType" useConfig="default">
        <sql>
           SELECT DISTINCT
               catalogType.id,
               catalogType.code,
               catalogType.name,
               catalogType.sort_type,
               catalogType.editable,
               catalogType.valid,
               catalogType.description
           FROM sch_centra_id.CATALOGS catalog :innerjoinclause :whereclause ORDER BY :orderby
        </sql>
        <result element="catalogTypeList" rowName="catalogType">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="sort_type" name="sortType" xsdType="xs:string"/>
            <element column="editable" name="editable" xsdType="xs:integer"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
            <element column="description" name="description" xsdType="xs:string"/>
        </result>
        <param name="whereclause" sqlType="QUERY_STRING"/>
        <param defaultValue="id" name="orderby" sqlType="QUERY_STRING"/>
        <param defaultValue="" name="innerjoinclause" sqlType="QUERY_STRING"/>
    </query>
    <!-- INSERT Catalog -->
    <query id="insertQuery_catalog" returnGeneratedKeys="true" useConfig="default" keyColumns="1">
        <sql>
           INSERT INTO sch_centra_id.CATALOGS(
               code,
               name,
               predetermined,
               ordinal,
               value_text,
               value_number,
               value_date,
               value_boolean,
               catalog_type_id,
               filter,
               valid
        ) VALUES(?,?,?,?,?,?,?,?,?,?,?)
        </sql>
        <result element="GeneratedKeys" rowName="Entry" useColumnNumbers="true">
            <element column="1" name="id" xsdType="xs:long"/>
        </result>
        <param name="code" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="name" ordinal="2" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="predetermined" ordinal="3" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
        <param name="ordinal" ordinal="4" paramType="SCALAR" sqlType="INTEGER" type="IN" defaultValue="#{NULL}"/>
        <param name="valueText" ordinal="5" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="valueNumber" ordinal="6" paramType="SCALAR" sqlType="NUMERIC" type="IN" defaultValue="#{NULL}"/>
        <param name="valueDate" ordinal="7" paramType="SCALAR" sqlType="TIMESTAMP" type="IN" defaultValue="#{NULL}"/>
        <param name="valueBoolean" ordinal="8" paramType="SCALAR" sqlType="INTEGER" type="IN" defaultValue="#{NULL}"/>
        <param name="catalogTypeId" ordinal="9" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
        <param name="filter" ordinal="10" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="valid" ordinal="11" paramType="SCALAR" sqlType="INTEGER" type="IN" defaultValue="1"/>
    </query>
    <!-- UPDATE Catalog -->
    <query id="updateQuery_catalog" useConfig="default">
        <sql>
           UPDATE sch_centra_id.CATALOGS SET
               code=?,
               name=?,
               predetermined=?,
               ordinal=?,
               value_text=?,
               value_number=?,
               value_date=?,
               value_boolean=?,
               catalog_type_id=?,
               filter=?
            WHERE id=?
        </sql>
        <param name="code" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="name" ordinal="2" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="predetermined" ordinal="3" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
        <param name="ordinal" ordinal="4" paramType="SCALAR" sqlType="INTEGER" type="IN" defaultValue="#{NULL}"/>
        <param name="valueText" ordinal="5" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="valueNumber" ordinal="6" paramType="SCALAR" sqlType="NUMERIC" type="IN" defaultValue="#{NULL}"/>
        <param name="valueDate" ordinal="7" paramType="SCALAR" sqlType="TIMESTAMP" type="IN" defaultValue="#{NULL}"/>
        <param name="valueBoolean" ordinal="8" paramType="SCALAR" sqlType="INTEGER" type="IN" defaultValue="#{NULL}"/>
        <param name="catalogTypeId" ordinal="9" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
        <param name="filter" ordinal="10" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="id" ordinal="11" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
    </query>
    <!-- QUERY REFERENCE Catalog CatalogType 0-->
    <query id="queryReferenceById__catalog_catalogType" useConfig="default">
        <sql>
           SELECT 
               catalogType.id,
               catalogType.code,
               catalogType.name,
               catalogType.sort_type,
               catalogType.editable,
               catalogType.valid,
               catalogType.description
           FROM sch_centra_id.CATALOGS_TYPES catalogType WHERE id=? AND valid=1
        </sql>
        <result element="catalogType">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="sort_type" name="sortType" xsdType="xs:string"/>
            <element column="editable" name="editable" xsdType="xs:integer"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
            <element column="description" name="description" xsdType="xs:string"/>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- DYNAMIC FUNCTION  -->
    <query id="dynamicQueryFunction_catalog" useConfig="default">
        <sql>
           SELECT :function(:field) as value FROM :table :innerjoinclause :whereclause
         </sql>
        <result element="result">
            <element column="value" name="value" xsdType="xs:long"/>
        </result>
        <param name="function" sqlType="QUERY_STRING"/>
        <param name="field" sqlType="QUERY_STRING"/>
        <param name="table" sqlType="QUERY_STRING"/>
        <param name="whereclause" sqlType="QUERY_STRING"/>
        <param name="innerjoinclause" sqlType="QUERY_STRING"/>
    </query>
    <!-- DYNAMIC DELETE  -->
    <query id="dynamicDeleteQuery_catalog" useConfig="default">
        <sql>UPDATE :table SET :set WHERE id=:id</sql>
        <param name="id" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
        <param name="table" sqlType="QUERY_STRING"/>
        <param name="set" sqlType="QUERY_STRING"/>
    </query>
    <!-- OPERATIONS -->
    <operation name="listAllOperation_catalog">
        <call-query href="dynamicQuery_catalog">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </operation>
    <operation name="fromToOperation_catalog">
        <call-query href="dynamicQuery_catalog">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="fromto" query-param="fromto"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </operation>
    <operation name="functionOperation_catalog">
        <call-query href="dynamicQueryFunction_catalog">
            <with-param name="function" query-param="function"/>
            <with-param name="field" query-param="field"/>
            <with-param name="table" query-param="table"/>
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </operation>
    <operation name="deleteOperation_catalog">
        <call-query href="dynamicDeleteQuery_catalog">
            <with-param name="id" query-param="id"/>
            <with-param name="table" query-param="table"/>
            <with-param name="set" query-param="set"/>
        </call-query>
    </operation>
    <operation name="create_catalog">
        <call-query href="insertQuery_catalog">
            <with-param name="code" query-param="code"/>
            <with-param name="name" query-param="name"/>
            <with-param name="predetermined" query-param="predetermined"/>
            <with-param name="ordinal" query-param="ordinal"/>
            <with-param name="valueText" query-param="valueText"/>
            <with-param name="valueNumber" query-param="valueNumber"/>
            <with-param name="valueDate" query-param="valueDate"/>
            <with-param name="valueBoolean" query-param="valueBoolean"/>
            <with-param name="catalogTypeId" query-param="catalogTypeId"/>
            <with-param name="filter" query-param="filter"/>
            <with-param name="valid" query-param="valid"/>
        </call-query>
    </operation>
    <operation name="update_catalog">
        <call-query href="updateQuery_catalog">
            <with-param name="code" query-param="code"/>
            <with-param name="name" query-param="name"/>
            <with-param name="predetermined" query-param="predetermined"/>
            <with-param name="ordinal" query-param="ordinal"/>
            <with-param name="valueText" query-param="valueText"/>
            <with-param name="valueNumber" query-param="valueNumber"/>
            <with-param name="valueDate" query-param="valueDate"/>
            <with-param name="valueBoolean" query-param="valueBoolean"/>
            <with-param name="catalogTypeId" query-param="catalogTypeId"/>
            <with-param name="filter" query-param="filter"/>
            <with-param name="id" query-param="id"/>
        </call-query>
    </operation>
    <operation name="distinctOperation_catalog_catalogType">
        <call-query href="dynamicDistinctQuery_catalog_catalogType">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </operation>
    <!-- RESOURCES -->
    <resource method="GET" path="GetAllCatalog">
        <call-query href="dynamicQuery_catalog">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetFromToCatalog">
        <call-query href="dynamicQuery_catalog">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="fromto" query-param="fromto"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetFunctionResultCatalog">
        <call-query href="dynamicQueryFunction_catalog">
            <with-param name="function" query-param="function"/>
            <with-param name="field" query-param="field"/>
            <with-param name="table" query-param="table"/>
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </resource>
    <resource method="DELETE" path="DeleteCatalog">
        <call-query href="dynamicDeleteQuery_catalog">
            <with-param name="id" query-param="id"/>
            <with-param name="table" query-param="table"/>
            <with-param name="set" query-param="set"/>
        </call-query>
    </resource>
    <resource method="POST" path="CreateCatalog">
        <call-query href="insertQuery_catalog">
            <with-param name="code" query-param="code"/>
            <with-param name="name" query-param="name"/>
            <with-param name="predetermined" query-param="predetermined"/>
            <with-param name="ordinal" query-param="ordinal"/>
            <with-param name="valueText" query-param="valueText"/>
            <with-param name="valueNumber" query-param="valueNumber"/>
            <with-param name="valueDate" query-param="valueDate"/>
            <with-param name="valueBoolean" query-param="valueBoolean"/>
            <with-param name="catalogTypeId" query-param="catalogTypeId"/>
            <with-param name="filter" query-param="filter"/>
            <with-param name="valid" query-param="valid"/>
        </call-query>
    </resource>
    <resource method="PUT" path="UpdateCatalog">
        <call-query href="updateQuery_catalog">
            <with-param name="code" query-param="code"/>
            <with-param name="name" query-param="name"/>
            <with-param name="predetermined" query-param="predetermined"/>
            <with-param name="ordinal" query-param="ordinal"/>
            <with-param name="valueText" query-param="valueText"/>
            <with-param name="valueNumber" query-param="valueNumber"/>
            <with-param name="valueDate" query-param="valueDate"/>
            <with-param name="valueBoolean" query-param="valueBoolean"/>
            <with-param name="catalogTypeId" query-param="catalogTypeId"/>
            <with-param name="filter" query-param="filter"/>
            <with-param name="id" query-param="id"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetDistinctCatalogCatalogType">
        <call-query href="dynamicDistinctQuery_catalog_catalogType">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </resource>
</data>
