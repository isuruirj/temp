<?xml version="1.0" encoding="UTF-8"?>
<sequence name="DefaultProfileMaxSeq" onError="FaultSeq" trace="disable" xmlns="http://ws.apache.org/ns/synapse">
    <log level="custom" category="DEBUG">
        <property name="DefaultProfileMaxSeq" value="Inicio.." />
        <property name="uri.var.field" expression="get-property('uri.var.field')"/>
    </log>
    <property action="remove" name="REST_URL_POSTFIX" scope="axis2" />
    <property name="messageType" scope="axis2" type="STRING" value="application/json" />
    <property name="Accept" scope="transport" type="STRING" value="application/json" />
    <property action="remove" name="Content-Type" scope="transport" />
    <property expression="$ctx:query.param.id" name="id" scope="default" type="STRING" />
    <property expression="$ctx:query.param.codeCompany" name="codeCompany" scope="default" type="STRING" />
    <property expression="$ctx:query.param.codeDivision" name="codeDivision" scope="default" type="STRING" />
    <property expression="$ctx:query.param.codeArea" name="codeArea" scope="default" type="STRING" />
    <property expression="$ctx:query.param.codeDepartment" name="codeDepartment" scope="default" type="STRING" />
    <property expression="$ctx:query.param.codePosition" name="codePosition" scope="default" type="STRING" />
    <property expression="$ctx:query.param.nameCompany" name="nameCompany" scope="default" type="STRING" />
    <property expression="$ctx:query.param.nameDivision" name="nameDivision" scope="default" type="STRING" />
    <property expression="$ctx:query.param.nameArea" name="nameArea" scope="default" type="STRING" />
    <property expression="$ctx:query.param.nameDepartment" name="nameDepartment" scope="default" type="STRING" />
    <property expression="$ctx:query.param.namePosition" name="namePosition" scope="default" type="STRING" />
    <property expression="$ctx:query.param.globalProfile.id" name="globalProfile.id" scope="default" type="STRING" />
    <property expression="$ctx:query.param.globalProfile.code" name="globalProfile.code" scope="default" type="STRING" />
    <property expression="$ctx:query.param.globalProfile.name" name="globalProfile.name" scope="default" type="STRING" />
    <property expression="$ctx:query.param.globalProfile.isBirth" name="globalProfile.isBirth" scope="default" type="STRING" />
    <property expression="$ctx:query.param.globalProfile.employeeCodeOwner" name="globalProfile.employeeCodeOwner" scope="default" type="STRING" />
    <property expression="$ctx:query.param.globalProfile.valid" name="globalProfile.valid" scope="default" type="STRING" />
    <property expression="$ctx:query.param.globalProfile.associatedTicketNumber" name="globalProfile.associatedTicketNumber" scope="default" type="STRING" />
    <property expression="$ctx:query.param.globalProfile.status" name="globalProfile.status" scope="default" type="STRING" />
    <property expression="$ctx:query.param.globalProfile.createdDate" name="globalProfile.createdDate" scope="default" type="STRING" />
    <property expression="$ctx:query.param.globalProfile.approvalDate" name="globalProfile.approvalDate" scope="default" type="STRING" />
    <property expression="$ctx:query.param.globalProfile.employeeCodeApproval" name="globalProfile.employeeCodeApproval" scope="default" type="STRING" />
    <property expression="$ctx:query.param.globalProfile.observation" name="globalProfile.observation" scope="default" type="STRING" />
    <property expression="$ctx:query.param.globalProfile.scopeRulesWho" name="globalProfile.scopeRulesWho" scope="default" type="STRING" />
    <property expression="$ctx:query.param.globalProfile.scopeRulesThat" name="globalProfile.scopeRulesThat" scope="default" type="STRING" />
    <property expression="$ctx:query.param.globalProfile.filter" name="globalProfile.filter" scope="default" type="STRING" />
    <property expression="$ctx:query.param.globalProfile.catalogPositionOwner.id" name="globalProfile.catalogPositionOwner.id" scope="default" type="STRING" />
    <property expression="$ctx:query.param.globalProfile.catalogPositionOwner.code" name="globalProfile.catalogPositionOwner.code" scope="default" type="STRING" />
    <property expression="$ctx:query.param.globalProfile.catalogPositionOwner.name" name="globalProfile.catalogPositionOwner.name" scope="default" type="STRING" />
    <property expression="$ctx:query.param.globalProfile.catalogPositionOwner.predetermined" name="globalProfile.catalogPositionOwner.predetermined" scope="default" type="STRING" />
    <property expression="$ctx:query.param.globalProfile.catalogPositionOwner.ordinal" name="globalProfile.catalogPositionOwner.ordinal" scope="default" type="STRING" />
    <property expression="$ctx:query.param.globalProfile.catalogPositionOwner.valueText" name="globalProfile.catalogPositionOwner.valueText" scope="default" type="STRING" />
    <property expression="$ctx:query.param.globalProfile.catalogPositionOwner.valueNumber" name="globalProfile.catalogPositionOwner.valueNumber" scope="default" type="STRING" />
    <property expression="$ctx:query.param.globalProfile.catalogPositionOwner.valueDate" name="globalProfile.catalogPositionOwner.valueDate" scope="default" type="STRING" />
    <property expression="$ctx:query.param.globalProfile.catalogPositionOwner.valueBoolean" name="globalProfile.catalogPositionOwner.valueBoolean" scope="default" type="STRING" />
    <property expression="$ctx:query.param.globalProfile.catalogPositionOwner.catalogType.id" name="globalProfile.catalogPositionOwner.catalogType.id" scope="default" type="STRING" />
    <property expression="$ctx:query.param.globalProfile.catalogPositionOwner.catalogType.code" name="globalProfile.catalogPositionOwner.catalogType.code" scope="default" type="STRING" />
    <property expression="$ctx:query.param.globalProfile.catalogPositionOwner.catalogType.name" name="globalProfile.catalogPositionOwner.catalogType.name" scope="default" type="STRING" />
    <property expression="$ctx:query.param.globalProfile.catalogPositionOwner.catalogType.sortType" name="globalProfile.catalogPositionOwner.catalogType.sortType" scope="default" type="STRING" />
    <property expression="$ctx:query.param.globalProfile.catalogPositionOwner.catalogType.editable" name="globalProfile.catalogPositionOwner.catalogType.editable" scope="default" type="STRING" />
    <property expression="$ctx:query.param.globalProfile.catalogPositionOwner.catalogType.valid" name="globalProfile.catalogPositionOwner.catalogType.valid" scope="default" type="STRING" />
    <property expression="$ctx:query.param.globalProfile.catalogPositionOwner.catalogType.description" name="globalProfile.catalogPositionOwner.catalogType.description" scope="default" type="STRING" />
    <property expression="$ctx:query.param.globalProfile.catalogPositionOwner.filter" name="globalProfile.catalogPositionOwner.filter" scope="default" type="STRING" />
    <property expression="$ctx:query.param.globalProfile.catalogPositionOwner.valid" name="globalProfile.catalogPositionOwner.valid" scope="default" type="STRING" />
    <property expression="$ctx:query.param.valid" name="valid" scope="default" type="STRING" />
    <script language="nashornJs"><![CDATA[
        @add.where.js.function
        function operatorType(value) {
            if(value.indexOf("*")!=-1 ) {
                return " LIKE ";
            } else {
                return " = ";
            }
        }
        var log = mc.getServiceLog();
        var where = " WHERE defaultProfile.valid=1 ";
        var innerJoin = "";
        where += addWhere("id","Integer","defaultProfile","id");
        where += addWhere("codeCompany","String","defaultProfile","code_company");
        where += addWhere("codeDivision","String","defaultProfile","code_division");
        where += addWhere("codeArea","String","defaultProfile","code_area");
        where += addWhere("codeDepartment","String","defaultProfile","code_department");
        where += addWhere("codePosition","String","defaultProfile","code_position");
        where += addWhere("nameCompany","String","defaultProfile","name_company");
        where += addWhere("nameDivision","String","defaultProfile","name_division");
        where += addWhere("nameArea","String","defaultProfile","name_area");
        where += addWhere("nameDepartment","String","defaultProfile","name_department");
        where += addWhere("namePosition","String","defaultProfile","name_position");
        where += addWhere("globalProfile.id","Integer","globalProfile","id");
        where += addWhere("globalProfile.code","String","globalProfile","code");
        where += addWhere("globalProfile.name","String","globalProfile","name");
        where += addWhere("globalProfile.isBirth","Integer","globalProfile","is_birth");
        where += addWhere("globalProfile.employeeCodeOwner","String","globalProfile","employee_code_owner");
        where += addWhere("globalProfile.valid","Integer","globalProfile","valid");
        where += addWhere("globalProfile.associatedTicketNumber","String","globalProfile","associated_ticket_number");
        where += addWhere("globalProfile.status","String","globalProfile","status");
        where += addWhere("globalProfile.createdDate","DateTime","globalProfile","created_date");
        where += addWhere("globalProfile.approvalDate","DateTime","globalProfile","approval_date");
        where += addWhere("globalProfile.employeeCodeApproval","String","globalProfile","employee_code_approval");
        where += addWhere("globalProfile.observation","String","globalProfile","observation");
        where += addWhere("globalProfile.scopeRulesWho","String","globalProfile","scope_rules_who");
        where += addWhere("globalProfile.scopeRulesThat","String","globalProfile","scope_rules_that");
        where += addWhere("globalProfile.filter","String","globalProfile","filter");
        where += addWhere("globalProfile.catalogPositionOwner.id","Integer","globalProfile_catalogPositionOwner","id");
        where += addWhere("globalProfile.catalogPositionOwner.code","String","globalProfile_catalogPositionOwner","code");
        where += addWhere("globalProfile.catalogPositionOwner.name","String","globalProfile_catalogPositionOwner","name");
        where += addWhere("globalProfile.catalogPositionOwner.predetermined","Integer","globalProfile_catalogPositionOwner","predetermined");
        where += addWhere("globalProfile.catalogPositionOwner.ordinal","Integer","globalProfile_catalogPositionOwner","ordinal");
        where += addWhere("globalProfile.catalogPositionOwner.valueText","String","globalProfile_catalogPositionOwner","value_text");
        where += addWhere("globalProfile.catalogPositionOwner.valueNumber","Numeric","globalProfile_catalogPositionOwner","value_number");
        where += addWhere("globalProfile.catalogPositionOwner.valueDate","Date","globalProfile_catalogPositionOwner","value_date");
        where += addWhere("globalProfile.catalogPositionOwner.valueBoolean","Integer","globalProfile_catalogPositionOwner","value_boolean");
        where += addWhere("globalProfile.catalogPositionOwner.catalogType.id","Integer","globalProfile_catalogPositionOwner_catalogType","id");
        where += addWhere("globalProfile.catalogPositionOwner.catalogType.code","String","globalProfile_catalogPositionOwner_catalogType","code");
        where += addWhere("globalProfile.catalogPositionOwner.catalogType.name","String","globalProfile_catalogPositionOwner_catalogType","name");
        where += addWhere("globalProfile.catalogPositionOwner.catalogType.sortType","String","globalProfile_catalogPositionOwner_catalogType","sort_type");
        where += addWhere("globalProfile.catalogPositionOwner.catalogType.editable","Integer","globalProfile_catalogPositionOwner_catalogType","editable");
        where += addWhere("globalProfile.catalogPositionOwner.catalogType.valid","Integer","globalProfile_catalogPositionOwner_catalogType","valid");
        where += addWhere("globalProfile.catalogPositionOwner.catalogType.description","String","globalProfile_catalogPositionOwner_catalogType","description");
        where += addWhere("globalProfile.catalogPositionOwner.filter","String","globalProfile_catalogPositionOwner","filter");
        where += addWhere("globalProfile.catalogPositionOwner.valid","Integer","globalProfile_catalogPositionOwner","valid");
        where += addWhere("valid","Integer","defaultProfile","valid");
        innerJoin += " LEFT JOIN sch_centra_id.GLOBAL_PROFILES globalProfile ON DefaultProfile.global_profile_id = globalProfile.id";
        innerJoin += " LEFT JOIN sch_centra_id.CATALOGS globalProfile_catalogPositionOwner ON globalProfile.catalog_position_owner_id = globalProfile_catalogPositionOwner.id";
        innerJoin += " LEFT JOIN sch_centra_id.CATALOGS_TYPES globalProfile_catalogPositionOwner_catalogType ON globalProfile_catalogPositionOwner.catalog_type_id = globalProfile_catalogPositionOwner_catalogType.id";
        mc.setProperty("uri.var.whereclause",where);
        mc.setProperty("uri.var.innerjoinclause",innerJoin);

        // FIELD
        var field = "defaultProfile."+mc.getProperty("uri.var.field");
        mc.setProperty("uri.var.field",field);

        log.debug(where);]]></script>

    <property value="sch_centra_id.DEFAULT_PROFILES defaultProfile" name="uri.var.table" scope="default" type="STRING"/>
    <property value="MAX" name="uri.var.function" scope="default" type="STRING"/>

    <call>
        <endpoint name="DefaultProfileDSS_Endpoint" template="HTTPEndpointGetTemplate"
              uri="{uri.var.dataServiceHost}/application.default-profile.ds.HTTPEndpoint/GetFunctionResultDefaultProfile?function={uri.var.function}&amp;whereclause={uri.var.whereclause}&amp;field={uri.var.field}&amp;table={uri.var.table}&amp;innerjoinclause={uri.var.innerjoinclause}" />

    </call>

    <property expression="json-eval($.Fault.faultcode)" name="faultCode" scope="default" type="STRING"/>
    <filter regex="true" source="boolean(get-property('faultCode'))">
        <then>
            <sequence key="FaultSeq"/>
        </then>
        <else>
            <payloadFactory media-type="json">
                <format>
                    {
                        "max": $1
                    }
                </format>
                <args>
                    <arg evaluator="json" expression="$.result.value"/>
                </args>
            </payloadFactory>
            <property name="HTTP_SC" scope="axis2" type="STRING" value="200"/>
        </else>
    </filter>
    <log level="custom" category="DEBUG">
        <property name="DefaultProfileMaxSeq" value="Fin.." />
    </log>
    <respond />
</sequence>
