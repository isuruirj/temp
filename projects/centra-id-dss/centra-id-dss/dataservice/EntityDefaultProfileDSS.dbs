<data name="application.default-profile.ds"
    serviceNamespace="centra-id.com"
    enableBatchRequests="false"
    enableBoxcarring="false"
    transports="https"
    disableLegacyBoxcarringMode="true">

    <config id="default">
        <property name="carbon_datasource_name">CENTRA_ID</property>
    </config>
    <!-- DYNAMIC QUERY DEFAULTPROFILE -->
    <query id="dynamicQuery_defaultProfile" useConfig="default">
        <sql>
           SELECT
               defaultProfile.id,
               defaultProfile.code_company,
               defaultProfile.code_division,
               defaultProfile.code_area,
               defaultProfile.code_department,
               defaultProfile.code_position,
               defaultProfile.name_company,
               defaultProfile.name_division,
               defaultProfile.name_area,
               defaultProfile.name_department,
               defaultProfile.name_position,
               defaultProfile.global_profile_id,
               defaultProfile.valid
           FROM sch_centra_id.DEFAULT_PROFILES defaultProfile :innerjoinclause :whereclause ORDER BY :orderby :fromto
        </sql>
        <result element="defaultProfileList" rowName="defaultProfile">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code_company" name="codeCompany" xsdType="xs:string"/>
            <element column="code_division" name="codeDivision" xsdType="xs:string"/>
            <element column="code_area" name="codeArea" xsdType="xs:string"/>
            <element column="code_department" name="codeDepartment" xsdType="xs:string"/>
            <element column="code_position" name="codePosition" xsdType="xs:string"/>
            <element column="name_company" name="nameCompany" xsdType="xs:string"/>
            <element column="name_division" name="nameDivision" xsdType="xs:string"/>
            <element column="name_area" name="nameArea" xsdType="xs:string"/>
            <element column="name_department" name="nameDepartment" xsdType="xs:string"/>
            <element column="name_position" name="namePosition" xsdType="xs:string"/>
            <call-query href="queryReferenceById__defaultProfile_globalProfile">
                <with-param column="global_profile_id" name="id"/>
            </call-query>
            <element column="valid" name="valid" xsdType="xs:integer"/>
        </result>
        <param name="whereclause" sqlType="QUERY_STRING"/>
        <param defaultValue="id" name="orderby" sqlType="QUERY_STRING"/>
        <param defaultValue="" name="fromto" sqlType="QUERY_STRING"/>
        <param defaultValue="" name="innerjoinclause" sqlType="QUERY_STRING"/>
    </query>
    <!-- DYNAMIC DISTINCT QUERY DEFAULTPROFILE GlobalProfile-->
    <query id="dynamicDistinctQuery_defaultProfile_globalProfile" useConfig="default">
        <sql>
           SELECT DISTINCT
               globalProfile.code,
               globalProfile.name,
               globalProfile.is_birth,
               globalProfile.employee_code_owner,
               globalProfile.valid,
               globalProfile.associated_ticket_number,
               globalProfile.status,
               globalProfile.created_date,
               globalProfile.approval_date,
               globalProfile.employee_code_approval,
               globalProfile.observation,
               globalProfile.scope_rules_who,
               globalProfile.scope_rules_that,
               globalProfile.filter,
               globalProfile.catalog_position_owner_id
           FROM sch_centra_id.DEFAULT_PROFILES defaultProfile :innerjoinclause :whereclause ORDER BY :orderby
        </sql>
        <result element="globalProfileList" rowName="globalProfile">
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="is_birth" name="isBirth" xsdType="xs:integer"/>
            <element column="employee_code_owner" name="employeeCodeOwner" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
            <element column="associated_ticket_number" name="associatedTicketNumber" xsdType="xs:string"/>
            <element column="status" name="status" xsdType="xs:string"/>
            <element column="created_date" name="createdDate" xsdType="xs:dateTime"/>
            <element column="approval_date" name="approvalDate" xsdType="xs:dateTime"/>
            <element column="employee_code_approval" name="employeeCodeApproval" xsdType="xs:string"/>
            <element column="observation" name="observation" xsdType="xs:string"/>
            <element column="scope_rules_who" name="scopeRulesWho" xsdType="xs:string"/>
            <element column="scope_rules_that" name="scopeRulesThat" xsdType="xs:string"/>
            <element column="filter" name="filter" xsdType="xs:string"/>
            <call-query href="queryReferenceById__globalProfile_globalProfile_catalogPositionOwner">
                <with-param column="catalog_position_owner_id" name="id"/>
            </call-query>
        </result>
        <param name="whereclause" sqlType="QUERY_STRING"/>
        <param defaultValue="id" name="orderby" sqlType="QUERY_STRING"/>
        <param defaultValue="" name="innerjoinclause" sqlType="QUERY_STRING"/>
    </query>
    <!-- INSERT DefaultProfile -->
    <query id="insertQuery_defaultProfile" returnGeneratedKeys="true" useConfig="default" keyColumns="1">
        <sql>
           INSERT INTO sch_centra_id.DEFAULT_PROFILES(
               code_company,
               code_division,
               code_area,
               code_department,
               code_position,
               name_company,
               name_division,
               name_area,
               name_department,
               name_position,
               global_profile_id,
               valid
        ) VALUES(?,?,?,?,?,?,?,?,?,?,?,?)
        </sql>
        <result element="GeneratedKeys" rowName="Entry" useColumnNumbers="true">
            <element column="1" name="id" xsdType="xs:long"/>
        </result>
        <param name="codeCompany" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="codeDivision" ordinal="2" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="codeArea" ordinal="3" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="codeDepartment" ordinal="4" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="codePosition" ordinal="5" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="nameCompany" ordinal="6" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="nameDivision" ordinal="7" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="nameArea" ordinal="8" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="nameDepartment" ordinal="9" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="namePosition" ordinal="10" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="globalProfileId" ordinal="11" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
        <param name="valid" ordinal="12" paramType="SCALAR" sqlType="INTEGER" type="IN" defaultValue="1"/>
    </query>
    <!-- UPDATE DefaultProfile -->
    <query id="updateQuery_defaultProfile" useConfig="default">
        <sql>
           UPDATE sch_centra_id.DEFAULT_PROFILES SET
               code_company=?,
               code_division=?,
               code_area=?,
               code_department=?,
               code_position=?,
               name_company=?,
               name_division=?,
               name_area=?,
               name_department=?,
               name_position=?,
               global_profile_id=?
            WHERE id=?
        </sql>
        <param name="codeCompany" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="codeDivision" ordinal="2" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="codeArea" ordinal="3" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="codeDepartment" ordinal="4" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="codePosition" ordinal="5" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="nameCompany" ordinal="6" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="nameDivision" ordinal="7" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="nameArea" ordinal="8" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="nameDepartment" ordinal="9" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="namePosition" ordinal="10" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="globalProfileId" ordinal="11" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
        <param name="id" ordinal="12" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
    </query>
    <!-- QUERY REFERENCE DefaultProfile GlobalProfile 0-->
    <query id="queryReferenceById__defaultProfile_globalProfile" useConfig="default">
        <sql>
           SELECT 
               globalProfile.id,
               globalProfile.code,
               globalProfile.name,
               globalProfile.is_birth,
               globalProfile.employee_code_owner,
               globalProfile.valid,
               globalProfile.associated_ticket_number,
               globalProfile.status,
               globalProfile.created_date,
               globalProfile.approval_date,
               globalProfile.employee_code_approval,
               globalProfile.observation,
               globalProfile.scope_rules_who,
               globalProfile.scope_rules_that,
               globalProfile.filter,
               globalProfile.catalog_position_owner_id
           FROM sch_centra_id.GLOBAL_PROFILES globalProfile WHERE id=? AND valid=1
        </sql>
        <result element="globalProfile">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="is_birth" name="isBirth" xsdType="xs:integer"/>
            <element column="employee_code_owner" name="employeeCodeOwner" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
            <element column="associated_ticket_number" name="associatedTicketNumber" xsdType="xs:string"/>
            <element column="status" name="status" xsdType="xs:string"/>
            <element column="created_date" name="createdDate" xsdType="xs:dateTime"/>
            <element column="approval_date" name="approvalDate" xsdType="xs:dateTime"/>
            <element column="employee_code_approval" name="employeeCodeApproval" xsdType="xs:string"/>
            <element column="observation" name="observation" xsdType="xs:string"/>
            <element column="scope_rules_who" name="scopeRulesWho" xsdType="xs:string"/>
            <element column="scope_rules_that" name="scopeRulesThat" xsdType="xs:string"/>
            <element column="filter" name="filter" xsdType="xs:string"/>
            <call-query href="queryReferenceById__globalProfile_globalProfile_catalogPositionOwner">
                <with-param column="catalog_position_owner_id" name="id"/>
            </call-query>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY REFERENCE DefaultProfile Catalog 1-->
    <query id="queryReferenceById__globalProfile_globalProfile_catalogPositionOwner" useConfig="default">
        <sql>
           SELECT 
               catalogPositionOwner.id,
               catalogPositionOwner.code,
               catalogPositionOwner.name,
               catalogPositionOwner.predetermined,
               catalogPositionOwner.ordinal,
               catalogPositionOwner.value_text,
               catalogPositionOwner.value_number,
               catalogPositionOwner.value_date,
               catalogPositionOwner.value_boolean,
               catalogPositionOwner.catalog_type_id,
               catalogPositionOwner.filter,
               catalogPositionOwner.valid
           FROM sch_centra_id.CATALOGS catalogPositionOwner WHERE id=? AND valid=1
        </sql>
        <result element="catalogPositionOwner">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="predetermined" name="predetermined" xsdType="xs:integer"/>
            <element column="ordinal" name="ordinal" xsdType="xs:integer"/>
            <element column="value_text" name="valueText" xsdType="xs:string"/>
            <element column="value_number" name="valueNumber" xsdType="xs:decimal"/>
            <element column="value_date" name="valueDate" xsdType="xs:date"/>
            <element column="value_boolean" name="valueBoolean" xsdType="xs:integer"/>
            <call-query href="queryReferenceById__globalProfile_catalogPositionOwner_catalog_catalogType">
                <with-param column="catalog_type_id" name="id"/>
            </call-query>
            <element column="filter" name="filter" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY REFERENCE DefaultProfile CatalogType 2-->
    <query id="queryReferenceById__globalProfile_catalogPositionOwner_catalog_catalogType" useConfig="default">
        <sql>
           SELECT 
               catalogType.id,
               catalogType.code,
               catalogType.name,
               catalogType.sort_type,
               catalogType.editable,
               catalogType.valid,
               catalogType.description
           FROM sch_centra_id.CATALOGS_TYPES catalogType WHERE id=? AND valid=1
        </sql>
        <result element="catalogType">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="sort_type" name="sortType" xsdType="xs:string"/>
            <element column="editable" name="editable" xsdType="xs:integer"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
            <element column="description" name="description" xsdType="xs:string"/>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- DYNAMIC FUNCTION  -->
    <query id="dynamicQueryFunction_defaultProfile" useConfig="default">
        <sql>
           SELECT :function(:field) as value FROM :table :innerjoinclause :whereclause
         </sql>
        <result element="result">
            <element column="value" name="value" xsdType="xs:long"/>
        </result>
        <param name="function" sqlType="QUERY_STRING"/>
        <param name="field" sqlType="QUERY_STRING"/>
        <param name="table" sqlType="QUERY_STRING"/>
        <param name="whereclause" sqlType="QUERY_STRING"/>
        <param name="innerjoinclause" sqlType="QUERY_STRING"/>
    </query>
    <!-- DYNAMIC DELETE  -->
    <query id="dynamicDeleteQuery_defaultProfile" useConfig="default">
        <sql>UPDATE :table SET :set WHERE id=:id</sql>
        <param name="id" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
        <param name="table" sqlType="QUERY_STRING"/>
        <param name="set" sqlType="QUERY_STRING"/>
    </query>
    <!-- OPERATIONS -->
    <operation name="listAllOperation_defaultProfile">
        <call-query href="dynamicQuery_defaultProfile">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </operation>
    <operation name="fromToOperation_defaultProfile">
        <call-query href="dynamicQuery_defaultProfile">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="fromto" query-param="fromto"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </operation>
    <operation name="functionOperation_defaultProfile">
        <call-query href="dynamicQueryFunction_defaultProfile">
            <with-param name="function" query-param="function"/>
            <with-param name="field" query-param="field"/>
            <with-param name="table" query-param="table"/>
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </operation>
    <operation name="deleteOperation_defaultProfile">
        <call-query href="dynamicDeleteQuery_defaultProfile">
            <with-param name="id" query-param="id"/>
            <with-param name="table" query-param="table"/>
            <with-param name="set" query-param="set"/>
        </call-query>
    </operation>
    <operation name="create_defaultProfile">
        <call-query href="insertQuery_defaultProfile">
            <with-param name="codeCompany" query-param="codeCompany"/>
            <with-param name="codeDivision" query-param="codeDivision"/>
            <with-param name="codeArea" query-param="codeArea"/>
            <with-param name="codeDepartment" query-param="codeDepartment"/>
            <with-param name="codePosition" query-param="codePosition"/>
            <with-param name="nameCompany" query-param="nameCompany"/>
            <with-param name="nameDivision" query-param="nameDivision"/>
            <with-param name="nameArea" query-param="nameArea"/>
            <with-param name="nameDepartment" query-param="nameDepartment"/>
            <with-param name="namePosition" query-param="namePosition"/>
            <with-param name="globalProfileId" query-param="globalProfileId"/>
            <with-param name="valid" query-param="valid"/>
        </call-query>
    </operation>
    <operation name="update_defaultProfile">
        <call-query href="updateQuery_defaultProfile">
            <with-param name="codeCompany" query-param="codeCompany"/>
            <with-param name="codeDivision" query-param="codeDivision"/>
            <with-param name="codeArea" query-param="codeArea"/>
            <with-param name="codeDepartment" query-param="codeDepartment"/>
            <with-param name="codePosition" query-param="codePosition"/>
            <with-param name="nameCompany" query-param="nameCompany"/>
            <with-param name="nameDivision" query-param="nameDivision"/>
            <with-param name="nameArea" query-param="nameArea"/>
            <with-param name="nameDepartment" query-param="nameDepartment"/>
            <with-param name="namePosition" query-param="namePosition"/>
            <with-param name="globalProfileId" query-param="globalProfileId"/>
            <with-param name="id" query-param="id"/>
        </call-query>
    </operation>
    <operation name="distinctOperation_defaultProfile_globalProfile">
        <call-query href="dynamicDistinctQuery_defaultProfile_globalProfile">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </operation>
    <!-- RESOURCES -->
    <resource method="GET" path="GetAllDefaultProfile">
        <call-query href="dynamicQuery_defaultProfile">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetFromToDefaultProfile">
        <call-query href="dynamicQuery_defaultProfile">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="fromto" query-param="fromto"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetFunctionResultDefaultProfile">
        <call-query href="dynamicQueryFunction_defaultProfile">
            <with-param name="function" query-param="function"/>
            <with-param name="field" query-param="field"/>
            <with-param name="table" query-param="table"/>
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </resource>
    <resource method="DELETE" path="DeleteDefaultProfile">
        <call-query href="dynamicDeleteQuery_defaultProfile">
            <with-param name="id" query-param="id"/>
            <with-param name="table" query-param="table"/>
            <with-param name="set" query-param="set"/>
        </call-query>
    </resource>
    <resource method="POST" path="CreateDefaultProfile">
        <call-query href="insertQuery_defaultProfile">
            <with-param name="codeCompany" query-param="codeCompany"/>
            <with-param name="codeDivision" query-param="codeDivision"/>
            <with-param name="codeArea" query-param="codeArea"/>
            <with-param name="codeDepartment" query-param="codeDepartment"/>
            <with-param name="codePosition" query-param="codePosition"/>
            <with-param name="nameCompany" query-param="nameCompany"/>
            <with-param name="nameDivision" query-param="nameDivision"/>
            <with-param name="nameArea" query-param="nameArea"/>
            <with-param name="nameDepartment" query-param="nameDepartment"/>
            <with-param name="namePosition" query-param="namePosition"/>
            <with-param name="globalProfileId" query-param="globalProfileId"/>
            <with-param name="valid" query-param="valid"/>
        </call-query>
    </resource>
    <resource method="PUT" path="UpdateDefaultProfile">
        <call-query href="updateQuery_defaultProfile">
            <with-param name="codeCompany" query-param="codeCompany"/>
            <with-param name="codeDivision" query-param="codeDivision"/>
            <with-param name="codeArea" query-param="codeArea"/>
            <with-param name="codeDepartment" query-param="codeDepartment"/>
            <with-param name="codePosition" query-param="codePosition"/>
            <with-param name="nameCompany" query-param="nameCompany"/>
            <with-param name="nameDivision" query-param="nameDivision"/>
            <with-param name="nameArea" query-param="nameArea"/>
            <with-param name="nameDepartment" query-param="nameDepartment"/>
            <with-param name="namePosition" query-param="namePosition"/>
            <with-param name="globalProfileId" query-param="globalProfileId"/>
            <with-param name="id" query-param="id"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetDistinctDefaultProfileGlobalProfile">
        <call-query href="dynamicDistinctQuery_defaultProfile_globalProfile">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </resource>
</data>
