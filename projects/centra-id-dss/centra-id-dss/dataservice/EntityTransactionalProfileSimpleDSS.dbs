<data name="application.transactional-profile-simple.ds"
    serviceNamespace="centra-id.com"
    enableBatchRequests="false"
    enableBoxcarring="false"
    transports="https"
    disableLegacyBoxcarringMode="true">

    <config id="default">
        <property name="carbon_datasource_name">CENTRA_ID</property>
    </config>
    <!-- DYNAMIC QUERY TRANSACTIONALPROFILESIMPLE -->
    <query id="dynamicQuery_transactionalProfileSimple" useConfig="default">
        <sql>
           SELECT
               transactionalProfileSimple.id,
               transactionalProfileSimple.transactional_profile_code,
               transactionalProfileSimple.transactional_profile_name,
               transactionalProfileSimple.transactional_profile_comments,
               transactionalProfileSimple.transactional_profile_catalog_risk_level_id,
               transactionalProfileSimple.transactional_profile_application_id,
               transactionalProfileSimple.global_profile_id,
               transactionalProfileSimple.global_profile_code,
               transactionalProfileSimple.global_profile_name,
               transactionalProfileSimple.global_profile_is_birth,
               transactionalProfileSimple.application_code,
               transactionalProfileSimple.application_name,
               transactionalProfileSimple.application_automatic_provision,
               transactionalProfileSimple.filter,
               transactionalProfileSimple.application_id,
               transactionalProfileSimple.application_group_id,
               transactionalProfileSimple.application_group_code,
               transactionalProfileSimple.application_group_name,
               transactionalProfileSimple.valid
           FROM sch_centra_id.TRANSACTIONAL_PROFILES_VW transactionalProfileSimple :innerjoinclause :whereclause ORDER BY :orderby :fromto
        </sql>
        <result element="transactionalProfileSimpleList" rowName="transactionalProfileSimple">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="transactional_profile_code" name="transactionalProfileCode" xsdType="xs:string"/>
            <element column="transactional_profile_name" name="transactionalProfileName" xsdType="xs:string"/>
            <element column="transactional_profile_comments" name="transactionalProfileComments" xsdType="xs:string"/>
            <element column="transactional_profile_catalog_risk_level_id" name="transactionalProfileCatalogRiskLevelId" xsdType="xs:integer"/>
            <element column="transactional_profile_application_id" name="transactionalProfileApplicationId" xsdType="xs:integer"/>
            <element column="global_profile_id" name="globalProfileId" xsdType="xs:integer"/>
            <element column="global_profile_code" name="globalProfileCode" xsdType="xs:string"/>
            <element column="global_profile_name" name="globalProfileName" xsdType="xs:string"/>
            <element column="global_profile_is_birth" name="globalProfileIsBirth" xsdType="xs:integer"/>
            <element column="application_code" name="applicationCode" xsdType="xs:string"/>
            <element column="application_name" name="applicationName" xsdType="xs:string"/>
            <element column="application_automatic_provision" name="applicationAutomaticProvision" xsdType="xs:integer"/>
            <element column="filter" name="filter" xsdType="xs:string"/>
            <element column="application_id" name="applicationId" xsdType="xs:integer"/>
            <element column="application_group_id" name="applicationGroupId" xsdType="xs:integer"/>
            <element column="application_group_code" name="applicationGroupCode" xsdType="xs:string"/>
            <element column="application_group_name" name="applicationGroupName" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
        </result>
        <param name="whereclause" sqlType="QUERY_STRING"/>
        <param defaultValue="id" name="orderby" sqlType="QUERY_STRING"/>
        <param defaultValue="" name="fromto" sqlType="QUERY_STRING"/>
        <param defaultValue="" name="innerjoinclause" sqlType="QUERY_STRING"/>
    </query>
    <!-- INSERT TransactionalProfileSimple -->
    <query id="insertQuery_transactionalProfileSimple" returnGeneratedKeys="true" useConfig="default" keyColumns="1">
        <sql>
           INSERT INTO sch_centra_id.TRANSACTIONAL_PROFILES_VW(
               transactional_profile_code,
               transactional_profile_name,
               transactional_profile_comments,
               transactional_profile_catalog_risk_level_id,
               transactional_profile_application_id,
               global_profile_id,
               global_profile_code,
               global_profile_name,
               global_profile_is_birth,
               application_code,
               application_name,
               application_automatic_provision,
               filter,
               application_id,
               application_group_id,
               application_group_code,
               application_group_name,
               valid
        ) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
        </sql>
        <result element="GeneratedKeys" rowName="Entry" useColumnNumbers="true">
            <element column="1" name="id" xsdType="xs:long"/>
        </result>
        <param name="transactionalProfileCode" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="transactionalProfileName" ordinal="2" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="transactionalProfileComments" ordinal="3" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="transactionalProfileCatalogRiskLevelId" ordinal="4" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
        <param name="transactionalProfileApplicationId" ordinal="5" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
        <param name="globalProfileId" ordinal="6" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
        <param name="globalProfileCode" ordinal="7" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="globalProfileName" ordinal="8" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="globalProfileIsBirth" ordinal="9" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
        <param name="applicationCode" ordinal="10" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="applicationName" ordinal="11" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="applicationAutomaticProvision" ordinal="12" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
        <param name="filter" ordinal="13" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="applicationId" ordinal="14" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
        <param name="applicationGroupId" ordinal="15" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
        <param name="applicationGroupCode" ordinal="16" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="applicationGroupName" ordinal="17" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="valid" ordinal="18" paramType="SCALAR" sqlType="INTEGER" type="IN" defaultValue="1"/>
    </query>
    <!-- UPDATE TransactionalProfileSimple -->
    <query id="updateQuery_transactionalProfileSimple" useConfig="default">
        <sql>
           UPDATE sch_centra_id.TRANSACTIONAL_PROFILES_VW SET
               transactional_profile_code=?,
               transactional_profile_name=?,
               transactional_profile_comments=?,
               transactional_profile_catalog_risk_level_id=?,
               transactional_profile_application_id=?,
               global_profile_id=?,
               global_profile_code=?,
               global_profile_name=?,
               global_profile_is_birth=?,
               application_code=?,
               application_name=?,
               application_automatic_provision=?,
               filter=?,
               application_id=?,
               application_group_id=?,
               application_group_code=?,
               application_group_name=?
            WHERE id=?
        </sql>
        <param name="transactionalProfileCode" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="transactionalProfileName" ordinal="2" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="transactionalProfileComments" ordinal="3" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="transactionalProfileCatalogRiskLevelId" ordinal="4" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
        <param name="transactionalProfileApplicationId" ordinal="5" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
        <param name="globalProfileId" ordinal="6" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
        <param name="globalProfileCode" ordinal="7" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="globalProfileName" ordinal="8" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="globalProfileIsBirth" ordinal="9" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
        <param name="applicationCode" ordinal="10" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="applicationName" ordinal="11" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="applicationAutomaticProvision" ordinal="12" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
        <param name="filter" ordinal="13" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="applicationId" ordinal="14" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
        <param name="applicationGroupId" ordinal="15" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
        <param name="applicationGroupCode" ordinal="16" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="applicationGroupName" ordinal="17" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="id" ordinal="18" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
    </query>
    <!-- DYNAMIC FUNCTION  -->
    <query id="dynamicQueryFunction_transactionalProfileSimple" useConfig="default">
        <sql>
           SELECT :function(:field) as value FROM :table :innerjoinclause :whereclause
         </sql>
        <result element="result">
            <element column="value" name="value" xsdType="xs:long"/>
        </result>
        <param name="function" sqlType="QUERY_STRING"/>
        <param name="field" sqlType="QUERY_STRING"/>
        <param name="table" sqlType="QUERY_STRING"/>
        <param name="whereclause" sqlType="QUERY_STRING"/>
        <param name="innerjoinclause" sqlType="QUERY_STRING"/>
    </query>
    <!-- DYNAMIC DELETE  -->
    <query id="dynamicDeleteQuery_transactionalProfileSimple" useConfig="default">
        <sql>UPDATE :table SET :set WHERE id=:id</sql>
        <param name="id" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
        <param name="table" sqlType="QUERY_STRING"/>
        <param name="set" sqlType="QUERY_STRING"/>
    </query>
    <!-- OPERATIONS -->
    <operation name="listAllOperation_transactionalProfileSimple">
        <call-query href="dynamicQuery_transactionalProfileSimple">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </operation>
    <operation name="fromToOperation_transactionalProfileSimple">
        <call-query href="dynamicQuery_transactionalProfileSimple">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="fromto" query-param="fromto"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </operation>
    <operation name="functionOperation_transactionalProfileSimple">
        <call-query href="dynamicQueryFunction_transactionalProfileSimple">
            <with-param name="function" query-param="function"/>
            <with-param name="field" query-param="field"/>
            <with-param name="table" query-param="table"/>
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </operation>
    <operation name="deleteOperation_transactionalProfileSimple">
        <call-query href="dynamicDeleteQuery_transactionalProfileSimple">
            <with-param name="id" query-param="id"/>
            <with-param name="table" query-param="table"/>
            <with-param name="set" query-param="set"/>
        </call-query>
    </operation>
    <operation name="create_transactionalProfileSimple">
        <call-query href="insertQuery_transactionalProfileSimple">
            <with-param name="transactionalProfileCode" query-param="transactionalProfileCode"/>
            <with-param name="transactionalProfileName" query-param="transactionalProfileName"/>
            <with-param name="transactionalProfileComments" query-param="transactionalProfileComments"/>
            <with-param name="transactionalProfileCatalogRiskLevelId" query-param="transactionalProfileCatalogRiskLevelId"/>
            <with-param name="transactionalProfileApplicationId" query-param="transactionalProfileApplicationId"/>
            <with-param name="globalProfileId" query-param="globalProfileId"/>
            <with-param name="globalProfileCode" query-param="globalProfileCode"/>
            <with-param name="globalProfileName" query-param="globalProfileName"/>
            <with-param name="globalProfileIsBirth" query-param="globalProfileIsBirth"/>
            <with-param name="applicationCode" query-param="applicationCode"/>
            <with-param name="applicationName" query-param="applicationName"/>
            <with-param name="applicationAutomaticProvision" query-param="applicationAutomaticProvision"/>
            <with-param name="filter" query-param="filter"/>
            <with-param name="applicationId" query-param="applicationId"/>
            <with-param name="applicationGroupId" query-param="applicationGroupId"/>
            <with-param name="applicationGroupCode" query-param="applicationGroupCode"/>
            <with-param name="applicationGroupName" query-param="applicationGroupName"/>
            <with-param name="valid" query-param="valid"/>
        </call-query>
    </operation>
    <operation name="update_transactionalProfileSimple">
        <call-query href="updateQuery_transactionalProfileSimple">
            <with-param name="transactionalProfileCode" query-param="transactionalProfileCode"/>
            <with-param name="transactionalProfileName" query-param="transactionalProfileName"/>
            <with-param name="transactionalProfileComments" query-param="transactionalProfileComments"/>
            <with-param name="transactionalProfileCatalogRiskLevelId" query-param="transactionalProfileCatalogRiskLevelId"/>
            <with-param name="transactionalProfileApplicationId" query-param="transactionalProfileApplicationId"/>
            <with-param name="globalProfileId" query-param="globalProfileId"/>
            <with-param name="globalProfileCode" query-param="globalProfileCode"/>
            <with-param name="globalProfileName" query-param="globalProfileName"/>
            <with-param name="globalProfileIsBirth" query-param="globalProfileIsBirth"/>
            <with-param name="applicationCode" query-param="applicationCode"/>
            <with-param name="applicationName" query-param="applicationName"/>
            <with-param name="applicationAutomaticProvision" query-param="applicationAutomaticProvision"/>
            <with-param name="filter" query-param="filter"/>
            <with-param name="applicationId" query-param="applicationId"/>
            <with-param name="applicationGroupId" query-param="applicationGroupId"/>
            <with-param name="applicationGroupCode" query-param="applicationGroupCode"/>
            <with-param name="applicationGroupName" query-param="applicationGroupName"/>
            <with-param name="id" query-param="id"/>
        </call-query>
    </operation>
    <!-- RESOURCES -->
    <resource method="GET" path="GetAllTransactionalProfileSimple">
        <call-query href="dynamicQuery_transactionalProfileSimple">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetFromToTransactionalProfileSimple">
        <call-query href="dynamicQuery_transactionalProfileSimple">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="fromto" query-param="fromto"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetFunctionResultTransactionalProfileSimple">
        <call-query href="dynamicQueryFunction_transactionalProfileSimple">
            <with-param name="function" query-param="function"/>
            <with-param name="field" query-param="field"/>
            <with-param name="table" query-param="table"/>
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </resource>
    <resource method="DELETE" path="DeleteTransactionalProfileSimple">
        <call-query href="dynamicDeleteQuery_transactionalProfileSimple">
            <with-param name="id" query-param="id"/>
            <with-param name="table" query-param="table"/>
            <with-param name="set" query-param="set"/>
        </call-query>
    </resource>
    <resource method="POST" path="CreateTransactionalProfileSimple">
        <call-query href="insertQuery_transactionalProfileSimple">
            <with-param name="transactionalProfileCode" query-param="transactionalProfileCode"/>
            <with-param name="transactionalProfileName" query-param="transactionalProfileName"/>
            <with-param name="transactionalProfileComments" query-param="transactionalProfileComments"/>
            <with-param name="transactionalProfileCatalogRiskLevelId" query-param="transactionalProfileCatalogRiskLevelId"/>
            <with-param name="transactionalProfileApplicationId" query-param="transactionalProfileApplicationId"/>
            <with-param name="globalProfileId" query-param="globalProfileId"/>
            <with-param name="globalProfileCode" query-param="globalProfileCode"/>
            <with-param name="globalProfileName" query-param="globalProfileName"/>
            <with-param name="globalProfileIsBirth" query-param="globalProfileIsBirth"/>
            <with-param name="applicationCode" query-param="applicationCode"/>
            <with-param name="applicationName" query-param="applicationName"/>
            <with-param name="applicationAutomaticProvision" query-param="applicationAutomaticProvision"/>
            <with-param name="filter" query-param="filter"/>
            <with-param name="applicationId" query-param="applicationId"/>
            <with-param name="applicationGroupId" query-param="applicationGroupId"/>
            <with-param name="applicationGroupCode" query-param="applicationGroupCode"/>
            <with-param name="applicationGroupName" query-param="applicationGroupName"/>
            <with-param name="valid" query-param="valid"/>
        </call-query>
    </resource>
    <resource method="PUT" path="UpdateTransactionalProfileSimple">
        <call-query href="updateQuery_transactionalProfileSimple">
            <with-param name="transactionalProfileCode" query-param="transactionalProfileCode"/>
            <with-param name="transactionalProfileName" query-param="transactionalProfileName"/>
            <with-param name="transactionalProfileComments" query-param="transactionalProfileComments"/>
            <with-param name="transactionalProfileCatalogRiskLevelId" query-param="transactionalProfileCatalogRiskLevelId"/>
            <with-param name="transactionalProfileApplicationId" query-param="transactionalProfileApplicationId"/>
            <with-param name="globalProfileId" query-param="globalProfileId"/>
            <with-param name="globalProfileCode" query-param="globalProfileCode"/>
            <with-param name="globalProfileName" query-param="globalProfileName"/>
            <with-param name="globalProfileIsBirth" query-param="globalProfileIsBirth"/>
            <with-param name="applicationCode" query-param="applicationCode"/>
            <with-param name="applicationName" query-param="applicationName"/>
            <with-param name="applicationAutomaticProvision" query-param="applicationAutomaticProvision"/>
            <with-param name="filter" query-param="filter"/>
            <with-param name="applicationId" query-param="applicationId"/>
            <with-param name="applicationGroupId" query-param="applicationGroupId"/>
            <with-param name="applicationGroupCode" query-param="applicationGroupCode"/>
            <with-param name="applicationGroupName" query-param="applicationGroupName"/>
            <with-param name="id" query-param="id"/>
        </call-query>
    </resource>
</data>
