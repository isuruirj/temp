<?xml version="1.0" encoding="UTF-8"?>
<sequence name="BusinessLogicAccountResetMovilSeq" onError="FaultSeq" trace="disable" xmlns="http://ws.apache.org/ns/synapse" xmlns:ns="http://org.apache.synapse/xsd">
    <log level="custom" category="DEBUG">
        <property name="BusinessLogicAccountResetMovilSeq" value="Inicio..." />
        <property name="username" expression="//username" />
        <property name="send" expression="//send" />
    </log>
    <property name="username" expression="//username" />
    <property name="send" expression="//send" />
    <!-- calcular password -->
    <script language="js">
        <![CDATA[
			var log = mc.getServiceLog();       
			function passwordGenerator( len ) {
				var length = (len)?(len):(10);
				var string = "abcdefghijklmnopqrstuvwxyz"; //to upper 
				var numeric = '0123456789';
				var punctuation = '!@#$%&';
				var password = "";
				var character = "";
				var crunch = true;
				while( password.length<length ) {
					entity1 = Math.ceil(string.length * Math.random()*Math.random());
					entity2 = Math.ceil(numeric.length * Math.random()*Math.random());
					entity3 = Math.ceil(punctuation.length * Math.random()*Math.random());
					hold = string.charAt( entity1 );
					hold = (password.length%2==0)?(hold.toUpperCase()):(hold);
					character += hold;
					character += numeric.charAt( entity2 );
					character += punctuation.charAt( entity3 );
					password = character;
				}
				password=password.split('').sort(function(){return 0.5-Math.random()}).join('');
				return password.substr(0,len);
			}
			var password = passwordGenerator(10);            
			log.debug(password);
			mc.setProperty('password',password);
	    ]]>
    </script>
    <!-- Cambiar password Usuario -->
    <payloadFactory media-type="xml">
        <format>
            <xsd:changePassword xmlns:xsd="http://org.apache.axis2/xsd" xmlns:xsd1="http://common.mgt.user.carbon.wso2.org/xsd">
                <xsd:userName>$1</xsd:userName>
                <xsd:newPassword>$2</xsd:newPassword>
            </xsd:changePassword>
        </format>
        <args>
            <arg evaluator="xml" expression="get-property('username')" />
            <arg evaluator="xml" expression="get-property('password')" />
        </args>
    </payloadFactory>
    <property xmlns:ns2="http://org.apache.synapse/xsd" xmlns:ns="http://org.apache.synapse/xsd" name="IS_SERVER_USER_DATO" expression="synapse:get-property('IS_SERVER_USER')" scope="default" />
    <property xmlns:ns2="http://org.apache.synapse/xsd" xmlns:ns="http://org.apache.synapse/xsd" name="IS_SERVER_PASSWORD_DATO" expression="synapse:get-property('IS_SERVER_PASSWORD')" scope="default" />
    <property xmlns:ns="http://org.apache.synapse/xsd" name="Authorization" expression="fn:concat('Basic ', base64Encode(fn:concat($ctx:IS_SERVER_USER_DATO,':',$ctx:IS_SERVER_PASSWORD_DATO)))" scope="transport" />
    <property name="service_ep" expression="fn:concat(get-property('uri.var.identityServerHost'),'/services' ,'/UserAdmin')" />
    <header name="To" expression="get-property('service_ep')" />
    <property name="Accept" scope="transport" value="application/xml" />
    <call>
        <endpoint>
            <default />
        </endpoint>
    </call>
    <log level="custom" category="INFO" separator="**2**"></log>
    <property name="fault" expression="//ns:UserStoreException" />
    <property name="fault2" expression="//faultstring" />
    <log level="custom" separator="**3**">
        <property name="fault" expression="get-property('fault')" />
        <property name="fault2" expression="get-property('fault2')" />
    </log>
    <filter regex="true" source="boolean(get-property('fault')) or boolean(get-property('fault2'))">
        <then>
            <property name="fault" expression="fn:concat(get-property('fault'),':',get-property('fault2'))" />
            <sequence key="FaultSeq" />
        </then>
    </filter>
    <property name="messageType" scope="axis2" type="STRING" value="application/json" />
    <property name="HTTP_SC" scope="axis2" type="STRING" value="200" />
    <filter regex="true" source="get-property('send')='screen'">
        <then>
            <property name="AES_PAYLOAD" expression="get-property('password')" />
            <property name="AES_ACTION" scope="default" type="STRING" value="ENCRYPT" />
            <sequence key="EncryptDecryptSeq" />
            <payloadFactory media-type="json">
                <format>
                    {
                        "result":  {
                            "code" : 0,
                            "message" : "Operation performed successfully",
                            "password" : "$1"
                        }
                    }
                </format>
                <args>
                    <arg evaluator="xml" expression="get-property('AES_RESULTS')" />
                </args>
            </payloadFactory>
        </then>
        <else>
            <payloadFactory media-type="json">
                <format>
                    {
                        "result":  {
                            "code" : 0,
                            "message" : "Operation performed successfully"
                        }
                    }
                </format>
                <args></args>
            </payloadFactory>
        </else>
    </filter>
    <log level="custom" category="DEBUG">
        <property name="BusinessLogicAccountResetMovilSeq" value="Fin..." />
    </log>
</sequence>