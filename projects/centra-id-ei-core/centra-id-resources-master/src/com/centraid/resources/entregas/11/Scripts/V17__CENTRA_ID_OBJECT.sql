USE [CENTRA_ID]
GO

---$ Alter table sch_centra_id.APPLICATIONS
IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'sch_centra_id.APPLICATIONS') AND NAME = 'PARENT_ID')
BEGIN
    PRINT 'Add column : sch_centra_id.APPLICATIONS.PARENT_ID'
    ALTER TABLE sch_centra_id.APPLICATIONS
        ADD PARENT_ID BIGINT NULL
END
GO


---$ Alter table sch_centra_id.MASSIVE_PROCESS
PRINT 'Alter table sch_centra_id.MASSIVE_PROCESS alter column fecha_ingreso_empleado'
ALTER TABLE sch_centra_id.MASSIVE_PROCESS
    ALTER COLUMN FECHA_INGRESO_EMPLEADO NVARCHAR(30) NULL
GO

PRINT 'Alter table sch_centra_id.MASSIVE_PROCESS alter column fecha_salida_empleado'
ALTER TABLE sch_centra_id.MASSIVE_PROCESS
    ALTER COLUMN FECHA_SALIDA_EMPLEADO NVARCHAR(30) NULL
GO


---$ Alter table sch_centra_id.OPERATIONS_PROVISIONING
PRINT 'Alter table sch_centra_id.OPERATIONS_PROVISIONING alter column PROFILE_END_DATE'
ALTER TABLE sch_centra_id.OPERATIONS_PROVISIONING
    ALTER COLUMN PROFILE_END_DATE datetime NULL
GO

PRINT 'Alter table sch_centra_id.OPERATIONS_PROVISIONING alter column END_DATE'
ALTER TABLE sch_centra_id.OPERATIONS_PROVISIONING
    ALTER COLUMN END_DATE datetime NULL
GO


---$ Alter table sch_centra_id.REST_USER_STORE_SCIM
IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'sch_centra_id.REST_USER_STORE_SCIM') AND NAME = 'TELLER_NUMBER')
BEGIN
    PRINT 'Add column : sch_centra_id.REST_USER_STORE_SCIM.TELLER_NUMBER'
    ALTER TABLE sch_centra_id.REST_USER_STORE_SCIM
        ADD TELLER_NUMBER NVARCHAR(50) NULL
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'sch_centra_id.REST_USER_STORE_SCIM') AND NAME = 'TELLER_NAME')
BEGIN
    PRINT 'Add column : sch_centra_id.REST_USER_STORE_SCIM.TELLER_NAME'
    ALTER TABLE sch_centra_id.REST_USER_STORE_SCIM
        ADD TELLER_NAME NVARCHAR(50) NULL
END
GO


---$ Alter table sch_centra_id.TAKS_PROVISIONING
PRINT 'Alter table sch_centra_id.TAKS_PROVISIONING alter column UUID'
ALTER TABLE sch_centra_id.TAKS_PROVISIONING
    ALTER COLUMN UUID NVARCHAR(100) NULL
GO


---$ Alter table sch_centra_id.TRANSACTIONAL_IDENTITY
PRINT 'Alter table sch_centra_id.TRANSACTIONAL_IDENTITY alter column MOBILE'
ALTER TABLE sch_centra_id.TRANSACTIONAL_IDENTITY
    ALTER COLUMN MOBILE NVARCHAR(50) NULL
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'sch_centra_id.TRANSACTIONAL_IDENTITY') AND NAME = 'GLOBAL_PROFILE_ID')
BEGIN
    PRINT 'Add column : sch_centra_id.TRANSACTIONAL_IDENTITY.GLOBAL_PROFILE_ID'
    ALTER TABLE sch_centra_id.TRANSACTIONAL_IDENTITY
        ADD GLOBAL_PROFILE_ID BIGINT NULL
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'sch_centra_id.TRANSACTIONAL_IDENTITY') AND NAME = 'USER_DATA_ID')
BEGIN
    PRINT 'Add column : sch_centra_id.TRANSACTIONAL_IDENTITY.USER_DATA_ID'
    ALTER TABLE sch_centra_id.TRANSACTIONAL_IDENTITY
        ADD USER_DATA_ID BIGINT NULL
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'sch_centra_id.TRANSACTIONAL_IDENTITY') AND NAME = 'MAIL')
BEGIN
    PRINT 'Add column : sch_centra_id.TRANSACTIONAL_IDENTITY.MAIL'
    ALTER TABLE sch_centra_id.TRANSACTIONAL_IDENTITY
        ADD MAIL NVARCHAR(100) NULL
END
GO

IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'sch_centra_id.TRANSACTIONAL_IDENTITY') AND NAME = 'PASSWORD')
BEGIN
    PRINT 'Add column : sch_centra_id.TRANSACTIONAL_IDENTITY.PASSWORD'
    ALTER TABLE sch_centra_id.TRANSACTIONAL_IDENTITY
        ADD PASSWORD NVARCHAR(100) NULL
END
GO


---$ Alter table sch_centra_id.TRANSACTIONAL_PROFILES
IF NOT EXISTS(SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = OBJECT_ID(N'sch_centra_id.TRANSACTIONAL_PROFILES') AND NAME = 'CONFIGURED')
BEGIN
    PRINT 'Add column : sch_centra_id.TRANSACTIONAL_PROFILES.CONFIGURED'
    ALTER TABLE sch_centra_id.TRANSACTIONAL_PROFILES
        ADD CONFIGURED INT NOT NULL CONSTRAINT CONFIGURED_Default_ForNotNullCol DEFAULT (0)

    -- drop generated default constraint
    IF OBJECT_ID(N'CONFIGURED_Default_ForNotNullCol') IS NOT NULL 
        ALTER TABLE sch_centra_id.TRANSACTIONAL_PROFILES 
            DROP CONSTRAINT CONFIGURED_Default_ForNotNullCol
END
GO


---$ Alter table sch_centra_id.USERDATA
PRINT 'Alter table sch_centra_id.USERDATA alter column EMPLOYEE_SECOND_SURNAME'
ALTER TABLE sch_centra_id.USERDATA
    ALTER COLUMN EMPLOYEE_SECOND_SURNAME NVARCHAR(30) NULL
GO

PRINT 'Alter table sch_centra_id.USERDATA alter column EMPLOYEE_SECOND_NAME'
ALTER TABLE sch_centra_id.USERDATA
    ALTER COLUMN EMPLOYEE_SECOND_NAME NVARCHAR(30) NULL
GO


---$ Alter View sch_centra_id.DEFAULT_PROFILES_REPORT_VW 
IF OBJECT_ID(N'sch_centra_id.DEFAULT_PROFILES_REPORT_VW') IS NULL
BEGIN
    PRINT 'Create View : sch_centra_id.DEFAULT_PROFILES_REPORT_VW'
    exec('create view sch_centra_id.DEFAULT_PROFILES_REPORT_VW as select null as Col1') 
END
GO

PRINT 'Alter view : sch_centra_id.DEFAULT_PROFILES_REPORT_VW'
GO

SET QUOTED_IDENTIFIER ON 
go

SET ANSI_NULLS ON 
go

ALTER VIEW SCH_CENTRA_ID.DEFAULT_PROFILES_REPORT_VW AS
SELECT 
DF.ID ID,
DF.VALID VALID,
GP.CODE GLOBAL_PROFILE_CODE,
GP.NAME GLOBAL_PROFILE_NAME,
DF.CODE_COMPANY DEFAULT_PROFILE_COMPANY_CODE,
DF.CODE_DIVISION DEFAULT_PROFILE_DIVISION_CODE,
DF.CODE_AREA DEFAULT_PROFILE_AREA_CODE,
DF.CODE_DEPARTMENT DEFAULT_PROFILE_DEPARTMENT_CODE,
POSITION.NAME DEFAULT_PROFILE_POSITION_NAME,
GP.STATUS GLOBAL_PROFILE_STATUS
FROM SCH_CENTRA_ID.DEFAULT_PROFILES DF
JOIN SCH_CENTRA_ID.GLOBAL_PROFILES GP ON DF.GLOBAL_PROFILE_ID=GP.ID
LEFT JOIN SCH_CENTRA_ID.CATALOGS POSITION ON POSITION.CODE = DF.CODE_POSITION
WHERE 
DF.VALID=1 AND
GP.VALID=1

GO

---$ Alter View sch_centra_id.GLOBAL_PROFILES_REPORT_VW 
IF OBJECT_ID(N'sch_centra_id.GLOBAL_PROFILES_REPORT_VW') IS NULL
BEGIN
    PRINT 'Create View : sch_centra_id.GLOBAL_PROFILES_REPORT_VW'
    exec('create view sch_centra_id.GLOBAL_PROFILES_REPORT_VW as select null as Col1') 
END
GO

PRINT 'Alter view : sch_centra_id.GLOBAL_PROFILES_REPORT_VW'
GO

SET QUOTED_IDENTIFIER ON 
go

SET ANSI_NULLS ON 
go

ALTER VIEW SCH_CENTRA_ID.GLOBAL_PROFILES_REPORT_VW AS
SELECT 
GP.ID AS ID,
GP.VALID VALID,
GP.CODE GLOBAL_PROFILE_CODE,
GP.NAME GLOBAL_PROFILE_NAME,
GP.IS_BIRTH GLOBAL_PROFILE_IS_BIRTH,
GP.ASSOCIATED_TICKET_NUMBER GLOBAL_PROFILE_TICKET_NUMBER,
GP.EMPLOYEE_CODE_OWNER GLOBAL_PROFILE_USER_CREATION,
GP.CREATED_DATE GLOBAL_PROFILE_DATE_CREATION,
GP.EMPLOYEE_CODE_APPROVAL GLOBAL_PROFILE_USER_APPROVAL,
GP.APPROVAL_DATE GLOBAL_PROFILE_DATE_APPROVAL,
GP.OBSERVATION AS GLOBAL_PROFILE_OBSERVATION,
GP.STATUS GLOBAL_PROFILE_STATUS,
GP.SCOPE_RULES_WHO  GLOBAL_PROFILE_SCOPE_RULES_WHO,
GP.SCOPE_RULES_THAT GLOBAL_PROFILE_SCOPE_RULES_THAT
FROM SCH_CENTRA_ID.GLOBAL_PROFILES GP
WHERE GP.VALID=1

GO

---$ Alter View sch_centra_id.GLOBAL_TRANSACTIONAL_PROFILES_REPORT_VW 
IF OBJECT_ID(N'sch_centra_id.GLOBAL_TRANSACTIONAL_PROFILES_REPORT_VW') IS NULL
BEGIN
    PRINT 'Create View : sch_centra_id.GLOBAL_TRANSACTIONAL_PROFILES_REPORT_VW'
    exec('create view sch_centra_id.GLOBAL_TRANSACTIONAL_PROFILES_REPORT_VW as select null as Col1') 
END
GO

PRINT 'Alter view : sch_centra_id.GLOBAL_TRANSACTIONAL_PROFILES_REPORT_VW'
GO

SET QUOTED_IDENTIFIER ON 
go

SET ANSI_NULLS ON 
go

ALTER VIEW SCH_CENTRA_ID.GLOBAL_TRANSACTIONAL_PROFILES_REPORT_VW AS
SELECT 
TP.ID ID ,
TP.VALID VALID,
TP.CODE TRANSACTIONAL_PROFILE_CODE ,
TP.NAME TRANSACTIONAL_PROFILE_NAME,
GP.CODE GLOBAL_PROFILE_CODE,
GP.NAME GLOBAL_PROFILE_NAME,
A.CODE APPLICATION_CODE,
A.NAME APPLICATION_NAME,
C_NIVREGI.NAME TRANSACTIONAL_PROFILE_RISK_LEVEL,
GP.STATUS GLOBAL_PROFILE_STATUS
FROM SCH_CENTRA_ID.GLOBAL_PROFILES GP
JOIN SCH_CENTRA_ID.GLOBAL_TRANSACTIONAL_PROFILES GTP ON GTP.GLOBAL_PROFILE_ID=GP.ID
JOIN SCH_CENTRA_ID.TRANSACTIONAL_PROFILES TP ON TP.ID = GTP.TRANSACTIONAL_PROFILE_ID
JOIN SCH_CENTRA_ID.APPLICATIONS A ON TP.APPLICATION_ID = A.ID
JOIN SCH_CENTRA_ID.APPLICATIONS_GROUP AG ON A.APPLICATION_GROUP_ID=AG.ID
LEFT JOIN SCH_CENTRA_ID.CATALOGS C_NIVREGI ON TP.CATALOG_RISK_LEVEL_ID=C_NIVREGI.ID
WHERE 
GP.VALID=1 AND 
GTP.VALID=1 AND
TP.VALID=1 AND 
A.VALID=1 AND 
AG.VALID=1

GO

---$ Alter View sch_centra_id.TRANSACTIONAL_PROFILES_REPORT_VW 
IF OBJECT_ID(N'sch_centra_id.TRANSACTIONAL_PROFILES_REPORT_VW') IS NULL
BEGIN
    PRINT 'Create View : sch_centra_id.TRANSACTIONAL_PROFILES_REPORT_VW'
    exec('create view sch_centra_id.TRANSACTIONAL_PROFILES_REPORT_VW as select null as Col1') 
END
GO

PRINT 'Alter view : sch_centra_id.TRANSACTIONAL_PROFILES_REPORT_VW'
GO

SET QUOTED_IDENTIFIER ON 
go

SET ANSI_NULLS ON 
go

ALTER VIEW SCH_CENTRA_ID.TRANSACTIONAL_PROFILES_REPORT_VW AS
SELECT 
TP.ID ID,
TP.VALID VALID,
TP.CODE TRANSACTIONAL_PROFILE_CODE, 
TP.NAME TRANSACTIONAL_PROFILE_NAME,
A.CODE APPLICATION_CODE,
A.NAME APPLICATION_NAME,
A.AUTOMATIC_PROVISION APPLICATION_AUTOMATIC,
C_NIVREGI.NAME RISK_LEVEL,
TP.COMMENTS COMMENTS,
F.NAME FIELD_NAME,
TR.FIELD_VALUE FIELD_VALUE
FROM SCH_CENTRA_ID.GLOBAL_PROFILES GP
JOIN SCH_CENTRA_ID.GLOBAL_TRANSACTIONAL_PROFILES GTP ON GTP.GLOBAL_PROFILE_ID=GP.ID
JOIN SCH_CENTRA_ID.TRANSACTIONAL_PROFILES TP ON TP.ID = GTP.TRANSACTIONAL_PROFILE_ID
JOIN SCH_CENTRA_ID.APPLICATIONS A ON TP.APPLICATION_ID = A.ID
JOIN SCH_CENTRA_ID.APPLICATIONS_GROUP AG ON A.APPLICATION_GROUP_ID=AG.ID
LEFT JOIN SCH_CENTRA_ID.TEMPLATE_PROFILES TR ON TR.TRANSACTIONAL_PROFILE_ID = TP.ID
LEFT JOIN SCH_CENTRA_ID.FIELDS F ON F.ID = TR.FIELD_ID
LEFT JOIN SCH_CENTRA_ID.CATALOGS C_NIVREGI ON TP.CATALOG_RISK_LEVEL_ID=C_NIVREGI.ID
WHERE GP.VALID=1 AND 
GTP.VALID=1 AND
TP.VALID=1 AND 
A.VALID=1 AND 
AG.VALID=1 AND
TR.VALID=1 AND
F.VALID=1

GO

---$ Alter View sch_centra_id.TRANSACTIONAL_PROFILES_VW 
IF OBJECT_ID(N'sch_centra_id.TRANSACTIONAL_PROFILES_VW') IS NULL
BEGIN
    PRINT 'Create View : sch_centra_id.TRANSACTIONAL_PROFILES_VW'
    exec('create view sch_centra_id.TRANSACTIONAL_PROFILES_VW as select null as Col1') 
END
GO

PRINT 'Alter view : sch_centra_id.TRANSACTIONAL_PROFILES_VW'
GO

SET QUOTED_IDENTIFIER ON 
go

SET ANSI_NULLS ON 
go

ALTER VIEW sch_centra_id.TRANSACTIONAL_PROFILES_VW (GLOBAL_PROFILE_ID, GLOBAL_PROFILE_CODE, GLOBAL_PROFILE_NAME, GLOBAL_PROFILE_IS_BIRTH, ID, TRANSACTIONAL_PROFILE_CODE, TRANSACTIONAL_PROFILE_NAME, TRANSACTIONAL_PROFILE_COMMENTS, TRANSACTIONAL_PROFILE_CATALOG_RISK_LEVEL_ID, TRANSACTIONAL_PROFILE_APPLICATION_ID, APPLICATION_CODE, APPLICATION_NAME, APPLICATION_AUTOMATIC_PROVISION, VALID) AS
 select 
gp.id GLOBAL_PROFILE_ID,
gp.code GLOBAL_PROFILE_CODE,
gp.name GLOBAL_PROFILE_NAME,
gp.is_birth GLOBAL_PROFILE_IS_BIRTH,
tp.id ID,
tp.code TRANSACTIONAL_PROFILE_CODE,
tp.name TRANSACTIONAL_PROFILE_NAME,
tp.comments TRANSACTIONAL_PROFILE_COMMENTS,
tp.catalog_risk_level_id TRANSACTIONAL_PROFILE_CATALOG_RISK_LEVEL_ID,
tp.application_id TRANSACTIONAL_PROFILE_APPLICATION_ID,
a.code APPLICATION_CODE,
a.name APPLICATION_NAME,
a.automatic_provision APPLICATION_AUTOMATIC_PROVISION,
tp.valid VALID
from sch_centra_id.GLOBAL_PROFILES gp
join sch_centra_id.GLOBAL_TRANSACTIONAL_PROFILES gtp on gtp.GLOBAL_PROFILE_ID=gp.id
join sch_centra_id.TRANSACTIONAL_PROFILES tp on gtp.TRANSACTIONAL_PROFILE_ID=tp.id
join sch_centra_id.APPLICATIONS a on a.id=tp.application_id
where gp.valid=1 and gtp.VALID=1 and tp.valid=1

GO

---$ Alter View sch_centra_id.USERDATA_REPORT_VW 
IF OBJECT_ID(N'sch_centra_id.USERDATA_REPORT_VW') IS NULL
BEGIN
    PRINT 'Create View : sch_centra_id.USERDATA_REPORT_VW'
    exec('create view sch_centra_id.USERDATA_REPORT_VW as select null as Col1') 
END
GO

PRINT 'Alter view : sch_centra_id.USERDATA_REPORT_VW'
GO

SET QUOTED_IDENTIFIER ON 
go

SET ANSI_NULLS ON 
go

ALTER VIEW SCH_CENTRA_ID.USERDATA_REPORT_VW AS
SELECT 
UD.ID ID,
UD.VALID VALID,
UD.USERNAME USERDATA_USERNAME,
UD.IDENTIFICATION USERDATA_IDENTIFICATION,
UD.EMPLOYEE_COMPLETE_NAME USERDATA_NAME,
UD.EMPLOYEE_CODE USERDATA_EMPLOYEE_CODE,
TU.NAME USERDATA_TYPE_USER,
STU.NAME USERDATA_SUBTYPE_USER,
UD.MOBILE USERDATA_MOBILE,
UD.MAIL USERDATA_MAIL,
UD.EMPLOYEE_STATUS USERDATA_STATUS,
UD.EFFECTIVE_DATE USERDATA_DATE_CREATION,
UD.ENDING_WORK_DATE USERDATA_DATE_DELETION,
UD.EMPLOYEE_INCOME_DATE USERDATA_DATE_START,
UD.EMPLOYEE_DEPARTURE_DATE USERDATE_DATE_END,
GP.CODE GLOBAL_PROFILE_CODE,
GP.NAME GLOBAL_PROFILE_NAME,
C.BUSINESS_NAME COMPANY_NAME,
DIVISION.NAME DIVISION_NAME,
AREA.NAME AREA_NAME,
DEPARTMENT.NAME DEPARTMENT_NAME,
POSITION.NAME POSITION_NAME,
CC.CODE COST_CENTER_CODE,
CC.NAME COST_CENTER_NAME,
SUPER.IDENTIFICATION SUPERVISOR_IDENTIFICACION,
SUPER.EMPLOYEE_COMPLETE_NAME SUPERVISOR_NAME
FROM SCH_CENTRA_ID.USERDATA UD
JOIN SCH_CENTRA_ID.GLOBAL_PROFILES GP ON UD.GLOBAL_PROFILE_ID = GP.ID
JOIN SCH_CENTRA_ID.TYPE_USERS TU ON TU.ID =UD.TYPE_USER_ID
JOIN SCH_CENTRA_ID.TYPE_USERS STU ON STU.ID =UD.SUBTYPE_USER_ID
JOIN SCH_CENTRA_ID.COMPANIES C ON C.ID = UD.COMPANY_ID
LEFT JOIN SCH_CENTRA_ID.CATALOGS DIVISION ON DIVISION.ID =UD.CATALOG_DIVISION_ID
LEFT JOIN SCH_CENTRA_ID.CATALOGS AREA ON AREA.ID =UD.CATALOG_AREA_ID
LEFT JOIN SCH_CENTRA_ID.CATALOGS DEPARTMENT ON DEPARTMENT.ID =UD.CATALOG_DEPARTMENT_ID
LEFT JOIN SCH_CENTRA_ID.CATALOGS POSITION ON POSITION.ID =UD.CATALOG_POSITION_ID
LEFT JOIN SCH_CENTRA_ID.COSTS_CENTERS CC ON CC.ID = UD.COST_CENTER_ID
LEFT JOIN SCH_CENTRA_ID.USERDATA SUPER ON UD.USERDATA_SUPERVISOR_ID = SUPER.ID
WHERE UD.VALID=1

GO

---$ Create FK : TRANSACTIONALIDENTITY_USERDATA_FK
IF OBJECT_ID(N'sch_centra_id.TRANSACTIONALIDENTITY_USERDATA_FK') IS NULL
BEGIN
    PRINT 'Add FK constraint : sch_centra_id.TRANSACTIONAL_IDENTITY.TRANSACTIONALIDENTITY_USERDATA_FK'
    ALTER TABLE sch_centra_id.TRANSACTIONAL_IDENTITY
        ADD CONSTRAINT TRANSACTIONALIDENTITY_USERDATA_FK
            FOREIGN KEY(USER_DATA_ID)
                REFERENCES sch_centra_id.USERDATA(ID)
                    ON DELETE NO ACTION
                    ON UPDATE NO ACTION
END
GO

---$ Create FK : TRANSACTIONALIDENTITY_GLOBALPROFILE_FK
IF OBJECT_ID(N'sch_centra_id.TRANSACTIONALIDENTITY_GLOBALPROFILE_FK') IS NULL
BEGIN
    PRINT 'Add FK constraint : sch_centra_id.TRANSACTIONAL_IDENTITY.TRANSACTIONALIDENTITY_GLOBALPROFILE_FK'
    ALTER TABLE sch_centra_id.TRANSACTIONAL_IDENTITY
        ADD CONSTRAINT TRANSACTIONALIDENTITY_GLOBALPROFILE_FK
            FOREIGN KEY(GLOBAL_PROFILE_ID)
                REFERENCES sch_centra_id.GLOBAL_PROFILES(id)
                    ON DELETE NO ACTION
                    ON UPDATE NO ACTION
END
GO


