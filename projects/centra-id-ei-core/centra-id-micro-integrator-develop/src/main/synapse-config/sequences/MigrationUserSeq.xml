<?xml version="1.0" encoding="UTF-8"?>
<sequence name="MigrationUserSeq" onError="FaultMigrationSeq" trace="disable" xmlns="http://ws.apache.org/ns/synapse" xmlns:cen="centra-id.com">
    <log level="custom" category="DEBUG">
        <property name="MigrationUserSeq" value="Inicio..." />
        <property name="codigoEmpleado" expression="//codigoEmpleado" />
    </log>
    <property expression="$body//*" name="employeeData" scope="default" type="OM" />
    <property name="Content-Encoding" action="remove" scope="transport" />
    <property name="Accept-Encoding" action="remove" scope="transport" />
    <property action="remove" name="REST_URL_POSTFIX" scope="axis2" />
    <property name="error" value="false" type="BOOLEAN" />
    <property name="msg" value="" />
    <property name="uri.var.username" expression="get-property('employeeData')//userName/text()"></property>
    <property name="username" expression="get-property('employeeData')//userName/text()"></property>
    <property name="identi" expression="get-property('employeeData')//identificacion/text()"></property>
    <call>
        <endpoint template="HTTPEndpointGetTemplate" uri="{uri.var.enterpriseIntegratorHost}/api.centraid/identity/UserDataSimple/0/1?username={uri.var.username}" />
    </call>
    <property name="userDataId" expression="//id" />
    <filter regex="true" source="boolean($ctx:userDataId)">
        <then>
            <property name="error" value="true" type="BOOLEAN" />
            <property name="errorMigration" value=" Username ya existe en el sistema" />
            <sequence key="FaultMigrationSeq" />
        </then>
        <else>
            <!-- -->
            <property name="mail" expression="get-property('employeeData')//mail/text()" />
            <filter regex="false" source="boolean($ctx:mail)">
                <then>
                    <property name="error" value="true" type="BOOLEAN" />
                    <property name="errorMigration" value="CorreoElectronico es obligatorio" />
                    <sequence key="FaultMigrationSeq" />
                </then>
            </filter>
            <!-- -->
            <filter regex="false" source="$ctx:employeeData//identificacion/text()">
                <then>
                    <property name="error" value="true" type="BOOLEAN" />
                    <property name="errorMigration" value="Identificacion es obligatorio" />
                    <sequence key="FaultMigrationSeq" />
                </then>
            </filter>
            <!-- -->
            <filter regex="false" source="$ctx:employeeData//apellidosEmpleado/text()">
                <then>
                    <property name="error" value="true" type="BOOLEAN" />
                    <property name="errorMigration" value="ApellidosEmpleado es obligatorio" />
                    <sequence key="FaultMigrationSeq" />
                </then>
            </filter>
            <!-- -->
            <filter regex="false" source="$ctx:employeeData//nombresEmpleado/text()">
                <then>
                    <property name="error" value="true" type="BOOLEAN" />
                    <property name="errorMigration" value="NombresEmpleado es obligatorio" />
                    <sequence key="FaultMigrationSeq" />
                </then>
            </filter>
            <!-- -->
            <filter regex="false" source="$ctx:employeeData//nombreNivelJerarquico/text()">
                <then>
                    <property name="error" value="true" type="BOOLEAN" />
                    <property name="errorMigration" value="CodigoNivelJerarquico es obligatorio" />
                    <sequence key="FaultMigrationSeq" />
                </then>
            </filter>
            <!-- -->
            <filter regex="false" source="$ctx:employeeData//fechaIngresoEmpleado/text()">
                <then>
                    <property name="error" value="true" type="BOOLEAN" />
                    <property name="errorMigration" value="FechaIngresoEmpleado es obligatorio" />
                    <sequence key="FaultMigrationSeq" />
                </then>
                <else>
                    <property name="fechaIngreso" expression="fn:concat(fn:substring(//fechaIngresoEmpleado,7,4),'-',fn:substring(//fechaIngresoEmpleado,4,2),'-',fn:substring(//fechaIngresoEmpleado,1,2),'T00:00:00.000Z')" />
                </else>
            </filter>
            <!-- -->
            <filter regex="false" source="$ctx:employeeData//estadoEmpleado/text()">
                <then>
                    <property name="error" value="true" type="BOOLEAN" />
                    <property name="errorMigration" value="EstadoEmpleado es obligatorio" />
                    <sequence key="FaultMigrationSeq" />
                </then>
            </filter>
            <!-- -->
            <filter regex="false" source="$ctx:employeeData//codigoEmpleado/text()">
                <then>
                    <property name="error" value="true" type="BOOLEAN" />
                    <property name="errorMigration" value="CodigoEmpleado: es obligatorio" />
                    <sequence key="FaultMigrationSeq" />
                </then>
            </filter>
            <!-- -->
            <filter regex="false" source="$ctx:employeeData//tipoUsuario/text()">
                <then>
                    <property name="error" value="true" type="BOOLEAN" />
                    <property name="errorMigration" value="TipoUsuario es obligatorio" />
                    <sequence key="FaultMigrationSeq" />
                </then>
            </filter>
            <!-- -->
            <filter regex="false" source="$ctx:employeeData//subTipo/text()">
                <then>
                    <property name="error" value="true" type="BOOLEAN" />
                    <property name="errorMigration" value="SubTipo es obligatorio" />
                    <sequence key="FaultMigrationSeq" />
                </then>
            </filter>
            <!-- -->
            <property name="uri.var.companyCode" expression="get-property('employeeData')//codigoCompania/text()" />
            <filter regex="true" source="boolean($ctx:uri.var.companyCode)">
                <then>
                    <call>
                        <endpoint template="HTTPEndpointGetTemplate" uri="{uri.var.enterpriseIntegratorHost}/api.centraid/company/Company?code={uri.var.companyCode}" />
                    </call>
                    <property name="companyId" expression="//company/id" />
                    <property name="companyType" expression="//company/catalogCompanyType/code" />
                    <filter regex="false" source="boolean($ctx:companyId)">
                        <then>
                            <property name="error" value="true" type="BOOLEAN" />
                            <property name="errorMigration" expression="fn:concat($ctx:msg,'CodigoCompania: ',$ctx:uri.var.companyCode,' no existe, ')" />
                            <sequence key="FaultMigrationSeq" />
                        </then>
                    </filter>
                </then>
                <else>
                    <property name="error" value="true" type="BOOLEAN" />
                    <property name="errorMigration" value="CodigoCompania es obligatorio" />
                    <sequence key="FaultMigrationSeq" />
                </else>
            </filter>
            <!-- -->
            <property name="uri.var.divisionCode" expression="get-property('employeeData')//codigoDivision/text()" />
            <filter regex="true" source="boolean($ctx:uri.var.divisionCode)">
                <then>
                    <call>
                        <endpoint template="HTTPEndpointGetTemplate" uri="{uri.var.enterpriseIntegratorHost}/api.centraid/common/Catalog?code={uri.var.divisionCode}&amp;catalogType.code=DIV" />
                    </call>
                    <property name="divisionId" expression="//catalog/id" />
                    <filter regex="false" source="boolean($ctx:divisionId)">
                        <then>
                            <property name="error" value="true" type="BOOLEAN" />
                            <property name="errorMigration" expression="fn:concat($ctx:msg,'CodigoDivision: ',$ctx:uri.var.divisionCode,' no existe, ')" />
                            <sequence key="FaultMigrationSeq" />
                        </then>
                    </filter>
                </then>
                <else>
                    <property name="error" value="true" type="BOOLEAN" />
                    <property name="errorMigration" value="CodigoDivision es obligatorio" />
                    <sequence key="FaultMigrationSeq" />
                </else>
            </filter>
            <!-- -->
            <filter regex="false" source="$ctx:companyType='EXT'">
                <then>
                    <property name="uri.var.areaCode" expression="get-property('employeeData')//codigoArea/text()" />
                    <filter regex="true" source="boolean($ctx:uri.var.areaCode)">
                        <then>
                            <call>
                                <endpoint template="HTTPEndpointGetTemplate" uri="{uri.var.enterpriseIntegratorHost}/api.centraid/common/Catalog?code={uri.var.areaCode}&amp;catalogType.code=ARE" />
                            </call>
                            <property name="areaId" expression="//catalog/id" />
                            <filter regex="false" source="boolean($ctx:areaId)">
                                <then>
                                    <property name="error" value="true" type="BOOLEAN" />
                                    <property name="errorMigration" expression="fn:concat($ctx:msg,'CodigoArea: ',$ctx:uri.var.areaCode,' no existe, ')" />
                                    <sequence key="FaultMigrationSeq" />
                                </then>
                            </filter>
                        </then>
                        <else>
                            <property name="error" value="true" type="BOOLEAN" />
                            <property name="errorMigration" value="CodigoArea es obligatorio" />
                            <sequence key="FaultMigrationSeq" />
                        </else>
                    </filter>
                    <!-- -->
                    <property name="uri.var.departmentCode" expression="get-property('employeeData')//codigoDepartamento/text()" />
                    <filter regex="true" source="boolean($ctx:uri.var.departmentCode)">
                        <then>
                            <call>
                                <endpoint template="HTTPEndpointGetTemplate" uri="{uri.var.enterpriseIntegratorHost}/api.centraid/common/Catalog?code={uri.var.departmentCode}&amp;catalogType.code=DEP" />
                            </call>
                            <property name="departmentId" expression="//catalog/id" />
                            <filter regex="false" source="boolean($ctx:departmentId)">
                                <then>
                                    <property name="error" value="true" type="BOOLEAN" />
                                    <property name="errorMigration" expression="fn:concat($ctx:msg,'CodigoDepartamento: ',$ctx:uri.var.departmentCode,' no existe, ')" />
                                    <sequence key="FaultMigrationSeq" />
                                </then>
                            </filter>
                        </then>
                        <else>
                            <property name="error" value="true" type="BOOLEAN" />
                            <property name="errorMigration" value="CodigoDepartamento es obligatorio" />
                            <sequence key="FaultMigrationSeq" />
                        </else>
                    </filter>
                </then>
            </filter>
            <!-- -->
            <property name="uri.var.positionName" expression="get-property('employeeData')//nombreCargo/text()" />
            <filter regex="true" source="boolean($ctx:uri.var.positionName)">
                <then>
                    <call>
                        <endpoint template="HTTPEndpointGetTemplate" uri="{uri.var.enterpriseIntegratorHost}/api.centraid/common/Catalog?name={uri.var.positionName}&amp;catalogType.code=CAR" />
                    </call>
                    <property name="positionId" expression="//catalog/id" />
                    <filter regex="false" source="boolean($ctx:positionId)">
                        <then>
                            <property name="error" value="true" type="BOOLEAN" />
                            <property name="errorMigration" expression="fn:concat($ctx:msg,'NombreCargo: ',$ctx:uri.var.positionName,' no existe, ')" />
                            <sequence key="FaultMigrationSeq" />
                        </then>
                    </filter>
                </then>
                <else>
                    <property name="error" value="true" type="BOOLEAN" />
                    <property name="errorMigration" value="NombreCargo es obligatorio" />
                    <sequence key="FaultMigrationSeq" />
                </else>
            </filter>
            <!-- -->
            <property name="uri.var.tipoIdentificacion" expression="get-property('employeeData')//tipoIdentificacion/text()" />
            <filter regex="true" source="boolean($ctx:uri.var.tipoIdentificacion)">
                <then>
                    <call>
                        <endpoint template="HTTPEndpointGetTemplate" uri="{uri.var.enterpriseIntegratorHost}/api.centraid/common/Catalog?name={uri.var.tipoIdentificacion}&amp;catalogType.code=TIPIDE" />
                    </call>
                    <property name="identificationTypeId" expression="//catalog/id" />
                    <filter regex="false" source="boolean($ctx:identificationTypeId)">
                        <then>
                            <property name="error" value="true" type="BOOLEAN" />
                            <property name="errorMigration" expression="fn:concat($ctx:msg,'TipoIdentificacion: ',$ctx:uri.var.tipoIdentificacion,' no existe, ')" />
                            <sequence key="FaultMigrationSeq" />
                        </then>
                    </filter>
                </then>
                <else>
                    <property name="error" value="true" type="BOOLEAN" />
                    <property name="errorMigration" value="TipoIdentificacion es obligatorio" />
                    <sequence key="FaultMigrationSeq" />
                </else>
            </filter>
            <!-- -->
            <property name="uri.var.costCenterCode" expression="get-property('employeeData')//codigoCentroCosto/text()" />
            <filter regex="true" source="boolean($ctx:uri.var.costCenterCode)">
                <then>
                    <script language="js">
                        <![CDATA[
							function pad(num, size) {
 								   var s = "000000000" + num;
    								return s.substr(s.length-size);
							}
							mc.setProperty("uri.var.costCenterCode",pad(mc.getProperty("uri.var.costCenterCode"),4));
						]]>
                    </script>
                    <call>
                        <endpoint template="HTTPEndpointGetTemplate" uri="{uri.var.enterpriseIntegratorHost}/api.centraid/company/CostCenter?code={uri.var.costCenterCode}&amp;company.code=BCPI" />
                    </call>
                    <property name="costCenterId" expression="//costCenter/id" />
                    <filter regex="false" source="boolean($ctx:costCenterId)">
                        <then>
                            <property name="error" value="true" type="BOOLEAN" />
                            <property name="errorMigration" expression="fn:concat($ctx:msg,'CentroCostoCode: ',$ctx:uri.var.costCenterCode,' no existe, ')" />
                            <sequence key="FaultMigrationSeq" />
                        </then>
                    </filter>
                </then>
                <else>
                    <property name="error" value="true" type="BOOLEAN" />
                    <property name="errorMigration" value="CentroCostoCode es obligatorio" />
                    <sequence key="FaultMigrationSeq" />
                </else>
            </filter>
            <!-- -->
            <property name="uri.var.typeUserCode" expression="get-property('employeeData')//tipoUsuario/text()" />
            <filter regex="true" source="boolean($ctx:uri.var.typeUserCode)">
                <then>
                    <call>
                        <endpoint template="HTTPEndpointGetTemplate" uri="{uri.var.enterpriseIntegratorHost}/api.centraid/identity/TypeUser?name={uri.var.typeUserCode}&amp;type=T" />
                    </call>
                    <property name="typeUserId" expression="//typeUser/id" />
                    <filter regex="false" source="boolean($ctx:typeUserId)">
                        <then>
                            <property name="error" value="true" type="BOOLEAN" />
                            <property name="errorMigration" expression="fn:concat($ctx:msg,'TypeUserName: ',$ctx:uri.var.typeUserCode,' no existe, ')" />
                            <sequence key="FaultMigrationSeq" />
                        </then>
                    </filter>
                </then>
                <else>
                    <property name="error" value="true" type="BOOLEAN" />
                    <property name="errorMigration" value="TypeUserName es obligatorio" />
                    <sequence key="FaultMigrationSeq" />
                </else>
            </filter>
            <!-- -->
            <property name="uri.var.subtypeUserCode" expression="get-property('employeeData')//subTipo/text()" />
            <filter regex="true" source="boolean($ctx:uri.var.subtypeUserCode)">
                <then>
                    <call>
                        <endpoint template="HTTPEndpointGetTemplate" uri="{uri.var.enterpriseIntegratorHost}/api.centraid/identity/TypeUser?name={uri.var.subtypeUserCode}&amp;type=S" />
                    </call>
                    <property name="subtypeUserId" expression="//typeUser/id" />
                    <filter regex="false" source="boolean($ctx:subtypeUserId)">
                        <then>
                            <property name="error" value="true" type="BOOLEAN" />
                            <property name="errorMigration" expression="fn:concat($ctx:msg,'SubtypeUserCode: ',$ctx:uri.var.subtypeUserCode,' no existe, ')" />
                            <sequence key="FaultMigrationSeq" />
                        </then>
                    </filter>
                </then>
                <else>
                    <property name="error" value="true" type="BOOLEAN" />
                    <property name="errorMigration" value="SubtypeUserCode es obligatorio" />
                    <sequence key="FaultMigrationSeq" />
                </else>
            </filter>
            <!-- -->
            <filter regex="true" source="get-property('employeeData')//estadoEmpleado='ACTIVO'">
                <then>
                    <property name="uri.var.globalProfileCode" expression="get-property('employeeData')//globalProfileId/text()" />
                    <filter regex="true" source="boolean($ctx:uri.var.globalProfileCode) ">
                        <then>
                            <call>
                                <endpoint template="HTTPEndpointGetTemplate" uri="{uri.var.enterpriseIntegratorHost}/api.centraid/application/GlobalProfile?code={uri.var.globalProfileCode}" />
                            </call>
                            <property name="globalProfileId" expression="//globalProfileList/globalProfile/id" />
                            <filter regex="false" source="boolean($ctx:globalProfileId)">
                                <then>
                                    <property name="error" value="true" type="BOOLEAN" />
                                    <property name="errorMigration" expression="fn:concat($ctx:msg,'PerfilGlobal: ',$ctx:uri.var.globalProfileId,' no existe, ')" />
                                    <sequence key="FaultMigrationSeq" />
                                </then>
                            </filter>
                        </then>
                        <else>
                            <property name="error" value="true" type="BOOLEAN" />
                            <property name="errorMigration" value="PerfilGlobal es obligatorio" />
                            <sequence key="FaultMigrationSeq" />
                        </else>
                    </filter>
                    <!-- -->
                    <filter regex="false" source="$ctx:employeeData//codigoEmpleado/text()">
                        <then>
                            <property name="error" value="true" type="BOOLEAN" />
                            <property name="errorMigration" value="CodigoEmpleado es obligatorio" />
                            <sequence key="FaultMigrationSeq" />
                        </then>
                    </filter>
                </then>
            </filter>
            <!-- -->
            <filter regex="true" source="boolean(get-property('employeeData')//identificacionSupervisor/text())">
                <then>
                    <property name="uri.var.identificacionSupervisor" expression="get-property('employeeData')//identificacionSupervisor/text()" />
                    <call>
                        <endpoint template="HTTPEndpointGetTemplate" uri="{uri.var.enterpriseIntegratorHost}/api.centraid/identity/UserDataSimple/0/1?identification={uri.var.identificacionSupervisor}" />
                    </call>
                    <property name="userDataSupervisorId" expression="//id" />
                    <filter regex="false" source="boolean($ctx:userDataSupervisorId)">
                        <then>
                            <property name="error" value="true" type="BOOLEAN" />
                            <property name="errorMigration" expression="fn:concat($ctx:msg,'Supervisor: ',$ctx:uri.var.identificacionSupervisor,' no existe, ')" />
                            <sequence key="FaultMigrationSeq" />
                        </then>
                    </filter>
                </then>
            </filter>
            <filter regex="true" source="boolean(get-property('employeeData')//identificacionContraparte/text())">
                <then>
                    <property name="uri.var.identificacionContraparte" expression="get-property('employeeData')//identificacionContraparte/text()" />
                    <call>
                        <endpoint template="HTTPEndpointGetTemplate" uri="{uri.var.enterpriseIntegratorHost}/api.centraid/identity/UserDataSimple/0/1?identification={uri.var.identificacionContraparte}" />
                    </call>
                    <property name="userDataContraparteId" expression="//id" />
                    <filter regex="false" source="boolean($ctx:userDataContraparteId)">
                        <then>
                            <property name="error" value="true" type="BOOLEAN" />
                            <property name="errorMigration" expression="fn:concat($ctx:msg,'Contraparte: ',$ctx:uri.var.identificacionContraparte,' no existe, ')" />
                            <sequence key="FaultMigrationSeq" />
                        </then>
                    </filter>
                </then>
            </filter>
            <!-- CONTROL FECHA SALIDA ELIMINADOS -->
            <filter regex="true" source="$ctx:employeeData//estadoEmpleado='ELIMINADO'">
                <then>
                    <filter regex="true" source="boolean($ctx:employeeData//fechaSalidaEmpleado)">
                        <then>
                            <property name="fechaSalida" expression="fn:concat(fn:substring($ctx:employeeData//fechaSalidaEmpleado,7,4),'-',fn:substring($ctx:employeeData//fechaSalidaEmpleado,4,2),'-',fn:substring($ctx:employeeData//fechaSalidaEmpleado,1,2),'T00:00:00.000Z')" />
                        </then>
                        <else>
                            <property name="error" value="true" type="BOOLEAN" />
                            <property name="errorMigration" value="Fecha Salida x ELIMINADO no existe" />
                            <sequence key="FaultMigrationSeq" />
                        </else>
                    </filter>
                </then>
            </filter>
            <!-- obtener scim id -->
            <filter regex="true" source="boolean($ctx:employeeData//tellerNumber/text())">
                <then>
                    <property name="uri.var.tellerNumber" expression="$ctx:employeeData//tellerNumber/text()" />
                    <property name="cgi-guid" value="cf7a2107-6cef-411e-9f72-922bbd1cc298" scope="transport" />
                    <property name="cgi-uuid" value="cf7a2107-6cef-411e-9f72-922bbd1cc298" scope="transport" />
                    <property name="cgi-ipclient" value="10.0.0.1" scope="transport" />
                    <property name="cgi-usuarioAplicacion" value="USINTERT" scope="transport" />
                    <call>
                        <endpoint template="HTTPEndpointGetTemplate" uri="{uri.var.identityServerHost}/scim2/Users?filter=userName+eq+BANCS/{uri.var.tellerNumber}" />
                    </call>
                    <filter regex="200" source="get-property('axis2', 'HTTP_SC')">
                        <then></then>
                        <else>
                            <property name="error" value="true" type="BOOLEAN" />
                            <property name="errorMigration" value="Error al validar tellerNumber  BANCS" />
                            <sequence key="FaultMigrationSeq" />
                        </else>
                    </filter>
                </then>
            </filter>
        </else>
    </filter>
    <filter regex="false" source="$ctx:error">
        <then>
            <payloadFactory media-type="xml">
                <format>
                    <root>
                        $1
                    </root>
                </format>
                <args>
                    <arg evaluator="xml" expression="$ctx:employeeData" />
                </args>
            </payloadFactory>
            <call-template target="GetCurrentDateTemplate" />
            <log level="custom" category="DEBUG">
                <property name="MigrationUserSeq" value="Inicio.2.0.0" />
                <property name="globalProfileId" expression="get-property('globalProfileId')" />
                <property name="identificationTypeId" expression="get-property('identificationTypeId')" />
                <property name="subtypeUserId" expression="get-property('subtypeUserId')" />
                <property name="typeUserId" expression="get-property('typeUserId')" />
                <property name="costCenterId" expression="get-property('costCenterId')" />
                <property name="positionId" expression="get-property('positionId')" />
                <property name="departmentId" expression="get-property('departmentId')" />
                <property name="areaId" expression="get-property('areaId')" />
                <property name="divisionId" expression="get-property('divisionId')" />
                <property name="companyId" expression="get-property('companyId')" />
                <property name="guid" expression="fn:substring-after(get-property('MessageID'), 'urn:uuid:')" />
                <property name="currentDate" expression="get-property('currentDate')" />
                <property name="userdataSupervisorId" expression="get-property('userDataSupervisorId')" />
                <property name="userdataResponsibleUserId" expression="get-property('userdataResponsibleUserId')" />
                <property name="userdataBankCounterpartId" expression="get-property('userDataContraparteId')" />
            </log>
            <xslt key="gov:/centra-id/xslt/migration.xsl">
                <property name="globalProfileId" expression="get-property('globalProfileId')" />
                <property name="identificationTypeId" expression="get-property('identificationTypeId')" />
                <property name="subtypeUserId" expression="get-property('subtypeUserId')" />
                <property name="typeUserId" expression="get-property('typeUserId')" />
                <property name="costCenterId" expression="get-property('costCenterId')" />
                <property name="positionId" expression="get-property('positionId')" />
                <property name="departmentId" expression="get-property('departmentId')" />
                <property name="areaId" expression="get-property('areaId')" />
                <property name="divisionId" expression="get-property('divisionId')" />
                <property name="companyId" expression="get-property('companyId')" />
                <property name="guid" expression="fn:substring-after(get-property('MessageID'), 'urn:uuid:')" />
                <property name="currentDate" expression="get-property('currentDate')" />
                <property name="userdataSupervisorId" expression="get-property('userDataSupervisorId')" />
                <property name="userdataResponsibleUserId" expression="get-property('userdataResponsibleUserId')" />
                <property name="userdataBankCounterpartId" expression="get-property('userDataContraparteId')" />
            </xslt>
            <property name="messageType" value="application/json" scope="axis2" />
            <sequence key="MigrationUserDataCreateSeq" />
        </then>
    </filter>
    <log level="custom" category="DEBUG">
        <property name="MigrationUserSeq" value="Fin..." />
    </log>
</sequence>