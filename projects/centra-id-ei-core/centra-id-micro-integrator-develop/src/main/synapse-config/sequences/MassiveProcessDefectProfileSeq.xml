<?xml version="1.0" encoding="UTF-8"?>
<sequence name="MassiveProcessDefectProfileSeq" onError="FaultMassiveProcessUsersSeq" trace="disable" xmlns="http://ws.apache.org/ns/synapse" xmlns:cen="centra-id.com">
    <log level="custom" category="DEBUG">
        <property name="MassiveProcessDefectProfileSeq" value="Inicio..." />
    </log>
    <!-- Recuperar correo electronico de administrador -->
    <call>
        <endpoint template="HTTPEndpointGetTemplate" uri="{uri.var.enterpriseIntegratorHost}/api.centraid/common/GlobalParameter?code=CORELEADM" />
    </call>
    <filter regex="200" source="get-property('axis2', 'HTTP_SC')">
        <then>
            <property expression="//globalParameter/valueText" name="mailAdmin" scope="default" type="STRING" />
        </then>
        <else>
            <property name="observations" value="Global parameter mail admin not exist." />
            <sequence key="FaultMassiveProcessUsersSeq" />
        </else>
    </filter>
    <property name="uri.var.guid" expression="get-property('guid')" />
    <!-- Obtener el perfil por defecto -->
    <header action="remove" name="Content-Type" scope="transport" />
    <property action="remove" name="REST_URL_POSTFIX" scope="axis2" />
    <call>
        <endpoint template="HTTPEndpointGetTemplate" uri="{uri.var.dataServiceHost}/MassiveProcessDSS.HTTPEndpoint/getByGuidAndTypeActionMassiveProcess?guid={uri.var.guid}&amp;typeAction=C" />
    </call>
    <property name="findData" expression="//cen:MassiveProcesses/cen:MassiveProcess" />
    <log level="custom" category="DEBUG">
        <property name="MassiveProcessDefectProfileSeq" value="Inicio.1" />
        <property name="findData" expression="get-property('findData')" />
    </log>
    <filter regex="true" source="boolean(get-property('findData'))">
        <then>
            <iterate attachPath="//cen:MassiveProcesses" expression="//cen:MassiveProcess" preservePayload="true" sequential="true">
                <target>
                    <sequence>
                        <property name="uri.var.massiveProcessId" expression="//cen:MassiveProcesses/cen:MassiveProcess/cen:id" />
                        <property name="uri.var.company" expression="//cen:MassiveProcesses/cen:MassiveProcess/cen:codigoCompania" />
                        <property name="uri.var.division" expression="//cen:MassiveProcesses/cen:MassiveProcess/cen:codigoDivision" />
                        <property name="uri.var.area" expression="//cen:MassiveProcesses/cen:MassiveProcess/cen:codigoArea" />
                        <property name="uri.var.department" expression="//cen:MassiveProcesses/cen:MassiveProcess/cen:codigoDepartamento" />
                        <property name="uri.var.position" expression="//cen:MassiveProcesses/cen:MassiveProcess/cen:nombreCargo" />
                        <property name="companyName" expression="//cen:MassiveProcesses/cen:MassiveProcess/cen:nombreCompania" />
                        <property name="divisionName" expression="//cen:MassiveProcesses/cen:MassiveProcess/cen:nombreDivision" />
                        <property name="areaName" expression="//cen:MassiveProcesses/cen:MassiveProcess/cen:nombreArea" />
                        <property name="departmentName" expression="//cen:MassiveProcesses/cen:MassiveProcess/cen:nombreDepartamento" />
                        <property name="positionName" expression="//cen:MassiveProcesses/cen:MassiveProcess/cen:nombreCargo" />
                        <log level="custom" category="DEBUG">
                            <property name="MassiveProcessDefectProfileSeq" value="Inicio.2" />
                            <property name="massiveProcessId" expression="get-property('uri.var.massiveProcessId')" />
                        </log>
                        <sequence key="DefaultProfileSeq" />
                        <log level="custom" category="DEBUG">
                            <property name="MassiveProcessDefectProfileSeq" value="Inicio.3" />
                            <property name="profileSelect" expression="get-property('profileSelect')" />
                            <property name="profileDuplicate" expression="get-property('profileDuplicate')" />
                            <property name="profileNoExist" expression="get-property('profileNoExist')" />
                        </log>
                        <filter regex="true" source="boolean(get-property('profileSelect'))">
                            <then>
                                <log level="custom" category="DEBUG">
                                    <property name="MassiveProcessDefectProfileSeq" value="Inicio.4" />
                                </log>
                                <!-- registra los datos del perfil global -->
                                <property name="uri.var.globalProfileId" expression="get-property('profileSelect')" />
                                <call>
                                    <endpoint name="EntityGlobalProfile_Endpoint" template="HTTPEndpointGetTemplate" uri="{uri.var.enterpriseIntegratorHost}/api.centraid/application/GlobalProfile/{uri.var.globalProfileId}" />
                                </call>
                                <property action="remove" name="REST_URL_POSTFIX" scope="axis2" />
                                <payloadFactory media-type="xml">
                                    <format>
                                        <cen:_postupdateglobalprofile xmlns:cen="centra-id.com">
                                            <cen:globalProfileId>$1</cen:globalProfileId>
                                            <cen:globalProfileCode>$2</cen:globalProfileCode>
                                            <cen:globalProfileName>$3</cen:globalProfileName>
                                            <cen:id>$4</cen:id>
                                        </cen:_postupdateglobalprofile>
                                    </format>
                                    <args>
                                        <arg evaluator="xml" expression="//globalProfile/id" />
                                        <arg evaluator="xml" expression="//globalProfile/code" />
                                        <arg evaluator="xml" expression="//globalProfile/name" />
                                        <arg evaluator="xml" expression="get-property('uri.var.massiveProcessId')" />
                                    </args>
                                </payloadFactory>
                                <call>
                                    <endpoint template="HTTPEndpointPostTemplate" uri="{uri.var.dataServiceHost}/MassiveProcessDSS.HTTPEndpoint/updateGlobalProfile" />
                                </call>
                                <log level="custom" category="DEBUG">
                                    <property name="MassiveProcessDefectProfileSeq" value="Inicio.6" />
                                </log>
                            </then>
                            <else>
                                <log level="custom" category="DEBUG">
                                    <property name="MassiveProcessDefectProfileSeq" value="Inicio.7" />
                                </log>
                                <!-- registra como error -->
                                <property action="remove" name="REST_URL_POSTFIX" scope="axis2" />
                                <filter regex="true" source="boolean(get-property('profileDuplicate'))">
                                    <then>
                                        <payloadFactory media-type="xml">
                                            <format>
                                                <cen:_postupdateerror xmlns:cen="centra-id.com">
                                                    <cen:observations>PERFIL GLOBAL DUPLICADO</cen:observations>
                                                    <cen:globalProfileError>D</cen:globalProfileError>
                                                    <cen:globalProfileDuplicate>$2</cen:globalProfileDuplicate>
                                                    <cen:id>$1</cen:id>
                                                </cen:_postupdateerror>
                                            </format>
                                            <args>
                                                <arg evaluator="xml" expression="get-property('uri.var.massiveProcessId')" />
                                                <arg evaluator="xml" expression="get-property('profileListDuplicate')" />
                                            </args>
                                        </payloadFactory>
                                    </then>
                                    <else>
                                        <payloadFactory media-type="xml">
                                            <format>
                                                <cen:_postupdateerror xmlns:cen="centra-id.com">
                                                    <cen:observations>NO EXISTE DEFINIDO UN PERFIL GLOBAL</cen:observations>
                                                    <cen:globalProfileError>N</cen:globalProfileError>
                                                    <cen:globalProfileDuplicate></cen:globalProfileDuplicate>
                                                    <cen:id>$1</cen:id>
                                                </cen:_postupdateerror>
                                            </format>
                                            <args>
                                                <arg evaluator="xml" expression="get-property('uri.var.massiveProcessId')" />
                                            </args>
                                        </payloadFactory>
                                    </else>
                                </filter>
                                <log level="custom" category="DEBUG">
                                    <property name="MassiveProcessDefectProfileSeq" value="Inicio.8" />
                                </log>
                                <call>
                                    <endpoint name="MassiveProcessDSS.Endpoint" template="HTTPEndpointPostTemplate" uri="{uri.var.dataServiceHost}/MassiveProcessDSS.HTTPEndpoint/updateError" />
                                </call>
                            </else>
                        </filter>
                    </sequence>
                </target>
            </iterate>
        </then>
    </filter>
    <!-- ENVIAR POR MAIL LOS ERRORES EN LA GENERACION DE LOS PERFILES POR DEFECTOS -->
    <log level="custom" category="DEBUG">
        <property name="MassiveProcessDefectProfileSeq" value="Inicio.7" />
    </log>
    <call>
        <endpoint template="HTTPEndpointGetTemplate" uri="{uri.var.dataServiceHost}/MassiveProcessDSS.HTTPEndpoint/getByGuidByErrorMassiveProcess?guid={uri.var.guid}" />
    </call>
    <property name="findData" expression="//cen:MassiveProcesses/cen:MassiveProcess" />
    <log level="custom" category="DEBUG">
        <property name="MassiveProcessDefectProfileSeq" value="Inicio.6" />
    </log>
    <filter regex="true" source="boolean(get-property('findData'))">
        <then>
            <!--
            <xslt key="gov:/centra-id/xslt/template-mail/mailTemplateDefaultProfileError.xsl" />
            <log level="custom"/>
            <call-template target="SendMailSeqTemplate">
                <with-param name="subject" value="PROBLEMAS AL GENERAR PERFILES POR DEFECTO" />
                <with-param name="toAddress" value="{get-property('mailAdmin')}"  />
            </call-template>
            -->
        </then>
    </filter>
    <log level="custom" category="DEBUG">
        <property name="MassiveProcessDefectProfileSeq" value="Fin..." />
    </log>
</sequence>