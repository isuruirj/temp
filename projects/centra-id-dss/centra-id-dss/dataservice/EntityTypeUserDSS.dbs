<data name="identity.type-user.ds"
    serviceNamespace="centra-id.com"
    enableBatchRequests="false"
    enableBoxcarring="false"
    transports="https"
    disableLegacyBoxcarringMode="true">

    <config id="default">
        <property name="carbon_datasource_name">CENTRA_ID</property>
    </config>
    <!-- DYNAMIC QUERY TYPEUSER -->
    <query id="dynamicQuery_typeUser" useConfig="default">
        <sql>
           SELECT
               typeUser.id,
               typeUser.parent_id,
               typeUser.code,
               typeUser.name,
               typeUser.type,
               typeUser.valid
           FROM sch_centra_id.TYPE_USERS typeUser :innerjoinclause :whereclause ORDER BY :orderby :fromto
        </sql>
        <result element="typeUserList" rowName="typeUser">
            <element column="id" name="id" xsdType="xs:integer"/>
            <call-query href="queryReferenceById__typeUser_parent">
                <with-param column="parent_id" name="id"/>
            </call-query>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="type" name="type" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
        </result>
        <param name="whereclause" sqlType="QUERY_STRING"/>
        <param defaultValue="id" name="orderby" sqlType="QUERY_STRING"/>
        <param defaultValue="" name="fromto" sqlType="QUERY_STRING"/>
        <param defaultValue="" name="innerjoinclause" sqlType="QUERY_STRING"/>
    </query>
    <!-- DYNAMIC DISTINCT QUERY TYPEUSER TypeUser-->
    <query id="dynamicDistinctQuery_typeUser_typeUser" useConfig="default">
        <sql>
           SELECT DISTINCT
               parent.id,
               parent.parent_id,
               parent.code,
               parent.name,
               parent.type,
               parent.valid
           FROM sch_centra_id.TYPE_USERS typeUser :innerjoinclause :whereclause ORDER BY :orderby
        </sql>
        <result element="typeUserList" rowName="typeUser">
            <element column="id" name="id" xsdType="xs:integer"/>
            <call-query href="queryReferenceById__parent_typeUser_parent">
                <with-param column="parent_id" name="id"/>
            </call-query>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="type" name="type" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
        </result>
        <param name="whereclause" sqlType="QUERY_STRING"/>
        <param defaultValue="id" name="orderby" sqlType="QUERY_STRING"/>
        <param defaultValue="" name="innerjoinclause" sqlType="QUERY_STRING"/>
    </query>
    <!-- INSERT TypeUser -->
    <query id="insertQuery_typeUser" returnGeneratedKeys="true" useConfig="default" keyColumns="1">
        <sql>
           INSERT INTO sch_centra_id.TYPE_USERS(
               parent_id,
               code,
               name,
               type,
               valid
        ) VALUES(?,?,?,?,?)
        </sql>
        <result element="GeneratedKeys" rowName="Entry" useColumnNumbers="true">
            <element column="1" name="id" xsdType="xs:long"/>
        </result>
        <param name="parentId" ordinal="1" paramType="SCALAR" sqlType="BIGINT" type="IN" defaultValue="#{NULL}"/>
        <param name="code" ordinal="2" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="name" ordinal="3" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="type" ordinal="4" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="valid" ordinal="5" paramType="SCALAR" sqlType="INTEGER" type="IN" defaultValue="1"/>
    </query>
    <!-- UPDATE TypeUser -->
    <query id="updateQuery_typeUser" useConfig="default">
        <sql>
           UPDATE sch_centra_id.TYPE_USERS SET
               parent_id=?,
               code=?,
               name=?,
               type=?
            WHERE id=?
        </sql>
        <param name="parentId" ordinal="1" paramType="SCALAR" sqlType="BIGINT" type="IN" defaultValue="#{NULL}"/>
        <param name="code" ordinal="2" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="name" ordinal="3" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="type" ordinal="4" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="id" ordinal="5" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
    </query>
    <!-- QUERY REFERENCE TypeUser TypeUser 0-->
    <query id="queryReferenceById__typeUser_parent" useConfig="default">
        <sql>
           SELECT 
               parent.id,
               parent.parent_id,
               parent.code,
               parent.name,
               parent.type,
               parent.valid
           FROM sch_centra_id.TYPE_USERS parent WHERE id=? AND valid=1
        </sql>
        <result element="parent">
            <element column="id" name="id" xsdType="xs:integer"/>
            <call-query href="queryReferenceById__parent_typeUser_parent">
                <with-param column="parent_id" name="id"/>
            </call-query>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="type" name="type" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY REFERENCE TypeUser TypeUser 1-->
    <query id="queryReferenceById__parent_typeUser_parent" useConfig="default">
        <sql>
           SELECT 
               parent.id,
               parent.parent_id,
               parent.code,
               parent.name,
               parent.type,
               parent.valid
           FROM sch_centra_id.TYPE_USERS parent WHERE id=? AND valid=1
        </sql>
        <result element="parent">
            <element column="id" name="id" xsdType="xs:integer"/>
            <call-query href="queryReferenceById__parent_parent_typeUser_parent">
                <with-param column="parent_id" name="id"/>
            </call-query>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="type" name="type" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY REFERENCE TypeUser TypeUser 2-->
    <query id="queryReferenceById__parent_parent_typeUser_parent" useConfig="default">
        <sql>
           SELECT 
               parent.id,
               parent.parent_id,
               parent.code,
               parent.name,
               parent.type,
               parent.valid
           FROM sch_centra_id.TYPE_USERS parent WHERE id=? AND valid=1
        </sql>
        <result element="parent">
            <element column="id" name="id" xsdType="xs:integer"/>
              <element name="parent">
                <element column="parent_id" name="id" xsdType="xs:integer"/>
              </element>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="type" name="type" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY REFERENCE TypeUser TypeUser 3-->
    <query id="queryReferenceById__parent_parent_parent_typeUser_parent" useConfig="default">
        <sql>
           SELECT 
               parent.id,
               parent.parent_id,
               parent.code,
               parent.name,
               parent.type,
               parent.valid
           FROM sch_centra_id.TYPE_USERS parent WHERE id=? AND valid=1
        </sql>
        <result element="parent">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="type" name="type" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- DYNAMIC FUNCTION  -->
    <query id="dynamicQueryFunction_typeUser" useConfig="default">
        <sql>
           SELECT :function(:field) as value FROM :table :innerjoinclause :whereclause
         </sql>
        <result element="result">
            <element column="value" name="value" xsdType="xs:long"/>
        </result>
        <param name="function" sqlType="QUERY_STRING"/>
        <param name="field" sqlType="QUERY_STRING"/>
        <param name="table" sqlType="QUERY_STRING"/>
        <param name="whereclause" sqlType="QUERY_STRING"/>
        <param name="innerjoinclause" sqlType="QUERY_STRING"/>
    </query>
    <!-- DYNAMIC DELETE  -->
    <query id="dynamicDeleteQuery_typeUser" useConfig="default">
        <sql>UPDATE :table SET :set WHERE id=:id</sql>
        <param name="id" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
        <param name="table" sqlType="QUERY_STRING"/>
        <param name="set" sqlType="QUERY_STRING"/>
    </query>
    <!-- OPERATIONS -->
    <operation name="listAllOperation_typeUser">
        <call-query href="dynamicQuery_typeUser">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </operation>
    <operation name="fromToOperation_typeUser">
        <call-query href="dynamicQuery_typeUser">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="fromto" query-param="fromto"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </operation>
    <operation name="functionOperation_typeUser">
        <call-query href="dynamicQueryFunction_typeUser">
            <with-param name="function" query-param="function"/>
            <with-param name="field" query-param="field"/>
            <with-param name="table" query-param="table"/>
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </operation>
    <operation name="deleteOperation_typeUser">
        <call-query href="dynamicDeleteQuery_typeUser">
            <with-param name="id" query-param="id"/>
            <with-param name="table" query-param="table"/>
            <with-param name="set" query-param="set"/>
        </call-query>
    </operation>
    <operation name="create_typeUser">
        <call-query href="insertQuery_typeUser">
            <with-param name="parentId" query-param="parentId"/>
            <with-param name="code" query-param="code"/>
            <with-param name="name" query-param="name"/>
            <with-param name="type" query-param="type"/>
            <with-param name="valid" query-param="valid"/>
        </call-query>
    </operation>
    <operation name="update_typeUser">
        <call-query href="updateQuery_typeUser">
            <with-param name="parentId" query-param="parentId"/>
            <with-param name="code" query-param="code"/>
            <with-param name="name" query-param="name"/>
            <with-param name="type" query-param="type"/>
            <with-param name="id" query-param="id"/>
        </call-query>
    </operation>
    <operation name="distinctOperation_typeUser_parent">
        <call-query href="dynamicDistinctQuery_typeUser_typeUser">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </operation>
    <!-- RESOURCES -->
    <resource method="GET" path="GetAllTypeUser">
        <call-query href="dynamicQuery_typeUser">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetFromToTypeUser">
        <call-query href="dynamicQuery_typeUser">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="fromto" query-param="fromto"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetFunctionResultTypeUser">
        <call-query href="dynamicQueryFunction_typeUser">
            <with-param name="function" query-param="function"/>
            <with-param name="field" query-param="field"/>
            <with-param name="table" query-param="table"/>
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </resource>
    <resource method="DELETE" path="DeleteTypeUser">
        <call-query href="dynamicDeleteQuery_typeUser">
            <with-param name="id" query-param="id"/>
            <with-param name="table" query-param="table"/>
            <with-param name="set" query-param="set"/>
        </call-query>
    </resource>
    <resource method="POST" path="CreateTypeUser">
        <call-query href="insertQuery_typeUser">
            <with-param name="parentId" query-param="parentId"/>
            <with-param name="code" query-param="code"/>
            <with-param name="name" query-param="name"/>
            <with-param name="type" query-param="type"/>
            <with-param name="valid" query-param="valid"/>
        </call-query>
    </resource>
    <resource method="PUT" path="UpdateTypeUser">
        <call-query href="updateQuery_typeUser">
            <with-param name="parentId" query-param="parentId"/>
            <with-param name="code" query-param="code"/>
            <with-param name="name" query-param="name"/>
            <with-param name="type" query-param="type"/>
            <with-param name="id" query-param="id"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetDistinctTypeUserParent">
        <call-query href="dynamicDistinctQuery_typeUser_typeUser">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </resource>
</data>
