<?xml version="1.0" encoding="UTF-8"?>
<sequence name="BusinessProcessSendNotificationSeq" onError="FaultSeq" trace="disable" xmlns="http://ws.apache.org/ns/synapse">
    <log level="custom" category="DEBUG">
        <property name="BusinessProcessSendNotificationSeq" value="Inicio.." />
    </log>
    <property name="messageType" value="application/json" scope="axis2" />
    <property expression="$body/*[1]" name="payload" scope="default" type="STRING" />
    <script language="js">
        <![CDATA[var payload = mc.getProperty("payload");mc.setPayloadJSON(payload);]]>
    </script>
    <property name="messageType" scope="axis2" type="STRING" value="application/xml" />
    <property name="Accept" scope="transport" type="STRING" value="application/xml" />
    <property name="data" expression="$body//*" scope="default" type="OM" />
    <property name="identification" expression="//identity" />
    <property name="guid" expression="//guid" />
    <call-template target="GetCurrentDateFormatTemplate" />
    <switch source="$ctx:data//processkey">
        <case regex="PROCREUSUINT">
            <switch source="$ctx:data//type">
                <case regex="A">
                    <property name="templateType" value="Plantilla_Email_AprobacionCreacionUsuarioEmpleadoBPFilial" />
                    <sequence key="BusinessProcessSendNotificationInternApproveSeq" />
                </case>
                <case regex="R">
                    <property name="templateType" value="Plantilla_Email_RechazoAprobacionCreacionUsuarioEmpleadoBPFilial" />
                    <sequence key="BusinessProcessSendNotificationInternRejectedSeq" />
                </case>
                <default>
                    <property name="fault" value="Type does not exist " />
                    <sequence key="FaultSeq" />
                </default>
            </switch>
        </case>
        <case regex="PROCREUSUEXT">
            <switch source="$ctx:data//type">
                <case regex="A">
                    <property name="templateType" value="Plantilla_Email_AprobacionCreacionUsuarioExterno" />
                    <sequence key="BusinessProcessSendNotificationExternApproveSeq" />
                </case>
                <case regex="R">
                    <property name="templateType" value="Plantilla_Email_RechazoAprobacionCreacionUsuarioExterno" />
                    <sequence key="BusinessProcessSendNotificationExternRejectedSeq" />
                </case>
                <default>
                    <property name="fault" value="Type does not exist " />
                    <sequence key="FaultSeq" />
                </default>
            </switch>
        </case>
        <case regex="PROCREUSUGEN">
            <switch source="$ctx:data//type">
                <case regex="A">
                    <property name="templateType" value="Plantilla_Email_AprobacionSolicitudCreacionUsuario" />
                    <sequence key="BusinessProcessSendNotificationGenericApproveSeq" />
                </case>
                <case regex="R">
                    <property name="templateType" value="Plantilla_Email_RechazoAprobacionCreacionUsuarioGenerico" />
                    <sequence key="BusinessProcessSendNotificationGenericRejectedSeq" />
                </case>
                <default>
                    <property name="fault" value="Type does not exist " />
                    <sequence key="FaultSeq" />
                </default>
            </switch>
        </case>
        <case regex="PROCREUSUGENROT">
            <switch source="$ctx:data//type">
                <case regex="A">
                    <property name="templateType" value="Plantilla_Email_AprobacionCreacionUsuarioGenericoRotativo" />
                    <sequence key="BusinessProcessSendNotificationGenericRotaryApproveSeq" />
                </case>
                <case regex="R">
                    <property name="templateType" value="Plantilla_Email_RechazoAprobacionCreacionUsuarioGenericoRotativo" />
                    <sequence key="BusinessProcessSendNotificationGenericRotaryRejectedSeq" />
                </case>
                <default>
                    <property name="fault" value="Type does not exist " />
                    <sequence key="FaultSeq" />
                </default>
            </switch>
        </case>
        <default>
            <property name="fault" value="Processkey does not exist " />
            <sequence key="FaultSeq" />
        </default>
    </switch>
    <property name="message" expression="json-eval($)" />
    <!-- Enviar mail -->
    <call-template target="SendMailSeqTemplate">
        <with-param name="templateType" value="{get-property('templateType')}" />
        <with-param name="toAddress" value="{get-property('toAddress')}" />
        <with-param name="identification" value="{get-property('identification')}" />
        <with-param name="message" value="{get-property('message')}" />
        <with-param name="attachedName" value="X" />
        <with-param name="attachedBase64" value="X" />
        <with-param name="uuid" value="{get-property('guid')}" />
        <with-param name="guid" value="{get-property('guid')}" />
    </call-template>
    <property name="messageType" scope="axis2" type="STRING" value="application/json" />
    <property name="HTTP_SC" scope="axis2" type="STRING" value="200" />
    <payloadFactory media-type="json">
        <format>
            {
                "result":  {
                    "code" : 0,
                    "message" : "Operation performed successfully"
                }
            }
        </format>
        <args></args>
    </payloadFactory>
    <log level="custom" category="DEBUG">
        <property name="BusinessProcessSendNotificationSeq" value="Fin.." />
    </log>
</sequence>