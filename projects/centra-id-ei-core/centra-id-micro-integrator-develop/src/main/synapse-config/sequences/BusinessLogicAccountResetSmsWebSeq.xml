<?xml version="1.0" encoding="UTF-8"?>
<sequence name="BusinessLogicAccountResetSmsWebSeq" onError="FaultSeq" trace="disable" xmlns="http://ws.apache.org/ns/synapse" xmlns:ns="http://org.apache.synapse/xsd">
    <log level="custom" category="DEBUG">
        <property name="BusinessLogicAccountResetSmsWebSeq" value="Inicio..." />
    </log>
    <property name="uri.var.username" expression="//username" />
    <property name="uri.var.identification" expression="//identification" />
    <property name="mobile" expression="//mobile/text()" />
    <filter regex="true" source="boolean($ctx:uri.var.identification)">
        <then>
            <call>
                <endpoint template="HTTPEndpointGetTemplate" uri="{uri.var.enterpriseIntegratorHost}/api.centraid/identity/UserDataSimple?identification={uri.var.identification}&amp;username={uri.var.username}" />
            </call>
            <filter regex="200" source="get-property('axis2', 'HTTP_SC')">
                <then>
                    <filter regex="true" source="boolean(//username/text())">
                        <then>
                            <!-- calcular password -->
                            <script language="js">
                                <![CDATA[
                                            var log = mc.getServiceLog();       
                                            function passwordGenerator( len ) {
                                                var length = (len)?(len):(10);
                                                var string = "abcdefghijklmnopqrstuvwxyz"; //to upper 
                                                var numeric = '0123456789';
                                                var punctuation = '!@#$%&';
                                                var password = "";
                                                var character = "";
                                                var crunch = true;
                                                while( password.length<length ) {
                                                    entity1 = Math.ceil(string.length * Math.random()*Math.random());
                                                    entity2 = Math.ceil(numeric.length * Math.random()*Math.random());
                                                    entity3 = Math.ceil(punctuation.length * Math.random()*Math.random());
                                                    hold = string.charAt( entity1 );
                                                    hold = (password.length%2==0)?(hold.toUpperCase()):(hold);
                                                    character += hold;
                                                    character += numeric.charAt( entity2 );
                                                    character += punctuation.charAt( entity3 );
                                                    password = character;
                                                }
                                                password=password.split('').sort(function(){return 0.5-Math.random()}).join('');
                                                return password.substr(0,len);
                                            }
                                            var password = passwordGenerator(10);            
                                            //log.debug(password);
                                            mc.setProperty('password',password);
                                        ]]>
                            </script>
                            <!-- Cambiar password Usuario -->
                            <payloadFactory media-type="xml">
                                <format>
                                    <xsd:changePassword xmlns:xsd="http://org.apache.axis2/xsd" xmlns:xsd1="http://common.mgt.user.carbon.wso2.org/xsd">
                                        <xsd:userName>$1</xsd:userName>
                                        <xsd:newPassword>$2</xsd:newPassword>
                                    </xsd:changePassword>
                                </format>
                                <args>
                                    <arg evaluator="xml" expression="get-property('uri.var.username')" />
                                    <arg evaluator="xml" expression="get-property('password')" />
                                </args>
                            </payloadFactory>
                            <property xmlns:ns2="http://org.apache.synapse/xsd" xmlns:ns="http://org.apache.synapse/xsd" name="IS_SERVER_USER_DATO" expression="synapse:get-property('IS_SERVER_USER')" scope="default" />
                            <property xmlns:ns2="http://org.apache.synapse/xsd" xmlns:ns="http://org.apache.synapse/xsd" name="IS_SERVER_PASSWORD_DATO" expression="synapse:get-property('IS_SERVER_PASSWORD')" scope="default" />
                            <property xmlns:ns="http://org.apache.synapse/xsd" name="Authorization" expression="fn:concat('Basic ', base64Encode(fn:concat($ctx:IS_SERVER_USER_DATO,':',$ctx:IS_SERVER_PASSWORD_DATO)))" scope="transport" />
                            <property name="service_ep" expression="fn:concat(get-property('uri.var.identityServerHost'),'/services' ,'/UserAdmin')" />
                            <header name="To" expression="get-property('service_ep')" />
                            <property name="Accept" scope="transport" value="application/xml" />
                            <call>
                                <endpoint>
                                    <default />
                                </endpoint>
                            </call>
                            <property name="fault" expression="//ns:UserStoreException" />
                            <property name="fault2" expression="//faultstring" />
                            <filter regex="true" source="boolean(get-property('fault')) or boolean(get-property('fault2'))">
                                <then>
                                    <call-template target="GetCurrentDateTemplate" />
                                    <!-- Enviar sms  error-->
                                    <payloadFactory media-type="json">
                                        <format>
                                            [
                                                {
                                                    "campo":"Generado",
                                                    "valor":"$1"
                                                
                                                },
                                                {
                                                    "campo":"UserID",
                                                    "valor":"$2"
                                                
                                                }
                                            ]                      
                                        </format>
                                        <args>
                                            <arg evaluator="xml" expression="$ctx:currentDate" />
                                            <arg evaluator="xml" expression="$ctx:uri.var.username" />
                                        </args>
                                    </payloadFactory>
                                    <property name="message" expression="json-eval($)" />
                                    <call-template target="SendSmsSeqTemplate">
                                        <with-param name="templateType" value="Plantilla_Sms_Operacion_Error" />
                                        <with-param name="movil" value="{get-property('mobile')}" />
                                        <with-param name="identification" value="{get-property('identification')}" />
                                        <with-param name="message" value="{get-property('message')}" />
                                    </call-template>
                                    <payloadFactory media-type="json">
                                        <format>
                                            {
                                                "result":  {
                                                    "code" : -1,
                                                    "message" : "Failed reset password"
                                                }
                                            }
                                        </format>
                                        <args />
                                    </payloadFactory>
                                </then>
                                <else>
                                    <call-template target="GetCurrentDateTemplate" />
                                    <!-- Enviar sms  OK-->
                                    <payloadFactory media-type="json">
                                        <format>
                                            [
                                                {
                                                    "campo":"Generado",
                                                    "valor":"$1"
                                                
                                                },
                                                {
                                                    "campo":"UserID",
                                                    "valor":"$2"
                                                
                                                }
                                            ]                      
                                        </format>
                                        <args>
                                            <arg evaluator="xml" expression="$ctx:currentDate" />
                                            <arg evaluator="xml" expression="$ctx:uri.var.username" />
                                        </args>
                                    </payloadFactory>
                                    <property name="message" expression="json-eval($)" />
                                    <call-template target="SendSmsSeqTemplate">
                                        <with-param name="templateType" value="Plantilla_Sms_Operacion_Exito" />
                                        <with-param name="movil" value="{get-property('mobile')}" />
                                        <with-param name="identification" value="{get-property('identification')}" />
                                        <with-param name="message" value="{get-property('message')}" />
                                    </call-template>
                                    <payloadFactory media-type="json">
                                        <format>
                                            {
                                                "result":  {
                                                    "code" : 0,
                                                    "message" : "Operation performed successfully"
                                                }
                                            }
                                        </format>
                                        <args></args>
                                    </payloadFactory>
                                </else>
                            </filter>
                        </then>
                        <else>
                            <payloadFactory media-type="json">
                                <format>
                                    {
                                        "result":  {
                                            "code" : -1,
                                            "message" : "Identification does not exist"
                                        }
                                    }
                                </format>
                                <args />
                            </payloadFactory>
                        </else>
                    </filter>
                </then>
                <else>
                    <payloadFactory media-type="json">
                        <format>
                            {
                                "result":  {
                                    "code" : -1,
                                    "message" : "Error get userdata "
                                }
                            }
                        </format>
                        <args />
                    </payloadFactory>
                </else>
            </filter>
        </then>
        <else>
            <payloadFactory media-type="json">
                <format>
                    {
                        "result":  {
                            "code" : -1,
                            "message" : "Identification is mandatory"
                        }
                    }
                </format>
                <args />
            </payloadFactory>
        </else>
    </filter>
    <property name="messageType" value="application/json" scope="axis2" />
    <property name="HTTP_SC" scope="axis2" type="STRING" value="200" />
    <log level="custom" category="DEBUG">
        <property name="BusinessLogicAccountResetSmsWebSeq" value="Fin..." />
    </log>
</sequence>