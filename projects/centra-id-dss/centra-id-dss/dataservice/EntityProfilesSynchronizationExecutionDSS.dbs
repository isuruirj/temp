<data name="application.profiles-synchronization-execution.ds"
    serviceNamespace="centra-id.com"
    enableBatchRequests="false"
    enableBoxcarring="false"
    transports="https"
    disableLegacyBoxcarringMode="true">

    <config id="default">
        <property name="carbon_datasource_name">CENTRA_ID</property>
    </config>
    <!-- DYNAMIC QUERY PROFILESSYNCHRONIZATIONEXECUTION -->
    <query id="dynamicQuery_profilesSynchronizationExecution" useConfig="default">
        <sql>
           SELECT
               profilesSynchronizationExecution.id,
               profilesSynchronizationExecution.user_created,
               profilesSynchronizationExecution.date_created,
               profilesSynchronizationExecution.date_planned,
               profilesSynchronizationExecution.date_synchronization_init,
               profilesSynchronizationExecution.date_synchronization_end,
               profilesSynchronizationExecution.type,
               profilesSynchronizationExecution.status,
               profilesSynchronizationExecution.transactional_profile_id,
               profilesSynchronizationExecution.global_profile_id,
               profilesSynchronizationExecution.valid
           FROM sch_centra_id.PROFILES_SYNCHRONIZATION_EXECUTIONS profilesSynchronizationExecution :innerjoinclause :whereclause ORDER BY :orderby :fromto
        </sql>
        <result element="profilesSynchronizationExecutionList" rowName="profilesSynchronizationExecution">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="user_created" name="userCreated" xsdType="xs:string"/>
            <element column="date_created" name="dateCreated" xsdType="xs:dateTime"/>
            <element column="date_planned" name="datePlanned" xsdType="xs:dateTime"/>
            <element column="date_synchronization_init" name="dateSynchronizationInit" xsdType="xs:dateTime"/>
            <element column="date_synchronization_end" name="dateSynchronizationEnd" xsdType="xs:dateTime"/>
            <element column="type" name="type" xsdType="xs:string"/>
            <element column="status" name="status" xsdType="xs:string"/>
            <element column="transactional_profile_id" name="transactionalProfileId" xsdType="xs:integer"/>
            <element column="global_profile_id" name="globalProfileId" xsdType="xs:integer"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
        </result>
        <param name="whereclause" sqlType="QUERY_STRING"/>
        <param defaultValue="id" name="orderby" sqlType="QUERY_STRING"/>
        <param defaultValue="" name="fromto" sqlType="QUERY_STRING"/>
        <param defaultValue="" name="innerjoinclause" sqlType="QUERY_STRING"/>
    </query>
    <!-- INSERT ProfilesSynchronizationExecution -->
    <query id="insertQuery_profilesSynchronizationExecution" returnGeneratedKeys="true" useConfig="default" keyColumns="1">
        <sql>
           INSERT INTO sch_centra_id.PROFILES_SYNCHRONIZATION_EXECUTIONS(
               user_created,
               date_created,
               date_planned,
               date_synchronization_init,
               date_synchronization_end,
               type,
               status,
               transactional_profile_id,
               global_profile_id,
               valid
        ) VALUES(?,?,?,?,?,?,?,?,?,?)
        </sql>
        <result element="GeneratedKeys" rowName="Entry" useColumnNumbers="true">
            <element column="1" name="id" xsdType="xs:long"/>
        </result>
        <param name="userCreated" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="dateCreated" ordinal="2" paramType="SCALAR" sqlType="TIMESTAMP" type="IN"/>
        <param name="datePlanned" ordinal="3" paramType="SCALAR" sqlType="TIMESTAMP" type="IN"/>
        <param name="dateSynchronizationInit" ordinal="4" paramType="SCALAR" sqlType="TIMESTAMP" type="IN" defaultValue="#{NULL}"/>
        <param name="dateSynchronizationEnd" ordinal="5" paramType="SCALAR" sqlType="TIMESTAMP" type="IN" defaultValue="#{NULL}"/>
        <param name="type" ordinal="6" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="status" ordinal="7" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="A"/>
        <param name="transactionalProfileId" ordinal="8" paramType="SCALAR" sqlType="INTEGER" type="IN" defaultValue="#{NULL}"/>
        <param name="globalProfileId" ordinal="9" paramType="SCALAR" sqlType="INTEGER" type="IN" defaultValue="#{NULL}"/>
        <param name="valid" ordinal="10" paramType="SCALAR" sqlType="INTEGER" type="IN" defaultValue="1"/>
    </query>
    <!-- UPDATE ProfilesSynchronizationExecution -->
    <query id="updateQuery_profilesSynchronizationExecution" useConfig="default">
        <sql>
           UPDATE sch_centra_id.PROFILES_SYNCHRONIZATION_EXECUTIONS SET
               user_created=?,
               date_created=?,
               date_planned=?,
               date_synchronization_init=?,
               date_synchronization_end=?,
               type=?,
               status=?,
               transactional_profile_id=?,
               global_profile_id=?
            WHERE id=?
        </sql>
        <param name="userCreated" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="dateCreated" ordinal="2" paramType="SCALAR" sqlType="TIMESTAMP" type="IN"/>
        <param name="datePlanned" ordinal="3" paramType="SCALAR" sqlType="TIMESTAMP" type="IN"/>
        <param name="dateSynchronizationInit" ordinal="4" paramType="SCALAR" sqlType="TIMESTAMP" type="IN" defaultValue="#{NULL}"/>
        <param name="dateSynchronizationEnd" ordinal="5" paramType="SCALAR" sqlType="TIMESTAMP" type="IN" defaultValue="#{NULL}"/>
        <param name="type" ordinal="6" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="status" ordinal="7" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="A"/>
        <param name="transactionalProfileId" ordinal="8" paramType="SCALAR" sqlType="INTEGER" type="IN" defaultValue="#{NULL}"/>
        <param name="globalProfileId" ordinal="9" paramType="SCALAR" sqlType="INTEGER" type="IN" defaultValue="#{NULL}"/>
        <param name="id" ordinal="10" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
    </query>
    <!-- DYNAMIC FUNCTION  -->
    <query id="dynamicQueryFunction_profilesSynchronizationExecution" useConfig="default">
        <sql>
           SELECT :function(:field) as value FROM :table :innerjoinclause :whereclause
         </sql>
        <result element="result">
            <element column="value" name="value" xsdType="xs:long"/>
        </result>
        <param name="function" sqlType="QUERY_STRING"/>
        <param name="field" sqlType="QUERY_STRING"/>
        <param name="table" sqlType="QUERY_STRING"/>
        <param name="whereclause" sqlType="QUERY_STRING"/>
        <param name="innerjoinclause" sqlType="QUERY_STRING"/>
    </query>
    <!-- DYNAMIC DELETE  -->
    <query id="dynamicDeleteQuery_profilesSynchronizationExecution" useConfig="default">
        <sql>UPDATE :table SET :set WHERE id=:id</sql>
        <param name="id" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
        <param name="table" sqlType="QUERY_STRING"/>
        <param name="set" sqlType="QUERY_STRING"/>
    </query>
    <!-- OPERATIONS -->
    <operation name="listAllOperation_profilesSynchronizationExecution">
        <call-query href="dynamicQuery_profilesSynchronizationExecution">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </operation>
    <operation name="fromToOperation_profilesSynchronizationExecution">
        <call-query href="dynamicQuery_profilesSynchronizationExecution">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="fromto" query-param="fromto"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </operation>
    <operation name="functionOperation_profilesSynchronizationExecution">
        <call-query href="dynamicQueryFunction_profilesSynchronizationExecution">
            <with-param name="function" query-param="function"/>
            <with-param name="field" query-param="field"/>
            <with-param name="table" query-param="table"/>
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </operation>
    <operation name="deleteOperation_profilesSynchronizationExecution">
        <call-query href="dynamicDeleteQuery_profilesSynchronizationExecution">
            <with-param name="id" query-param="id"/>
            <with-param name="table" query-param="table"/>
            <with-param name="set" query-param="set"/>
        </call-query>
    </operation>
    <operation name="create_profilesSynchronizationExecution">
        <call-query href="insertQuery_profilesSynchronizationExecution">
            <with-param name="userCreated" query-param="userCreated"/>
            <with-param name="dateCreated" query-param="dateCreated"/>
            <with-param name="datePlanned" query-param="datePlanned"/>
            <with-param name="dateSynchronizationInit" query-param="dateSynchronizationInit"/>
            <with-param name="dateSynchronizationEnd" query-param="dateSynchronizationEnd"/>
            <with-param name="type" query-param="type"/>
            <with-param name="status" query-param="status"/>
            <with-param name="transactionalProfileId" query-param="transactionalProfileId"/>
            <with-param name="globalProfileId" query-param="globalProfileId"/>
            <with-param name="valid" query-param="valid"/>
        </call-query>
    </operation>
    <operation name="update_profilesSynchronizationExecution">
        <call-query href="updateQuery_profilesSynchronizationExecution">
            <with-param name="userCreated" query-param="userCreated"/>
            <with-param name="dateCreated" query-param="dateCreated"/>
            <with-param name="datePlanned" query-param="datePlanned"/>
            <with-param name="dateSynchronizationInit" query-param="dateSynchronizationInit"/>
            <with-param name="dateSynchronizationEnd" query-param="dateSynchronizationEnd"/>
            <with-param name="type" query-param="type"/>
            <with-param name="status" query-param="status"/>
            <with-param name="transactionalProfileId" query-param="transactionalProfileId"/>
            <with-param name="globalProfileId" query-param="globalProfileId"/>
            <with-param name="id" query-param="id"/>
        </call-query>
    </operation>
    <!-- RESOURCES -->
    <resource method="GET" path="GetAllProfilesSynchronizationExecution">
        <call-query href="dynamicQuery_profilesSynchronizationExecution">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetFromToProfilesSynchronizationExecution">
        <call-query href="dynamicQuery_profilesSynchronizationExecution">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="fromto" query-param="fromto"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetFunctionResultProfilesSynchronizationExecution">
        <call-query href="dynamicQueryFunction_profilesSynchronizationExecution">
            <with-param name="function" query-param="function"/>
            <with-param name="field" query-param="field"/>
            <with-param name="table" query-param="table"/>
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </resource>
    <resource method="DELETE" path="DeleteProfilesSynchronizationExecution">
        <call-query href="dynamicDeleteQuery_profilesSynchronizationExecution">
            <with-param name="id" query-param="id"/>
            <with-param name="table" query-param="table"/>
            <with-param name="set" query-param="set"/>
        </call-query>
    </resource>
    <resource method="POST" path="CreateProfilesSynchronizationExecution">
        <call-query href="insertQuery_profilesSynchronizationExecution">
            <with-param name="userCreated" query-param="userCreated"/>
            <with-param name="dateCreated" query-param="dateCreated"/>
            <with-param name="datePlanned" query-param="datePlanned"/>
            <with-param name="dateSynchronizationInit" query-param="dateSynchronizationInit"/>
            <with-param name="dateSynchronizationEnd" query-param="dateSynchronizationEnd"/>
            <with-param name="type" query-param="type"/>
            <with-param name="status" query-param="status"/>
            <with-param name="transactionalProfileId" query-param="transactionalProfileId"/>
            <with-param name="globalProfileId" query-param="globalProfileId"/>
            <with-param name="valid" query-param="valid"/>
        </call-query>
    </resource>
    <resource method="PUT" path="UpdateProfilesSynchronizationExecution">
        <call-query href="updateQuery_profilesSynchronizationExecution">
            <with-param name="userCreated" query-param="userCreated"/>
            <with-param name="dateCreated" query-param="dateCreated"/>
            <with-param name="datePlanned" query-param="datePlanned"/>
            <with-param name="dateSynchronizationInit" query-param="dateSynchronizationInit"/>
            <with-param name="dateSynchronizationEnd" query-param="dateSynchronizationEnd"/>
            <with-param name="type" query-param="type"/>
            <with-param name="status" query-param="status"/>
            <with-param name="transactionalProfileId" query-param="transactionalProfileId"/>
            <with-param name="globalProfileId" query-param="globalProfileId"/>
            <with-param name="id" query-param="id"/>
        </call-query>
    </resource>
</data>
