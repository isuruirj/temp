<?xml version="1.0" encoding="UTF-8"?>
<sequence name="ChallengeQuestionCountSeq" onError="FaultSeq" trace="disable" xmlns="http://ws.apache.org/ns/synapse">
    <log level="custom" category="DEBUG">
        <property name="ChallengeQuestionCountSeq" value="Inicio.." />
    </log>
    <property action="remove" name="REST_URL_POSTFIX" scope="axis2" />
    <property name="messageType" scope="axis2" type="STRING" value="application/json" />
    <property name="Accept" scope="transport" type="STRING" value="application/json" />
    <property action="remove" name="Content-Type" scope="transport" />
    <property expression="$ctx:query.param.id" name="id" scope="default" type="STRING" />
    <property expression="$ctx:query.param.username" name="username" scope="default" type="STRING" />
    <property expression="$ctx:query.param.answer1" name="answer1" scope="default" type="STRING" />
    <property expression="$ctx:query.param.answer2" name="answer2" scope="default" type="STRING" />
    <property expression="$ctx:query.param.answer3" name="answer3" scope="default" type="STRING" />
    <property expression="$ctx:query.param.answer4" name="answer4" scope="default" type="STRING" />
    <property expression="$ctx:query.param.createdDate" name="createdDate" scope="default" type="STRING" />
    <property expression="$ctx:query.param.attentionDate" name="attentionDate" scope="default" type="STRING" />
    <property expression="$ctx:query.param.status" name="status" scope="default" type="STRING" />
    <property expression="$ctx:query.param.code1" name="code1" scope="default" type="STRING" />
    <property expression="$ctx:query.param.code2" name="code2" scope="default" type="STRING" />
    <property expression="$ctx:query.param.code3" name="code3" scope="default" type="STRING" />
    <property expression="$ctx:query.param.code4" name="code4" scope="default" type="STRING" />
    <property expression="$ctx:query.param.valid" name="valid" scope="default" type="STRING" />
    <script language="nashornJs"><![CDATA[
        @add.where.js.function
        function operatorType(value) {
            if(value.indexOf("*")!=-1 ) {
                return " LIKE ";
            } else {
                return " = ";
            }
        }
        var log = mc.getServiceLog();
        var where = " WHERE challengeQuestion.valid=1 ";
        var innerJoin = "";
        where += addWhere("id","Integer","challengeQuestion","id");
        where += addWhere("username","String","challengeQuestion","username");
        where += addWhere("answer1","String","challengeQuestion","answer1");
        where += addWhere("answer2","String","challengeQuestion","answer2");
        where += addWhere("answer3","String","challengeQuestion","answer3");
        where += addWhere("answer4","String","challengeQuestion","answer4");
        where += addWhere("createdDate","Date","challengeQuestion","created_date");
        where += addWhere("attentionDate","Date","challengeQuestion","attention_date");
        where += addWhere("status","String","challengeQuestion","status");
        where += addWhere("code1","String","challengeQuestion","code1");
        where += addWhere("code2","String","challengeQuestion","code2");
        where += addWhere("code3","String","challengeQuestion","code3");
        where += addWhere("code4","String","challengeQuestion","code4");
        where += addWhere("valid","Integer","challengeQuestion","valid");
        mc.setProperty("uri.var.whereclause",where);
        mc.setProperty("uri.var.innerjoinclause",innerJoin);
        log.debug(where);]]></script>

    <property value="sch_centra_id.CHALLENGE_QUESTIONS challengeQuestion" name="uri.var.table" scope="default" type="STRING"/>
    <property value="COUNT" name="uri.var.function" scope="default" type="STRING"/>
    <property value="*" name="uri.var.field" scope="default" type="STRING"/>

    <call>
        <endpoint name="ChallengeQuestionDSS_Endpoint" template="HTTPEndpointGetTemplate"
              uri="{uri.var.dataServiceHost}/identity.challenge-question.ds.HTTPEndpoint/GetFunctionResultChallengeQuestion?function={uri.var.function}&amp;whereclause={uri.var.whereclause}&amp;field={uri.var.field}&amp;table={uri.var.table}&amp;innerjoinclause={uri.var.innerjoinclause}" />

    </call>

    <property expression="json-eval($.Fault.faultcode)" name="faultCode" scope="default" type="STRING"/>
    <filter regex="true" source="boolean(get-property('faultCode'))">
        <then>
            <sequence key="FaultSeq"/>
        </then>
        <else>
            <payloadFactory media-type="json">
                <format>
                    {
                        "count": $1
                    }
                </format>
                <args>
                    <arg evaluator="json" expression="$.result.value"/>
                </args>
            </payloadFactory>
            <property name="HTTP_SC" scope="axis2" type="STRING" value="200"/>
        </else>
    </filter>
    <log level="custom" category="DEBUG">
        <property name="ChallengeQuestionCountSeq" value="Fin.." />
    </log>
    <respond />
</sequence>
