<data name="common.user-migration-error.ds"
    serviceNamespace="centra-id.com"
    enableBatchRequests="false"
    enableBoxcarring="false"
    transports="https"
    disableLegacyBoxcarringMode="true">

    <config id="default">
        <property name="carbon_datasource_name">CENTRA_ID</property>
    </config>
    <!-- DYNAMIC QUERY USERMIGRATIONERROR -->
    <query id="dynamicQuery_userMigrationError" useConfig="default">
        <sql>
           SELECT
               userMigrationError.id,
               userMigrationError.username,
               userMigrationError.error,
               userMigrationError.created_date,
               userMigrationError.valid
           FROM sch_centra_id.USER_MIGRATION_ERRORS userMigrationError :innerjoinclause :whereclause ORDER BY :orderby :fromto
        </sql>
        <result element="userMigrationErrorList" rowName="userMigrationError">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="username" name="username" xsdType="xs:string"/>
            <element column="error" name="error" xsdType="xs:string"/>
            <element column="created_date" name="createdDate" xsdType="xs:date"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
        </result>
        <param name="whereclause" sqlType="QUERY_STRING"/>
        <param defaultValue="id" name="orderby" sqlType="QUERY_STRING"/>
        <param defaultValue="" name="fromto" sqlType="QUERY_STRING"/>
        <param defaultValue="" name="innerjoinclause" sqlType="QUERY_STRING"/>
    </query>
    <!-- INSERT UserMigrationError -->
    <query id="insertQuery_userMigrationError" returnGeneratedKeys="true" useConfig="default" keyColumns="1">
        <sql>
           INSERT INTO sch_centra_id.USER_MIGRATION_ERRORS(
               username,
               error,
               created_date,
               valid
        ) VALUES(?,?,?,?)
        </sql>
        <result element="GeneratedKeys" rowName="Entry" useColumnNumbers="true">
            <element column="1" name="id" xsdType="xs:long"/>
        </result>
        <param name="username" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="error" ordinal="2" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="createdDate" ordinal="3" paramType="SCALAR" sqlType="TIMESTAMP" type="IN"/>
        <param name="valid" ordinal="4" paramType="SCALAR" sqlType="INTEGER" type="IN" defaultValue="1"/>
    </query>
    <!-- UPDATE UserMigrationError -->
    <query id="updateQuery_userMigrationError" useConfig="default">
        <sql>
           UPDATE sch_centra_id.USER_MIGRATION_ERRORS SET
               username=?,
               error=?,
               created_date=?
            WHERE id=?
        </sql>
        <param name="username" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="error" ordinal="2" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="createdDate" ordinal="3" paramType="SCALAR" sqlType="TIMESTAMP" type="IN"/>
        <param name="id" ordinal="4" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
    </query>
    <!-- DYNAMIC FUNCTION  -->
    <query id="dynamicQueryFunction_userMigrationError" useConfig="default">
        <sql>
           SELECT :function(:field) as value FROM :table :innerjoinclause :whereclause
         </sql>
        <result element="result">
            <element column="value" name="value" xsdType="xs:long"/>
        </result>
        <param name="function" sqlType="QUERY_STRING"/>
        <param name="field" sqlType="QUERY_STRING"/>
        <param name="table" sqlType="QUERY_STRING"/>
        <param name="whereclause" sqlType="QUERY_STRING"/>
        <param name="innerjoinclause" sqlType="QUERY_STRING"/>
    </query>
    <!-- DYNAMIC DELETE  -->
    <query id="dynamicDeleteQuery_userMigrationError" useConfig="default">
        <sql>UPDATE :table SET :set WHERE id=:id</sql>
        <param name="id" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
        <param name="table" sqlType="QUERY_STRING"/>
        <param name="set" sqlType="QUERY_STRING"/>
    </query>
    <!-- OPERATIONS -->
    <operation name="listAllOperation_userMigrationError">
        <call-query href="dynamicQuery_userMigrationError">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </operation>
    <operation name="fromToOperation_userMigrationError">
        <call-query href="dynamicQuery_userMigrationError">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="fromto" query-param="fromto"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </operation>
    <operation name="functionOperation_userMigrationError">
        <call-query href="dynamicQueryFunction_userMigrationError">
            <with-param name="function" query-param="function"/>
            <with-param name="field" query-param="field"/>
            <with-param name="table" query-param="table"/>
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </operation>
    <operation name="deleteOperation_userMigrationError">
        <call-query href="dynamicDeleteQuery_userMigrationError">
            <with-param name="id" query-param="id"/>
            <with-param name="table" query-param="table"/>
            <with-param name="set" query-param="set"/>
        </call-query>
    </operation>
    <operation name="create_userMigrationError">
        <call-query href="insertQuery_userMigrationError">
            <with-param name="username" query-param="username"/>
            <with-param name="error" query-param="error"/>
            <with-param name="createdDate" query-param="createdDate"/>
            <with-param name="valid" query-param="valid"/>
        </call-query>
    </operation>
    <operation name="update_userMigrationError">
        <call-query href="updateQuery_userMigrationError">
            <with-param name="username" query-param="username"/>
            <with-param name="error" query-param="error"/>
            <with-param name="createdDate" query-param="createdDate"/>
            <with-param name="id" query-param="id"/>
        </call-query>
    </operation>
    <!-- RESOURCES -->
    <resource method="GET" path="GetAllUserMigrationError">
        <call-query href="dynamicQuery_userMigrationError">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetFromToUserMigrationError">
        <call-query href="dynamicQuery_userMigrationError">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="fromto" query-param="fromto"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetFunctionResultUserMigrationError">
        <call-query href="dynamicQueryFunction_userMigrationError">
            <with-param name="function" query-param="function"/>
            <with-param name="field" query-param="field"/>
            <with-param name="table" query-param="table"/>
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </resource>
    <resource method="DELETE" path="DeleteUserMigrationError">
        <call-query href="dynamicDeleteQuery_userMigrationError">
            <with-param name="id" query-param="id"/>
            <with-param name="table" query-param="table"/>
            <with-param name="set" query-param="set"/>
        </call-query>
    </resource>
    <resource method="POST" path="CreateUserMigrationError">
        <call-query href="insertQuery_userMigrationError">
            <with-param name="username" query-param="username"/>
            <with-param name="error" query-param="error"/>
            <with-param name="createdDate" query-param="createdDate"/>
            <with-param name="valid" query-param="valid"/>
        </call-query>
    </resource>
    <resource method="PUT" path="UpdateUserMigrationError">
        <call-query href="updateQuery_userMigrationError">
            <with-param name="username" query-param="username"/>
            <with-param name="error" query-param="error"/>
            <with-param name="createdDate" query-param="createdDate"/>
            <with-param name="id" query-param="id"/>
        </call-query>
    </resource>
</data>
