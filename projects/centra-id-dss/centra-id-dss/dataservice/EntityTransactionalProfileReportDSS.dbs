<data name="report.transactional-profile-report.ds"
    serviceNamespace="centra-id.com"
    enableBatchRequests="false"
    enableBoxcarring="false"
    transports="https"
    disableLegacyBoxcarringMode="true">

    <config id="default">
        <property name="carbon_datasource_name">CENTRA_ID</property>
    </config>
    <!-- DYNAMIC QUERY TRANSACTIONALPROFILEREPORT -->
    <query id="dynamicQuery_transactionalProfileReport" useConfig="default">
        <sql>
           SELECT
               transactionalProfileReport.id,
               transactionalProfileReport.application_code,
               transactionalProfileReport.application_name,
               transactionalProfileReport.application_automatic,
               transactionalProfileReport.transactional_profile_code,
               transactionalProfileReport.transactional_profile_name,
               transactionalProfileReport.risk_level,
               transactionalProfileReport.comments,
               transactionalProfileReport.field_name,
               transactionalProfileReport.field_value,
               transactionalProfileReport.status,
               transactionalProfileReport.valid
           FROM sch_centra_id.TRANSACTIONAL_PROFILES_REPORT_VW transactionalProfileReport :innerjoinclause :whereclause ORDER BY :orderby :fromto
        </sql>
        <result element="transactionalProfileReportList" rowName="transactionalProfileReport">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="application_code" name="applicationCode" xsdType="xs:string"/>
            <element column="application_name" name="applicationName" xsdType="xs:string"/>
            <element column="application_automatic" name="applicationAutomatic" xsdType="xs:integer"/>
            <element column="transactional_profile_code" name="transactionalProfileCode" xsdType="xs:string"/>
            <element column="transactional_profile_name" name="transactionalProfileName" xsdType="xs:string"/>
            <element column="risk_level" name="riskLevel" xsdType="xs:string"/>
            <element column="comments" name="comments" xsdType="xs:string"/>
            <element column="field_name" name="fieldName" xsdType="xs:string"/>
            <element column="field_value" name="fieldValue" xsdType="xs:string"/>
            <element column="status" name="status" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
        </result>
        <param name="whereclause" sqlType="QUERY_STRING"/>
        <param defaultValue="id" name="orderby" sqlType="QUERY_STRING"/>
        <param defaultValue="" name="fromto" sqlType="QUERY_STRING"/>
        <param defaultValue="" name="innerjoinclause" sqlType="QUERY_STRING"/>
    </query>
    <!-- INSERT TransactionalProfileReport -->
    <query id="insertQuery_transactionalProfileReport" returnGeneratedKeys="true" useConfig="default" keyColumns="1">
        <sql>
           INSERT INTO sch_centra_id.TRANSACTIONAL_PROFILES_REPORT_VW(
               application_code,
               application_name,
               application_automatic,
               transactional_profile_code,
               transactional_profile_name,
               risk_level,
               comments,
               field_name,
               field_value,
               valid
        ) VALUES(?,?,?,?,?,?,?,?,?,?)
        </sql>
        <result element="GeneratedKeys" rowName="Entry" useColumnNumbers="true">
            <element column="1" name="id" xsdType="xs:long"/>
        </result>
        <param name="applicationCode" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="applicationName" ordinal="2" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="applicationAutomatic" ordinal="3" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
        <param name="transactionalProfileCode" ordinal="4" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="transactionalProfileName" ordinal="5" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="riskLevel" ordinal="6" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="comments" ordinal="7" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="fieldName" ordinal="8" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="fieldValue" ordinal="9" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="valid" ordinal="10" paramType="SCALAR" sqlType="INTEGER" type="IN" defaultValue="1"/>
    </query>
    <!-- UPDATE TransactionalProfileReport -->
    <query id="updateQuery_transactionalProfileReport" useConfig="default">
        <sql>
           UPDATE sch_centra_id.TRANSACTIONAL_PROFILES_REPORT_VW SET
               application_code=?,
               application_name=?,
               application_automatic=?,
               transactional_profile_code=?,
               transactional_profile_name=?,
               risk_level=?,
               comments=?,
               field_name=?,
               field_value=?
            WHERE id=?
        </sql>
        <param name="applicationCode" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="applicationName" ordinal="2" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="applicationAutomatic" ordinal="3" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
        <param name="transactionalProfileCode" ordinal="4" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="transactionalProfileName" ordinal="5" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="riskLevel" ordinal="6" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="comments" ordinal="7" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="fieldName" ordinal="8" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="fieldValue" ordinal="9" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="id" ordinal="10" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
    </query>
    <!-- DYNAMIC FUNCTION  -->
    <query id="dynamicQueryFunction_transactionalProfileReport" useConfig="default">
        <sql>
           SELECT :function(:field) as value FROM :table :innerjoinclause :whereclause
         </sql>
        <result element="result">
            <element column="value" name="value" xsdType="xs:long"/>
        </result>
        <param name="function" sqlType="QUERY_STRING"/>
        <param name="field" sqlType="QUERY_STRING"/>
        <param name="table" sqlType="QUERY_STRING"/>
        <param name="whereclause" sqlType="QUERY_STRING"/>
        <param name="innerjoinclause" sqlType="QUERY_STRING"/>
    </query>
    <!-- DYNAMIC DELETE  -->
    <query id="dynamicDeleteQuery_transactionalProfileReport" useConfig="default">
        <sql>UPDATE :table SET :set WHERE id=:id</sql>
        <param name="id" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
        <param name="table" sqlType="QUERY_STRING"/>
        <param name="set" sqlType="QUERY_STRING"/>
    </query>
    <!-- OPERATIONS -->
    <operation name="listAllOperation_transactionalProfileReport">
        <call-query href="dynamicQuery_transactionalProfileReport">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </operation>
    <operation name="fromToOperation_transactionalProfileReport">
        <call-query href="dynamicQuery_transactionalProfileReport">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="fromto" query-param="fromto"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </operation>
    <operation name="functionOperation_transactionalProfileReport">
        <call-query href="dynamicQueryFunction_transactionalProfileReport">
            <with-param name="function" query-param="function"/>
            <with-param name="field" query-param="field"/>
            <with-param name="table" query-param="table"/>
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </operation>
    <operation name="deleteOperation_transactionalProfileReport">
        <call-query href="dynamicDeleteQuery_transactionalProfileReport">
            <with-param name="id" query-param="id"/>
            <with-param name="table" query-param="table"/>
            <with-param name="set" query-param="set"/>
        </call-query>
    </operation>
    <operation name="create_transactionalProfileReport">
        <call-query href="insertQuery_transactionalProfileReport">
            <with-param name="applicationCode" query-param="applicationCode"/>
            <with-param name="applicationName" query-param="applicationName"/>
            <with-param name="applicationAutomatic" query-param="applicationAutomatic"/>
            <with-param name="transactionalProfileCode" query-param="transactionalProfileCode"/>
            <with-param name="transactionalProfileName" query-param="transactionalProfileName"/>
            <with-param name="riskLevel" query-param="riskLevel"/>
            <with-param name="comments" query-param="comments"/>
            <with-param name="fieldName" query-param="fieldName"/>
            <with-param name="fieldValue" query-param="fieldValue"/>
            <with-param name="valid" query-param="valid"/>
        </call-query>
    </operation>
    <operation name="update_transactionalProfileReport">
        <call-query href="updateQuery_transactionalProfileReport">
            <with-param name="applicationCode" query-param="applicationCode"/>
            <with-param name="applicationName" query-param="applicationName"/>
            <with-param name="applicationAutomatic" query-param="applicationAutomatic"/>
            <with-param name="transactionalProfileCode" query-param="transactionalProfileCode"/>
            <with-param name="transactionalProfileName" query-param="transactionalProfileName"/>
            <with-param name="riskLevel" query-param="riskLevel"/>
            <with-param name="comments" query-param="comments"/>
            <with-param name="fieldName" query-param="fieldName"/>
            <with-param name="fieldValue" query-param="fieldValue"/>
            <with-param name="id" query-param="id"/>
        </call-query>
    </operation>
    <!-- RESOURCES -->
    <resource method="GET" path="GetAllTransactionalProfileReport">
        <call-query href="dynamicQuery_transactionalProfileReport">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetFromToTransactionalProfileReport">
        <call-query href="dynamicQuery_transactionalProfileReport">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="fromto" query-param="fromto"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetFunctionResultTransactionalProfileReport">
        <call-query href="dynamicQueryFunction_transactionalProfileReport">
            <with-param name="function" query-param="function"/>
            <with-param name="field" query-param="field"/>
            <with-param name="table" query-param="table"/>
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </resource>
    <resource method="DELETE" path="DeleteTransactionalProfileReport">
        <call-query href="dynamicDeleteQuery_transactionalProfileReport">
            <with-param name="id" query-param="id"/>
            <with-param name="table" query-param="table"/>
            <with-param name="set" query-param="set"/>
        </call-query>
    </resource>
    <resource method="POST" path="CreateTransactionalProfileReport">
        <call-query href="insertQuery_transactionalProfileReport">
            <with-param name="applicationCode" query-param="applicationCode"/>
            <with-param name="applicationName" query-param="applicationName"/>
            <with-param name="applicationAutomatic" query-param="applicationAutomatic"/>
            <with-param name="transactionalProfileCode" query-param="transactionalProfileCode"/>
            <with-param name="transactionalProfileName" query-param="transactionalProfileName"/>
            <with-param name="riskLevel" query-param="riskLevel"/>
            <with-param name="comments" query-param="comments"/>
            <with-param name="fieldName" query-param="fieldName"/>
            <with-param name="fieldValue" query-param="fieldValue"/>
            <with-param name="valid" query-param="valid"/>
        </call-query>
    </resource>
    <resource method="PUT" path="UpdateTransactionalProfileReport">
        <call-query href="updateQuery_transactionalProfileReport">
            <with-param name="applicationCode" query-param="applicationCode"/>
            <with-param name="applicationName" query-param="applicationName"/>
            <with-param name="applicationAutomatic" query-param="applicationAutomatic"/>
            <with-param name="transactionalProfileCode" query-param="transactionalProfileCode"/>
            <with-param name="transactionalProfileName" query-param="transactionalProfileName"/>
            <with-param name="riskLevel" query-param="riskLevel"/>
            <with-param name="comments" query-param="comments"/>
            <with-param name="fieldName" query-param="fieldName"/>
            <with-param name="fieldValue" query-param="fieldValue"/>
            <with-param name="id" query-param="id"/>
        </call-query>
    </resource>
</data>
