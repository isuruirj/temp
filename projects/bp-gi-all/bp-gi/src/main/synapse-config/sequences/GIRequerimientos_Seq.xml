<?xml version="1.0" encoding="UTF-8"?>
<sequence name="GIRequerimientos_Seq" onError="GIHandle_Runtime_Error_Seq" trace="disable" xmlns="http://ws.apache.org/ns/synapse">
    <log description="seq" level="custom">
        <property name="seq" value="-------------------- GIRequerimientos_Seq --------------------"/>
    </log>
    <property description="seqName" name="seqName" scope="default" type="STRING" value="GIRequerimientos_Seq"/>
    <property description="First Element" expression="$body//tem:crearRequerimientos/tem:crearRequerimiento[1]" name="firstElement" scope="default" type="OM" xmlns:tem="http://tempuri.org/"/>
    <property description="listAplicacion" name="listAplicacion" scope="default" type="STRING" value=""/>
    <property description="listUUID" name="listUUID" scope="default" type="STRING" value="["/>
    <!--<property description="listUUID" name="listUUID" scope="default" type="STRING" value=""/>-->
    <foreach expression="$body//tem:crearRequerimientos/tem:crearRequerimiento" xmlns:tem="http://tempuri.org/">
        <sequence>
            <property description="aplicacion" expression="$body//tem:aplicacion/text()" name="aplicacion" scope="default" type="STRING"/>
            <property description="nombrePerfil" expression="$body//tem:nombrePerfil/text()" name="nombrePerfil" scope="default" type="STRING"/>
            <property description="accion" expression="$body//tem:accion/text()" name="accion" scope="default" type="STRING"/>
            <property description="uuid" expression="$body//tem:uuid" name="uuid" scope="default" type="STRING"/>
            <!--<property description="listUUID" expression="fn:concat($ctx:listUUID,$ctx:uuid,':')" name="listUUID" scope="default" type="STRING"/>
            <script description="Make nice strings" language="js"><![CDATA[var log = mc.getServiceLog();
            makeAplicaciones();
            makeUUIDS();
            
            function makeAplicaciones(){
            	var listAplicacion= mc.getProperty("listAplicacion");
            
            	var aplicacion= mc.getProperty("aplicacion");
           	 	var nombrePerfil= mc.getProperty("nombrePerfil");
            	var accion= mc.getProperty("accion");
            
            	listAplicacion=listAplicacion+accion+" - "+aplicacion+" - "+nombrePerfil +"\n";
            	mc.setProperty("listAplicacion",listAplicacion.toString());
            }
            
            function makeUUIDS(){
            	var listUUID= mc.getProperty("listUUID");
            }]]></script>-->
            <property name="listAplicacion" expression="concat($ctx:listAplicacion, $ctx:accion, ' - ', $ctx:aplicacion, ' - ', $ctx:nombrePerfil, '&#xd;&#xa;')"/>
            <property name="listUUID" expression="concat($ctx:listUUID, '{&quot;uuid&quot;: &quot;', $ctx:uuid, '&quot; },')"/>
        </sequence>
    </foreach>
    <filter xpath="string-length($ctx:listUUID) > 1" regex="true">
        <then>
            <property name="listUUID" expression="substring($ctx:listUUID, 1, string-length($ctx:listUUID)-1 )" />
        </then>
        <else/>
    </filter>
    <property description="uuids" name="uuids" scope="default" type="STRING" expression="concat($ctx:listUUID , ']')"/>
    <!--<script description="Make uuids array" language="js"><![CDATA[var log = mc.getServiceLog(); 
    var listUUID=mc.getProperty("listUUID");
    
    var arrayUUID = listUUID.split(":");
    var uuids="[";
    for(var i=0;i<arrayUUID.length;i++){
    	uuids=uuids+'{'+'"uuid":'+'"'+arrayUUID[i]+'"'+'}';
    	if((i+1)!=arrayUUID.length){
    		uuids=uuids+',';
    	}
    }
    uuids=uuids+']';
  	mc.setProperty("uuids",uuids.toString());]]></script>-->
    <log description="Log listAplicacion" level="custom">
        <property expression="$ctx:listAplicacion" name="listAplicacion"/>
        <property expression="$ctx:uuids" name="uuids"/>
    </log>
    <payloadFactory description="Description" media-type="xml">
        <format>
            <Description><![CDATA[
Accion: $1
Usuario: $2
Nombre Completo: $3
Identificacion: $4
Celular: $5
Compania: $6
Division: $7
Area:$8
Departamento: $9
Cargo: $10
Centro de Costos: $11
Perfil Global: $12
Ambiente: $13
Aplicaciones Accion - Aplicacion - Perfil: 
$14]]></Description>
        </format>
        <args>
            <arg evaluator="xml" expression="$ctx:firstElement/tem:origen/text()" xmlns:tem="http://tempuri.org/"/>
            <arg evaluator="xml" expression="$ctx:firstElement/tem:tellerName/text()" xmlns:tem="http://tempuri.org/"/>
            <arg evaluator="xml" expression="fn:concat($ctx:firstElement/tem:apellidosEmpleado/text(),' ', $ctx:firstElement/tem:nombresEmpleado/text())" xmlns:tem="http://tempuri.org/"/>
            <arg evaluator="xml" expression="$ctx:firstElement/tem:identificacion/text()" xmlns:tem="http://tempuri.org/"/>
            <arg evaluator="xml" expression="$ctx:firstElement/tem:celular/text()" xmlns:tem="http://tempuri.org/"/>
            <arg evaluator="xml" expression="$ctx:firstElement/tem:nombreCompania/text()" xmlns:tem="http://tempuri.org/"/>
            <arg evaluator="xml" expression="$ctx:firstElement/tem:nombreDivision/text()" xmlns:tem="http://tempuri.org/"/>
            <arg evaluator="xml" expression="$ctx:firstElement/tem:nombreArea/text()" xmlns:tem="http://tempuri.org/"/>
            <arg evaluator="xml" expression="$ctx:firstElement/tem:nombreDepartamento/text()" xmlns:tem="http://tempuri.org/"/>
            <arg evaluator="xml" expression="$ctx:firstElement/tem:cargo/text()" xmlns:tem="http://tempuri.org/"/>
            <arg evaluator="xml" expression="$ctx:firstElement/tem:nombreCentroCosto/text()" xmlns:tem="http://tempuri.org/"/>
            <arg evaluator="xml" expression="$ctx:firstElement/tem:perfilGlobal/text()" xmlns:tem="http://tempuri.org/"/>
            <arg evaluator="xml" expression="$ctx:firstElement/tem:ambiente/text()" xmlns:tem="http://tempuri.org/"/>
            <arg evaluator="xml" expression="$ctx:listAplicacion"/>
        </args>
    </payloadFactory>
    <property description="description" expression="$body//*" name="description" scope="default" type="STRING"/>
    <payloadFactory description="Requerimientos Request" media-type="xml">
        <format>
            <ns:CreateIM_RMRequest ignoreEmptyElements="true" updateconstraint="-1" xmlns:ns="http://schemas.hp.com/SM/7">
                <ns:model>
                    <ns:keys>
                        <ns:Number type="String"/>
                    </ns:keys>
                    <ns:instance>
                        <ns:RequestedFor type="String">$1</ns:RequestedFor>
                        <ns:RequestorName type="String">$2</ns:RequestorName>
                        <ns:Category type="String">$3</ns:Category>
                        <ns:Subcategory type="String">$4</ns:Subcategory>
                        <ns:Model type="String">$5</ns:Model>
                        <ns:AssignedGroup type="String">$6</ns:AssignedGroup>
                        <ns:BriefDescription type="String">$7</ns:BriefDescription>
                        <ns:Description type="Array">
                            <ns:Description type="String">$8</ns:Description>
                        </ns:Description>
                        <ns:Status type="String">$9</ns:Status>
                        <ns:ApprovalStatus type="String">$10</ns:ApprovalStatus>
                        <ns:CurrentPhase type="String">$11</ns:CurrentPhase>
                        <ns:AgreementIds type="Array">
                            <ns:AgreementIds type="Decimal">$12</ns:AgreementIds>
                        </ns:AgreementIds>
                        <ns:AssignedTo type="String">$13</ns:AssignedTo>
                    </ns:instance>
                </ns:model>
            </ns:CreateIM_RMRequest>
        </format>
        <args>
            <arg evaluator="xml" expression="$ctx:firstElement/tem:tellerName/text()" xmlns:tem="http://tempuri.org/"/>
            <arg evaluator="xml" expression="$ctx:firstElement/tem:usuarioAplicacion/text()" xmlns:tem="http://tempuri.org/"/>
            <arg value="Usuarios y Accesos"/>
            <arg value="Usuarios"/>
            <arg evaluator="xml" expression="$ctx:firstElement/tem:origen/text()" xmlns:tem="http://tempuri.org/"/>
            <arg value="TEC_N2_ADMINISTRACION CLAVES"/>
            <arg evaluator="xml" expression="fn:concat('Estimados, favor realizar: ',$ctx:firstElement/tem:origen/text(), ' en los siguientes sistemas.')" xmlns:tem="http://tempuri.org/"/>
            <arg evaluator="xml" expression="get-property('description')" xmlns:tem="http://tempuri.org/"/>
            <arg value="Open"/>
            <arg value="approved"/>
            <arg value="Logging"/>
            <arg value="177"/>
            <arg value="usrssi"/>
        </args>
    </payloadFactory>
    <property description="Authorization" expression="fn:concat('Basic ', base64Encode(fn:concat(get-property('HP_USER'),':',get-property('HP_PASSWORD'))))" name="Authorization" scope="transport" type="STRING" xmlns:ns="http://org.apache.synapse/xsd"/>
    <header name="Action" scope="default" value="Create"/>
    <log description="Requirement request" level="full"/>
    <call>
        <endpoint key="GIRequerimientos_EP"/>
    </call>
    <log description="Response Requirement" level="full"/>
    <enrich description="requirement_response">
        <source clone="true" type="body"/>
        <target property="requirement_response" type="property"/>
    </enrich>
    <property description="uri.var.resourcepath" name="uri.var.resourcepath" scope="default" type="STRING" value="TaskProvisioningManual"/>
    <filter regex=".*20.*" source="get-property('axis2', 'HTTP_SC')">
        <then>
            <property description="requirement_number" expression="$body//ns:CreateIM_RMResponse/ns:model/ns:keys/ns:Number" name="requirement_number" scope="default" type="STRING" xmlns:ns="http://schemas.hp.com/SM/7"/>
            <payloadFactory description="Requirement OK" media-type="json">
                <format>{
					"TaskProvisioningManual": {
					"uuids": $1,
					"ticketDate": "$2",
					"ticketNumber": "$3",
					"ticketContent": "$4",
					"ticketError": "$5"
					}
					}</format>
                <args>
                    <arg evaluator="xml" expression="get-property('uuids')"/>
                    <arg evaluator="xml" expression="get-property(&quot;SYSTEM_DATE&quot;, &quot;yyyy-MM-dd'T'HH:mm:ss.SSSXXX&quot;)"/>
                    <arg evaluator="xml" expression="get-property('requirement_number')"/>
                    <arg evaluator="xml" expression="base64Encode(get-property('requirement_response'))"/>
                    <arg value="ERROR TICKET GENERADO OK"/>
                </args>
            </payloadFactory>
        </then>
        <else>
            <payloadFactory description="Requirement ERROR" media-type="json">
                <format>{
					"TaskProvisioningManual": {
					"uuids": $1,
					"ticketDate": "$2",
					"ticketNumber": "$3",
					"ticketContent": "$4",
					"ticketError": "$5"
					}
					}</format>
                <args>
                    <arg evaluator="xml" expression="get-property('uuids')"/>
                    <arg evaluator="xml" expression="get-property(&quot;SYSTEM_DATE&quot;, &quot;yyyy-MM-dd'T'HH:mm:ss.SSSXXX&quot;)"/>
                    <arg value="-1"/>
                    <arg evaluator="xml" expression="base64Encode(get-property('requirement_response'))"/>
                    <arg value="ERROR TICKET NO GENERADO"/>
                </args>
            </payloadFactory>
        </else>
    </filter>
    <log description="Tareas Payload" level="custom">
        <property expression="json-eval($.)" name="tareas_payload"/>
    </log>
    <property action="remove" description="Remove Content-Encoding" name="Content-Encoding" scope="transport"/>
    <property action="remove" description="Remove Accept-Encoding" name="Accept-Encoding" scope="transport"/>
    <sequence key="GITareas_Seq"/>
    <log description="Log Response" level="full"/>
</sequence>
