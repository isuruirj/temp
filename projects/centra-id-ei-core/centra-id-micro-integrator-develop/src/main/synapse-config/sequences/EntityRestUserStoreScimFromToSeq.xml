<?xml version="1.0" encoding="UTF-8"?>
<sequence name="RestUserStoreScimFromToSeq" onError="FaultSeq" trace="disable" xmlns="http://ws.apache.org/ns/synapse">
    <log level="custom" category="DEBUG">
        <property name="RestUserStoreScimFromToSeq" value="Inicio.." />
    </log>
    <property action="remove" name="REST_URL_POSTFIX" scope="axis2" />
    <property name="messageType" scope="axis2" type="STRING" value="application/xml" />
    <property name="Accept" scope="transport" type="STRING" value="application/xml" />
    <property action="remove" name="Content-Type" scope="transport" />
    <property expression="$ctx:query.param.orderby" name="uri.var.orderby" scope="default" type="STRING" />
    <property expression="$ctx:query.param.id" name="id" scope="default" type="STRING" />
    <property expression="$ctx:query.param.username" name="username" scope="default" type="STRING" />
    <property expression="$ctx:query.param.scim" name="scim" scope="default" type="STRING" />
    <property expression="$ctx:query.param.domain" name="domain" scope="default" type="STRING" />
    <property expression="$ctx:query.param.tellerNumber" name="tellerNumber" scope="default" type="STRING" />
    <property expression="$ctx:query.param.tellerName" name="tellerName" scope="default" type="STRING" />
    <property expression="$ctx:query.param.valid" name="valid" scope="default" type="STRING" />
    <script language="nashornJs"><![CDATA[
        @add.where.js.function
        function operatorType(value) {
            if(value.indexOf("*")!=-1 ) {
                return " LIKE ";
            } else {
                return " = ";
            }
        }
        var log = mc.getServiceLog();
        var where = " WHERE restUserStoreScim.valid=1 ";
        var innerJoin = "";
        where += addWhere("id","Integer","restUserStoreScim","id");
        where += addWhere("username","String","restUserStoreScim","username");
        where += addWhere("scim","String","restUserStoreScim","scim");
        where += addWhere("domain","String","restUserStoreScim","domain");
        where += addWhere("tellerNumber","String","restUserStoreScim","teller_number");
        where += addWhere("tellerName","String","restUserStoreScim","teller_name");
        where += addWhere("valid","Integer","restUserStoreScim","valid");
        mc.setProperty("uri.var.whereclause",where);
        mc.setProperty("uri.var.innerjoinclause",innerJoin);

        if(!mc.getProperty("uri.var.orderby")){
            mc.setProperty("uri.var.orderby","restUserStoreScim.id");
        } else {
            mc.setProperty("uri.var.orderby","restUserStoreScim."+mc.getProperty("uri.var.orderby"));
        }

        // FROM TO
        var fromto = "OFFSET "+mc.getProperty("uri.var.from")+" ROWS FETCH NEXT "+mc.getProperty("uri.var.to")+" ROWS ONLY";
        mc.setProperty("uri.var.fromto",fromto);
        log.debug(where);]]></script>
    <call>
        <endpoint name="RestUserStoreScimDSS_Endpoint" template="HTTPEndpointGetTemplate"
              uri="{uri.var.dataServiceHost}/provisioning.rest-user-store-scim.ds.HTTPEndpoint/GetFromToRestUserStoreScim?whereclause={uri.var.whereclause}&amp;orderby={uri.var.orderby}&amp;fromto={uri.var.fromto}&amp;innerjoinclause={uri.var.innerjoinclause}" />

    </call>
    <property expression="json-eval($.Fault.faultcode)" name="faultCode" scope="default" type="STRING" />
    <filter regex="true" source="boolean(get-property('faultCode'))">
        <then>
            <sequence key="FaultSeq" />
        </then>
        <else>
            <xslt key="gov:/centra-id/xslt/dssFilter.xsl" />
            <property name="messageType" scope="axis2" type="STRING" value="application/json"/>
            <property name="HTTP_SC" scope="axis2" type="STRING" value="200" />
        </else>
    </filter>
    <log level="custom" category="DEBUG">
        <property name="RestUserStoreScimFromToSeq" value="Fin.." />
    </log>
</sequence>
