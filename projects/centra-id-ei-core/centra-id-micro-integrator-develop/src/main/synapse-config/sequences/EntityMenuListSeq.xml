<?xml version="1.0" encoding="UTF-8"?>
<sequence name="MenuListSeq" onError="FaultSeq" trace="disable" xmlns="http://ws.apache.org/ns/synapse">
    <log level="custom" category="DEBUG">
        <property name="MenuListSeq" value="Inicio.." />
    </log>
    <property action="remove" name="REST_URL_POSTFIX" scope="axis2" />
    <property name="messageType" scope="axis2" type="STRING" value="application/xml" />
    <property name="Accept" scope="transport" type="STRING" value="application/xml" />
    <property action="remove" name="Content-Type" scope="transport" />
    <property expression="$ctx:query.param.orderby" name="uri.var.orderby" scope="default" type="STRING" />
    <property expression="$ctx:query.param.id" name="id" scope="default" type="STRING" />
    <property expression="$ctx:query.param.title" name="title" scope="default" type="STRING" />
    <property expression="$ctx:query.param.translate" name="translate" scope="default" type="STRING" />
    <property expression="$ctx:query.param.type" name="type" scope="default" type="STRING" />
    <property expression="$ctx:query.param.icon" name="icon" scope="default" type="STRING" />
    <property expression="$ctx:query.param.url" name="url" scope="default" type="STRING" />
    <property expression="$ctx:query.param.app" name="app" scope="default" type="STRING" />
    <property expression="$ctx:query.param.permission" name="permission" scope="default" type="STRING" />
    <property expression="$ctx:query.param.valid" name="valid" scope="default" type="STRING" />
    <script language="nashornJs"><![CDATA[
        @add.where.js.function
        function operatorType(value) {
            if(value.indexOf("*")!=-1 ) {
                return " LIKE ";
            } else {
                return " = ";
            }
        }
        var log = mc.getServiceLog();
        var where = " WHERE menu.valid=1 ";
        var innerJoin = "";
        where += addWhere("id","Integer","menu","id");
        where += addWhere("title","String","menu","title");
        where += addWhere("translate","String","menu","translate");
        where += addWhere("type","String","menu","type");
        where += addWhere("icon","String","menu","icon");
        where += addWhere("url","String","menu","url");
        where += addWhere("app","String","menu","app");
        where += addWhere("permission","String","menu","permission");
        where += addWhere("valid","Integer","menu","valid");
        mc.setProperty("uri.var.whereclause",where);
        mc.setProperty("uri.var.innerjoinclause",innerJoin);
        if(!mc.getProperty("uri.var.orderby")){
            mc.setProperty("uri.var.orderby","menu.id");
        } else {
            mc.setProperty("uri.var.orderby","menu."+mc.getProperty("uri.var.orderby"));
        }
        log.debug(where);]]></script>
    <call>
        <endpoint name="MenuDSS_Endpoint" template="HTTPEndpointGetTemplate"
              uri="{uri.var.dataServiceHost}/common.menu.ds.HTTPEndpoint/GetAllMenu?whereclause={uri.var.whereclause}&amp;orderby={uri.var.orderby}&amp;innerjoinclause={uri.var.innerjoinclause}" />

    </call>
    <property expression="json-eval($.Fault.faultcode)" name="faultCode" scope="default" type="STRING" />
    <filter regex="true" source="boolean(get-property('faultCode'))">
        <then>
            <sequence key="FaultSeq" />
        </then>
        <else>
            <xslt key="gov:/centra-id/xslt/dssFilter.xsl" />
            <property name="messageType" scope="axis2" type="STRING" value="application/json"/>
            <property name="HTTP_SC" scope="axis2" type="STRING" value="200" />
        </else>
    </filter>
    <log level="custom" category="DEBUG">
        <property name="MenuSeq" value="Fin.." />
    </log>
    <property name="messageType" value="application/json" scope="axis2" type="STRING"/>
    <property name="Access-Control-Allow-Methods" value="GET,PUT,POST,DELETE,PATCH,OPTIONS" scope="transport" type="STRING"/>
    <property name="Access-Control-Allow-Headers" value="Authorization,Access-Control-Allow-Origin,Content-Type" scope="transport" type="STRING"/>
</sequence>
