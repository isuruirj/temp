<?xml version="1.0" encoding="UTF-8"?>
<sequence name="CompanyCountSeq" onError="FaultSeq" trace="disable" xmlns="http://ws.apache.org/ns/synapse">
    <log level="custom" category="DEBUG">
        <property name="CompanyCountSeq" value="Inicio.." />
    </log>
    <property action="remove" name="REST_URL_POSTFIX" scope="axis2" />
    <property name="messageType" scope="axis2" type="STRING" value="application/json" />
    <property name="Accept" scope="transport" type="STRING" value="application/json" />
    <property action="remove" name="Content-Type" scope="transport" />
    <property expression="$ctx:query.param.id" name="id" scope="default" type="STRING" />
    <property expression="$ctx:query.param.code" name="code" scope="default" type="STRING" />
    <property expression="$ctx:query.param.identifier" name="identifier" scope="default" type="STRING" />
    <property expression="$ctx:query.param.businessName" name="businessName" scope="default" type="STRING" />
    <property expression="$ctx:query.param.catalogCompanyType.id" name="catalogCompanyType.id" scope="default" type="STRING" />
    <property expression="$ctx:query.param.catalogCompanyType.code" name="catalogCompanyType.code" scope="default" type="STRING" />
    <property expression="$ctx:query.param.catalogCompanyType.name" name="catalogCompanyType.name" scope="default" type="STRING" />
    <property expression="$ctx:query.param.catalogCompanyType.predetermined" name="catalogCompanyType.predetermined" scope="default" type="STRING" />
    <property expression="$ctx:query.param.catalogCompanyType.ordinal" name="catalogCompanyType.ordinal" scope="default" type="STRING" />
    <property expression="$ctx:query.param.catalogCompanyType.valueText" name="catalogCompanyType.valueText" scope="default" type="STRING" />
    <property expression="$ctx:query.param.catalogCompanyType.valueNumber" name="catalogCompanyType.valueNumber" scope="default" type="STRING" />
    <property expression="$ctx:query.param.catalogCompanyType.valueDate" name="catalogCompanyType.valueDate" scope="default" type="STRING" />
    <property expression="$ctx:query.param.catalogCompanyType.valueBoolean" name="catalogCompanyType.valueBoolean" scope="default" type="STRING" />
    <property expression="$ctx:query.param.catalogCompanyType.catalogType.id" name="catalogCompanyType.catalogType.id" scope="default" type="STRING" />
    <property expression="$ctx:query.param.catalogCompanyType.catalogType.code" name="catalogCompanyType.catalogType.code" scope="default" type="STRING" />
    <property expression="$ctx:query.param.catalogCompanyType.catalogType.name" name="catalogCompanyType.catalogType.name" scope="default" type="STRING" />
    <property expression="$ctx:query.param.catalogCompanyType.catalogType.sortType" name="catalogCompanyType.catalogType.sortType" scope="default" type="STRING" />
    <property expression="$ctx:query.param.catalogCompanyType.catalogType.editable" name="catalogCompanyType.catalogType.editable" scope="default" type="STRING" />
    <property expression="$ctx:query.param.catalogCompanyType.catalogType.valid" name="catalogCompanyType.catalogType.valid" scope="default" type="STRING" />
    <property expression="$ctx:query.param.catalogCompanyType.catalogType.description" name="catalogCompanyType.catalogType.description" scope="default" type="STRING" />
    <property expression="$ctx:query.param.catalogCompanyType.valid" name="catalogCompanyType.valid" scope="default" type="STRING" />
    <property expression="$ctx:query.param.domainName" name="domainName" scope="default" type="STRING" />
    <property expression="$ctx:query.param.status" name="status" scope="default" type="STRING" />
    <property expression="$ctx:query.param.logon" name="logon" scope="default" type="STRING" />
    <property expression="$ctx:query.param.valid" name="valid" scope="default" type="STRING" />
    <script language="nashornJs"><![CDATA[
        @add.where.js.function
        function operatorType(value) {
            if(value.indexOf("*")!=-1 ) {
                return " LIKE ";
            } else {
                return " = ";
            }
        }
        var log = mc.getServiceLog();
        var where = " WHERE company.valid=1 ";
        var innerJoin = "";
        where += addWhere("id","Integer","company","id");
        where += addWhere("code","String","company","code");
        where += addWhere("identifier","String","company","identifier");
        where += addWhere("businessName","String","company","business_name");
        where += addWhere("catalogCompanyType.id","Integer","catalogCompanyType","id");
        where += addWhere("catalogCompanyType.code","String","catalogCompanyType","code");
        where += addWhere("catalogCompanyType.name","String","catalogCompanyType","name");
        where += addWhere("catalogCompanyType.predetermined","Integer","catalogCompanyType","predetermined");
        where += addWhere("catalogCompanyType.ordinal","Integer","catalogCompanyType","ordinal");
        where += addWhere("catalogCompanyType.valueText","String","catalogCompanyType","value_text");
        where += addWhere("catalogCompanyType.valueNumber","Numeric","catalogCompanyType","value_number");
        where += addWhere("catalogCompanyType.valueDate","Date","catalogCompanyType","value_date");
        where += addWhere("catalogCompanyType.valueBoolean","Integer","catalogCompanyType","value_boolean");
        where += addWhere("catalogCompanyType.catalogType.id","Integer","catalogCompanyType_catalogType","id");
        where += addWhere("catalogCompanyType.catalogType.code","String","catalogCompanyType_catalogType","code");
        where += addWhere("catalogCompanyType.catalogType.name","String","catalogCompanyType_catalogType","name");
        where += addWhere("catalogCompanyType.catalogType.sortType","String","catalogCompanyType_catalogType","sort_type");
        where += addWhere("catalogCompanyType.catalogType.editable","Integer","catalogCompanyType_catalogType","editable");
        where += addWhere("catalogCompanyType.catalogType.valid","Integer","catalogCompanyType_catalogType","valid");
        where += addWhere("catalogCompanyType.catalogType.description","String","catalogCompanyType_catalogType","description");
        where += addWhere("catalogCompanyType.valid","Integer","catalogCompanyType","valid");
        where += addWhere("domainName","String","company","domain_name");
        where += addWhere("status","String","company","status");
        where += addWhere("logon","String","company","logon");
        where += addWhere("valid","Integer","company","valid");
        innerJoin += " LEFT JOIN sch_centra_id.CATALOGS catalogCompanyType ON Company.catalog_company_type_id = catalogCompanyType.id";
        innerJoin += " LEFT JOIN sch_centra_id.CATALOGS_TYPES catalogCompanyType_catalogType ON catalogCompanyType.catalog_type_id = catalogCompanyType_catalogType.id";
        mc.setProperty("uri.var.whereclause",where);
        mc.setProperty("uri.var.innerjoinclause",innerJoin);
        log.debug(where);]]></script>

    <property value="sch_centra_id.COMPANIES company" name="uri.var.table" scope="default" type="STRING"/>
    <property value="COUNT" name="uri.var.function" scope="default" type="STRING"/>
    <property value="*" name="uri.var.field" scope="default" type="STRING"/>

    <call>
        <endpoint name="CompanyDSS_Endpoint" template="HTTPEndpointGetTemplate"
              uri="{uri.var.dataServiceHost}/company.company.ds.HTTPEndpoint/GetFunctionResultCompany?function={uri.var.function}&amp;whereclause={uri.var.whereclause}&amp;field={uri.var.field}&amp;table={uri.var.table}&amp;innerjoinclause={uri.var.innerjoinclause}" />

    </call>

    <property expression="json-eval($.Fault.faultcode)" name="faultCode" scope="default" type="STRING"/>
    <filter regex="true" source="boolean(get-property('faultCode'))">
        <then>
            <sequence key="FaultSeq"/>
        </then>
        <else>
            <payloadFactory media-type="json">
                <format>
                    {
                        "count": $1
                    }
                </format>
                <args>
                    <arg evaluator="json" expression="$.result.value"/>
                </args>
            </payloadFactory>
            <property name="HTTP_SC" scope="axis2" type="STRING" value="200"/>
        </else>
    </filter>
    <log level="custom" category="DEBUG">
        <property name="CompanyCountSeq" value="Fin.." />
    </log>
    <respond />
</sequence>
